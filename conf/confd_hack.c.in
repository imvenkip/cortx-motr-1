/*
 * XXX Temporary kludge for "conf-net" demo.
 *
 * This file should be deleted as soon as `confd' service can receive
 * parameter via mero_setup CLI option.
 */
#include "conf/confd_hack.h"
#include "lib/string.h" /* fread, strdup */
#include "lib/errno.h"  /* EFBIG, errno */
#include "lib/misc.h"   /* M0_IN */

M0_INTERNAL enum m0_conf_mode m0_confd_hack_mode = M0_CM_ST;

static const char *conf_filenames[] = {
	[M0_CM_UT] = "@abs_top_srcdir@/conf/ut/conf_str.txt",
	[M0_CM_ST] = "@abs_top_srcdir@/m0t1fs/linux_kernel/st/_conf_str.txt"
};

M0_INTERNAL int m0_conf_str(enum m0_conf_mode mode, const char **out)
{
	static char buf[1024];
	FILE *f;
	int rc;

	M0_PRE(M0_IN(mode, (M0_CM_UT, M0_CM_ST)));

	f = fopen(conf_filenames[mode], "r");
	if (f == NULL)
		return -errno;

	(void)fread(buf, 1, ARRAY_SIZE(buf) - 1, f);
	buf[ARRAY_SIZE(buf) - 1] = '\0';

	if (ferror(f)) {
		rc = -errno;
	} else if (!feof(f)) {
		rc = -EFBIG;
	} else {
		*out = buf;
		return fclose(f);
	}

	(void)fclose(f);
	return rc;
}
