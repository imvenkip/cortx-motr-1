From 6846dfd9027fac43a9cfbebb387208c7bb17070f Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Thu, 27 Feb 2014 21:55:09 +0800
Subject: [PATCH 08/26] layout types may be registered multiple times to
 different layout domains. so, its ref count may not be zero when registering.

---
 layout/layout.c | 12 ++++--------
 1 file changed, 4 insertions(+), 8 deletions(-)

diff --git a/layout/layout.c b/layout/layout.c
index 8901ceb..e7319fa 100644
--- a/layout/layout.c
+++ b/layout/layout.c
@@ -219,7 +219,7 @@ static void layout_type_get(struct m0_layout_domain *ldom,
 
 	m0_mutex_lock(&ldom->ld_lock);
 	M0_PRE(lt == ldom->ld_type[lt->lt_id]);
-//	M0_CNT_INC(lt->lt_ref_count);
+	M0_CNT_INC(lt->lt_ref_count);
 	m0_mutex_unlock(&ldom->ld_lock);
 }
 
@@ -232,7 +232,7 @@ static void layout_type_put(struct m0_layout_domain *ldom,
 
 	m0_mutex_lock(&ldom->ld_lock);
 	M0_PRE(lt == ldom->ld_type[lt->lt_id]);
-//	M0_CNT_DEC(lt->lt_ref_count);
+	M0_CNT_DEC(lt->lt_ref_count);
 	m0_mutex_unlock(&ldom->ld_lock);
 }
 
@@ -245,7 +245,7 @@ static void enum_type_get(struct m0_layout_domain *ldom,
 
 	m0_mutex_lock(&ldom->ld_lock);
 	M0_PRE(let == ldom->ld_enum[let->let_id]);
-//	M0_CNT_INC(let->let_ref_count);
+	M0_CNT_INC(let->let_ref_count);
 	m0_mutex_unlock(&ldom->ld_lock);
 }
 
@@ -258,7 +258,7 @@ static void enum_type_put(struct m0_layout_domain *ldom,
 
 	m0_mutex_lock(&ldom->ld_lock);
 	M0_PRE(let == ldom->ld_enum[let->let_id]);
-//	M0_CNT_DEC(let->let_ref_count);
+	M0_CNT_DEC(let->let_ref_count);
 	m0_mutex_unlock(&ldom->ld_lock);
 }
 
@@ -772,7 +772,6 @@ M0_INTERNAL int m0_layout_type_register(struct m0_layout_domain *dom,
 	M0_PRE(m0_layout__domain_invariant(dom));
 	M0_PRE(lt != NULL);
 	M0_PRE(IS_IN_ARRAY(lt->lt_id, dom->ld_type));
-//	M0_PRE(lt->lt_ref_count == 0);
 	M0_PRE(lt->lt_ops != NULL);
 
 	M0_ENTRY("Layout-type-id %lu, domain %p",
@@ -811,7 +810,6 @@ M0_INTERNAL void m0_layout_type_unregister(struct m0_layout_domain *dom,
 	M0_ENTRY("Layout-type-id %lu, domain %p",
 		 (unsigned long)lt->lt_id, dom);
 	m0_mutex_lock(&dom->ld_lock);
-//	M0_PRE(lt->lt_ref_count == 0);
 	lt->lt_ops->lto_unregister(dom, lt);
 	dom->ld_type[lt->lt_id] = NULL;
 	max_recsize_update(dom);
@@ -827,7 +825,6 @@ M0_INTERNAL int m0_layout_enum_type_register(struct m0_layout_domain *dom,
 	M0_PRE(m0_layout__domain_invariant(dom));
 	M0_PRE(let != NULL);
 	M0_PRE(IS_IN_ARRAY(let->let_id, dom->ld_enum));
-//	M0_PRE(let->let_ref_count == 0);
 	M0_PRE(let->let_ops != NULL);
 
 	M0_ENTRY("Enum_type_id %lu, domain %p",
@@ -865,7 +862,6 @@ M0_INTERNAL void m0_layout_enum_type_unregister(struct m0_layout_domain *dom,
 	M0_ENTRY("Enum_type_id %lu, domain %p",
 		 (unsigned long)let->let_id, dom);
 	m0_mutex_lock(&dom->ld_lock);
-//	M0_PRE(let->let_ref_count == 0);
 	let->let_ops->leto_unregister(dom, let);
 	dom->ld_enum[let->let_id] = NULL;
 	max_recsize_update(dom);
-- 
1.8.3.2

