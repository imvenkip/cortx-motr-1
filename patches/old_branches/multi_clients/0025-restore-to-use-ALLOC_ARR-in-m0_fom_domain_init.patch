From 4b6c31f11816370bfc11a5562cf9dd5470817828 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Mon, 17 Mar 2014 14:13:36 +0800
Subject: [PATCH 25/26] restore to use ALLOC_ARR in m0_fom_domain_init().

---
 fop/fom.c                                   | 5 +++--
 m0t1fs/linux_kernel/m0t1fs.c                | 3 ++-
 m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh | 2 +-
 3 files changed, 6 insertions(+), 4 deletions(-)

diff --git a/fop/fom.c b/fop/fom.c
index e5baeac..c8eebd2 100644
--- a/fop/fom.c
+++ b/fop/fom.c
@@ -250,7 +250,7 @@ const struct m0_addb_monitor_ops fop_rate_monitor_ops = {
 
 static int fop_rate_monitor_init(struct m0_reqh         *reqh,
 				 struct m0_addb_monitor *monitor,
-				 uint32_t               fop_rate_monitor_key)
+				 uint32_t                fop_rate_monitor_key)
 {
 #undef FOP_RATE_STATS_NR
 #define FOP_RATE_STATS_NR (sizeof(fop_rate_stats_sum) / sizeof(uint64_t))
@@ -1029,7 +1029,8 @@ M0_INTERNAL int m0_fom_domain_init(struct m0_fom_domain *dom)
 	m0_processors_online(&onln_cpu_map);
 	M0_LOG(M0_DEBUG, "sizeof struct m0_fom_locality = %d cpu_max = %d",
 			 (int)(sizeof **dom->fd_localities), (int)cpu_max);
-	dom->fd_localities = m0_alloc(sizeof(*dom->fd_localities) * cpu_max);
+	FOP_ALLOC_ARR(dom->fd_localities, cpu_max, FOM_DOMAIN_INIT,
+			&m0_fop_addb_ctx);
 	if (dom->fd_localities == NULL) {
 		m0_bitmap_fini(&onln_cpu_map);
 		return -ENOMEM;
diff --git a/m0t1fs/linux_kernel/m0t1fs.c b/m0t1fs/linux_kernel/m0t1fs.c
index e9a6375..4ae5434 100644
--- a/m0t1fs/linux_kernel/m0t1fs.c
+++ b/m0t1fs/linux_kernel/m0t1fs.c
@@ -43,7 +43,8 @@ char *local_addr = "0@lo:12345:45:";
 
 module_param(local_addr, charp, S_IRUGO);
 MODULE_PARM_DESC(local_addr, "End-point address of m0t1fs "
-		 "e.g. 172.18.50.40@o2ib1:12345:34:1");
+		 "e.g. 172.18.50.40@o2ib1:12345:34:\n"
+		 "the tmid will be generated and filled by every mount");
 
 uint32_t tm_recv_queue_min_len = M0_NET_TM_RECV_QUEUE_DEF_LEN;
 module_param(tm_recv_queue_min_len , int, S_IRUGO);
diff --git a/m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh b/m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh
index 184a58a..d6c9be9 100644
--- a/m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh
+++ b/m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh
@@ -21,7 +21,7 @@ MERO_MODULE=m0mero
 
 
 # kernel space tracing parameters
-MERO_MODULE_TRACE_MASK='m0t1fs'
+MERO_MODULE_TRACE_MASK='!all'
 MERO_TRACE_PRINT_CONTEXT=short
 MERO_TRACE_LEVEL=call+
 
-- 
1.8.3.2

