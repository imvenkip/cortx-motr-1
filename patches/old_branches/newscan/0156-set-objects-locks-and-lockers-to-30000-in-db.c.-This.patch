From 8a2748b5c3b53bf8fcbdb9642af52fdf458533f2 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Sun, 10 Jul 2011 10:00:28 -0600
Subject: [PATCH 156/158] - set objects, locks and lockers to 30000 in db.c.
 This fixes important scalability issue while processing initial scan tables;
 - killed all the versioning and missed objects handling in mdservice. All
 this is done in a different way thanks to initial scan. This simplifies
 things a lot. By now mdservice and mdstore are dumb metadata drivers as it
 was planned before; - don't use attr->ca_linklen, we can use ca_size for
 this; - killed all the code related to zombies handlimg. No more zombies in
 namespace, scan handles this before getting to namespace; - kill b_prev abd
 b_bias from all fops;

---
 addb/addb.c          |   2 +-
 cob/cob.c            |   2 -
 cob/cob.h            |   3 -
 db/db.c              |  13 ++
 mdservice/md_foms.c  | 416 ++++++---------------------------------------------
 mdservice/md_fops.ff |   2 -
 mdstore/mdstore.c    |   6 +-
 mdstore/mdstore.h    |   1 -
 mdstore/ut/lustre.c  |   1 -
 9 files changed, 59 insertions(+), 387 deletions(-)

diff --git a/addb/addb.c b/addb/addb.c
index 3f35226..5cedfff 100644
--- a/addb/addb.c
+++ b/addb/addb.c
@@ -47,7 +47,7 @@
 /*
  * This can be changed.
  */
-enum c2_addb_ev_level c2_addb_level_default = AEL_ERROR;
+enum c2_addb_ev_level c2_addb_level_default = AEL_NOTE;
 C2_EXPORTED(c2_addb_level_default);
 
 /**
diff --git a/cob/cob.c b/cob/cob.c
index 6ac3283..6176b71 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -1186,8 +1186,6 @@ int c2_cob_update_name(struct c2_cob        *cob,
         if (rc)
                 goto out;
 
-        nsrec.cnr_zombie = 0;
-        
         c2_db_pair_setup(&pair, &cob->co_dom->cd_namespace,
                          tgtkey, c2_cob_nskey_size(tgtkey),
                          &nsrec, sizeof nsrec);
diff --git a/cob/cob.h b/cob/cob.h
index c88aa37..c5d5dbc 100644
--- a/cob/cob.h
+++ b/cob/cob.h
@@ -223,11 +223,9 @@ struct c2_cob_attr {
         uint64_t          ca_blksize; /**< blocksize for filesystem I/O. */
         uint64_t          ca_blocks;  /**< number of blocks allocated. */
         uint64_t          ca_version; /**< object version */
-        int               ca_zombie;  /**< object is zombie. */
         char             *ca_name;    /**< object name */
         int32_t           ca_namelen; /**< name length */
         char             *ca_link;    /**< symlink */
-        uint16_t          ca_linklen; /**< symlink length */
 };
 
 /** 
@@ -253,7 +251,6 @@ struct c2_cob_nsrec {
         uint32_t          cnr_linkno;  /**< number of link for the name */
         uint32_t          cnr_nlink;   /**< number of hard links. */
         uint32_t          cnr_cntr;    /**< linkno allocation counter. */
-        uint32_t          cnr_zombie;  /**< this object is marked to be killed. */
         uint64_t          cnr_omgid;   /**< uid/gid/mode slot reference */
         uint64_t          cnr_version; /**< attributes version, used for repl. */
         uint32_t          cnr_rdev;    /**< device ID (if special file). */
diff --git a/db/db.c b/db/db.c
index a205ab2..865227a 100644
--- a/db/db.c
+++ b/db/db.c
@@ -219,6 +219,13 @@ static int dbenv_tol_log_stat[] = { 0 };
 static int dbenv_tol_memp_trickle[] = { 0 };
 static int dbenv_tol_set_alloc[] = { 0 };
 static int dbenv_tol_txn_checkpoint[] = { 0 };
+static int dbenv_tol_set_lk_max_objects[] = { 0 };
+static int dbenv_tol_set_lk_max_lockers[] = { 0 };
+static int dbenv_tol_set_lk_max_locks[] = { 0 };
+
+#define C2_DBENV_MAX_LOCKS      30000
+#define C2_DBENV_MAX_OBJECTS    30000
+#define C2_DBENV_MAX_LOCKERS    30000
 
 static void *never(void *ptr, size_t size)
 {
@@ -290,6 +297,12 @@ static int dbenv_setup(struct c2_dbenv *env, const char *name, uint64_t flags)
 		C2_ASSERT(result == 0);
 		result = DBENV_CALL(env, set_alloc, c2_alloc, never, c2_free);
 		C2_ASSERT(result == 0);
+		result = DBENV_CALL(env, set_lk_max_objects, C2_DBENV_MAX_OBJECTS);
+		C2_ASSERT(result == 0);
+		result = DBENV_CALL(env, set_lk_max_locks, C2_DBENV_MAX_LOCKS);
+		C2_ASSERT(result == 0);
+		result = DBENV_CALL(env, set_lk_max_lockers, C2_DBENV_MAX_LOCKERS);
+		C2_ASSERT(result == 0);
 
 		/*
 		 * XXX todo
diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index 1f94155..5fd75c8 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -107,7 +107,6 @@ static void c2_md_fop_cob2attr(struct c2_cob_attr *attr,
         if (body->b_valid & C2_MD_BLOCKS)
                 attr->ca_blocks = body->b_blocks;
         attr->ca_version = body->b_version;
-        attr->ca_zombie = 0;
 }
 
 static void c2_md_fop_attr2cob(struct c2_fop_cob *body, 
@@ -151,68 +150,28 @@ static int c2_md_create(struct c2_md_store  *md,
                         struct c2_db_tx     *tx)
 {
         struct c2_cob *scob = NULL;
-        struct c2_cob *ncob = NULL;
-        int rc;
+        int            rc;
 
-restart:
-        rc = c2_md_store_lookup(md, pfid, attr->ca_name, 
-                                attr->ca_namelen, &ncob, tx);
+        rc = c2_md_store_locate(md, tfid, &scob, 
+                                C2_MD_LOCATE_STORED, tx);
         if (rc == -ENOENT) {
                 /*
-                 * No name, let's check if we have stat data name.
+                 * No file at all, let's create it no matter
+                 * where we are called from, scan or changelog.
                  */
-                rc = c2_md_store_locate(md, tfid, &scob, 
-                                        C2_MD_LOCATE_STORED, tx);
-                if (rc == -ENOENT) {
-                        /*
-                         * No file at all, let's create it no matter
-                         * where we are called from, scan or changelog.
-                         */
-                        rc = c2_md_store_create(md, pfid, attr, &scob, tx);
-                } else if (rc == 0) {
-                        /*
-                         * There is statdata name, this must be hardlink
-                         * either from scan or changelog.
-                         */
-                        rc = c2_md_store_link(md, pfid, scob, attr->ca_name,
-                                              attr->ca_namelen, 0, tx);
-                        /*
-                         * Each operation changes target attributes (times).
-                         * We want to keep them up-to-date.
-                         */
-                        if (rc == 0)
-                                rc = c2_md_store_setattr(md, scob, attr, tx);
-                }
+                rc = c2_md_store_create(md, pfid, attr, &scob, tx);
         } else if (rc == 0) {
-                rc = c2_md_store_locate(md, ncob->co_fid, &scob, 
-                                        C2_MD_LOCATE_STORED, tx);
-                if (rc) {
-                        c2_cob_put(ncob);
-                        return rc;
-                }
-
                 /*
-                 * Do we need to do anything at all?
+                 * There is statdata name, this must be hardlink.
                  */
-                if (attr->ca_version > scob->co_nsrec.cnr_version) {
-                        /*
-                         * Name exists and does not matter if it
-                         * belongs to our object or not. If it is
-                         * ours then it should have to be marked
-                         * zombie. Anyways we want to kill it and
-                         * create again.
-                         */
-                        rc = c2_md_store_unlink(md, pfid, scob, 
-                                                attr->ca_name,
-                                                attr->ca_namelen,
-                                                tx);
-                        c2_cob_put(scob);
-                        c2_cob_put(ncob);
-                        if (rc)
-                                return rc;
-                        goto restart;
-                }
-                c2_cob_put(ncob);
+                rc = c2_md_store_link(md, pfid, scob, attr->ca_name,
+                                      attr->ca_namelen, tx);
+                /*
+                 * Each operation changes target attributes (times).
+                 * We want to keep them up-to-date.
+                 */
+                if (rc == 0)
+                        rc = c2_md_store_setattr(md, scob, attr, tx);
         }
         if (scob)
                 c2_cob_put(scob);
@@ -257,13 +216,8 @@ static int c2_md_create_fom_state(struct c2_fom *fom)
         attr.ca_name = req->c_name.s_buf;
         attr.ca_namelen = req->c_name.s_len;
         
-        if (S_ISLNK(body->b_mode)) {
+        if (S_ISLNK(attr.ca_mode))
                 attr.ca_link = req->c_target.s_buf;
-                attr.ca_linklen = req->c_target.s_len;
-        } else {
-                attr.ca_link = NULL;
-                attr.ca_linklen = 0;
-        }
 
         c2_md_make_fid(&pfid, &body->b_pfid);
         c2_md_make_fid(&tfid, &body->b_tfid);
@@ -340,7 +294,6 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
         struct c2_fop_cob        *body;
         struct c2_site           *site;
         struct c2_cob            *scob = NULL;
-        struct c2_cob            *ncob = NULL;
         struct c2_fop_unlink     *req;
         struct c2_fop_unlink_rep *rep;
         struct c2_fom_md         *fom_obj;
@@ -381,89 +334,18 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
         c2_md_make_fid(&pfid, &body->b_pfid);
         c2_md_make_fid(&tfid, &body->b_tfid);
 
-        /*
-         * Mark name zombie, replicator will kill it later.
-         */
-        if (body->b_bias & C2_MD_BIAS_SCAN_IN_PROGRESS) {
-                rc = c2_md_store_lookup(md, &pfid, attr.ca_name,
-                                        attr.ca_namelen, &ncob, tx);
-                /*
-                 * If no name found we need to create it with zombie
-                 * flag set to 1 or initial scan can create it later,
-                 * which is not what we want.
-                 */
-                if (rc == -ENOENT) {
-                        rc = c2_md_store_locate(md, &tfid, &scob, 
-                                                C2_MD_LOCATE_STORED,
-                                                tx);
-                        if (rc == -ENOENT) {
-                                attr.ca_zombie = 1;
-                                attr.ca_nlink = 1;
-                                rc = c2_md_store_create(md, &pfid,
-                                                        &attr, &scob, tx);
-                        } else if (rc == 0) {
-                                rc = c2_md_store_link(md, &pfid, scob, 
-                                                      attr.ca_name,
-                                                      attr.ca_namelen,
-                                                      1, tx);
-                                /*
-                                 * We just added a link, need to update object
-                                 * attributes.
-                                 */
-                                if (rc == 0 &&
-                                    attr.ca_version > scob->co_nsrec.cnr_version)
-                                        rc = c2_md_store_setattr(md, scob, &attr,
-                                                                 tx);
-                        }
-                        if (scob)
-                                c2_cob_put(scob);
-                } else if (rc == 0) {
-                        /*
-                         * Mark name zombie, it will be killed after the scan.
-                         */
-                        ncob->co_nsrec.cnr_zombie = 1;
-                        rc = c2_cob_update(ncob, &ncob->co_nsrec, NULL, 
-                                           NULL, tx);
-                        if (rc) {
-                                c2_cob_put(ncob);
-                                goto out;
-                        }
-                        /*
-                         * Update attributes. Name may be occupid by some
-                         * another object, let's use fid from ncob instead
-                         * of passed tfid.
-                         */
-                        rc = c2_md_store_locate(md, ncob->co_fid, &scob, 
-                                                C2_MD_LOCATE_STORED, tx);
-                        if (rc) {
-                                c2_cob_put(ncob);
-                                goto out;
-                        }
-
-                        /*
-                         * We cannot update foreign object with our attributes.
-                         * Let's check this.
-                         */
-                        if (c2_fid_eq(&tfid, ncob->co_fid) && attr.ca_nlink > 0 &&
-                            attr.ca_version > scob->co_nsrec.cnr_version)
-                                rc = c2_md_store_setattr(md, scob, &attr, tx);
-                        c2_cob_put(scob);
-                        c2_cob_put(ncob);
-                }
-        } else {
-                rc = c2_md_store_locate(md, &tfid, &scob, 
-                                        C2_MD_LOCATE_STORED,
-                                        &ctx->fc_tx->tx_dbtx);
-                if (rc)
-                        goto out;
+        rc = c2_md_store_locate(md, &tfid, &scob, 
+                                C2_MD_LOCATE_STORED,
+                                &ctx->fc_tx->tx_dbtx);
+        if (rc)
+                goto out;
                 
-                rc = c2_md_store_unlink(md, &pfid, scob, attr.ca_name,
-                                        attr.ca_namelen, tx);
-                if (rc == 0 && scob->co_nsrec.cnr_nlink > 0 &&
-                    attr.ca_version > scob->co_nsrec.cnr_version)
-                        rc = c2_md_store_setattr(md, scob, &attr, tx);
-                c2_cob_put(scob);
-        }
+        rc = c2_md_store_unlink(md, &pfid, scob, attr.ca_name,
+                                attr.ca_namelen, tx);
+        if (rc == 0 && scob->co_nsrec.cnr_nlink > 0 &&
+            attr.ca_version > scob->co_nsrec.cnr_version)
+                rc = c2_md_store_setattr(md, scob, &attr, tx);
+        c2_cob_put(scob);
         
         if (rc == 0) {
                 svc = fom->fo_fop_ctx->fc_service;
@@ -515,179 +397,6 @@ static int c2_md_rename(struct c2_md_store  *md,
         return rc;
 }
 
-static int c2_md_rename_src(struct c2_md_store *md, 
-                            struct c2_fid      *pfid_tgt, 
-                            struct c2_fid      *pfid_src,
-                            struct c2_fid      *tfid_tgt, 
-                            struct c2_fid      *tfid_src,
-                            struct c2_cob_attr *tattr, 
-                            struct c2_cob_attr *sattr, 
-                            struct c2_cob      *tcob,
-                            int                 scan, 
-                            struct c2_db_tx    *tx)
-{
-        struct c2_cob *sncob = NULL;
-        struct c2_cob *scob = NULL;
-        int rc;
-        
-        C2_ASSERT(tcob != NULL);
-
-        rc = c2_md_store_lookup(md, pfid_src, sattr->ca_name, 
-                                sattr->ca_namelen, &sncob, tx);
-        if (c2_fid_eq(tfid_tgt, tfid_src)) {
-                if (rc == -ENOENT && scan) {
-                        /*
-                         * Just created tgt with correct name. Let's
-                         * make sure that scan will not re-create src.
-                         */
-                        rc = c2_md_store_link(md, pfid_src, tcob,
-                                              sattr->ca_name,
-                                              sattr->ca_namelen,
-                                              1, tx);
-                } else if (rc == 0) {
-                        /*
-                         * Name exists, let's do normal rename and create
-                         * old name with zombie flag.
-                         */
-                        rc = c2_md_rename(md, pfid_tgt, pfid_src, tfid_tgt,
-                                          tfid_src, tattr, sattr, tcob, tcob,
-                                          tx);
-                        if (rc == 0 && scan) {
-                                /*
-                                 * Src name is gone now but we want to make
-                                 * sure that scan will not re-create it so
-                                 * let's add some zombie name that will be
-                                 * killed after scan.
-                                 */
-                                rc = c2_md_store_link(md, pfid_src, tcob,
-                                                      sattr->ca_name,
-                                                      sattr->ca_namelen,
-                                                      1, tx);
-                        }
-                        c2_cob_put(sncob);
-                }
-        } else {
-                if (rc == -ENOENT) {
-                        rc = c2_md_store_locate(md, tfid_src, &scob, 
-                                                C2_MD_LOCATE_STORED, tx);
-                        if (rc == -ENOENT) {
-                                /*
-                                 * No src object at all, let's create one.
-                                 */
-                                rc = c2_md_store_create(md, pfid_src,
-                                                        sattr, &scob, tx);
-                                if (rc)
-                                        return rc;
-                                                
-                                /*
-                                 * Both object and names exist, let's do
-                                 * normal rename.
-                                 */
-                                rc = c2_md_rename(md, pfid_tgt, pfid_src, 
-                                                  tfid_tgt, tfid_src,
-                                                  tattr, sattr, tcob,
-                                                  scob, tx);
-                                if (rc == 0 && scan) {
-                                        /*
-                                         * Src name is gone now but we want to
-                                         * make sure that scan will not re-create
-                                         * it so let's add some zombie name that
-                                         * will be killed after scan.
-                                         */
-                                        rc = c2_md_store_link(md, pfid_src, scob,
-                                                              sattr->ca_name,
-                                                              sattr->ca_namelen,
-                                                              1, tx);
-                                }
-                        } else if (rc == 0) {
-                                /*
-                                 * Source object exists but no name. Let's
-                                 * create one.
-                                 */
-                                rc = c2_md_store_link(md, pfid_src, scob,
-                                                      sattr->ca_name,
-                                                      sattr->ca_namelen,
-                                                      0, tx);
-                                if (rc) {
-                                        c2_cob_put(scob);
-                                        return rc;
-                                }
-
-                                /*
-                                 * Both object and names exist, let's do
-                                 * normal rename.
-                                 */
-                                rc = c2_md_rename(md, pfid_tgt, pfid_src, 
-                                                  tfid_tgt, tfid_src,
-                                                  tattr, sattr, tcob,
-                                                  scob, tx);
-                                if (rc == 0 && scan) {
-                                        /*
-                                         * Src name is gone now but we want to
-                                         * make sure that scan will not re-create
-                                         * it so let's add some zombie name that
-                                         * will be killed after scan.
-                                         */
-                                        rc = c2_md_store_link(md, pfid_src, scob,
-                                                              sattr->ca_name,
-                                                              sattr->ca_namelen,
-                                                              1, tx);
-                                }
-                        }
-                } else if (rc == 0) {
-                        rc = c2_md_store_locate(md, tfid_src, &scob, 
-                                                C2_MD_LOCATE_STORED, tx);
-                        if (rc == -ENOENT) {
-                                /*
-                                 * No src object at all, let's create one.
-                                 */
-                                rc = c2_md_store_create(md, pfid_src,
-                                                        sattr, &scob, tx);
-                                if (rc)
-                                        return rc;
-                                                
-                                /*
-                                 * Both object and names exist, let's do
-                                 * normal rename.
-                                 */
-                                rc = c2_md_rename(md, pfid_tgt, pfid_src, 
-                                                  tfid_tgt, tfid_src,
-                                                  tattr, sattr, tcob,
-                                                  scob, tx);
-                                if (rc == 0 && scan) {
-                                        /*
-                                         * Src name is gone now but we want to
-                                         * make sure that scan will not re-create
-                                         * it so let's add some zombie name that
-                                         * will be killed after scan.
-                                         */
-                                        rc = c2_md_store_link(md, pfid_src, scob,
-                                                              sattr->ca_name,
-                                                              sattr->ca_namelen,
-                                                              1, tx);
-                                }
-                        } else if (rc == 0) {
-                                /*
-                                 * Both object and names exist, let's do
-                                 * normal rename.
-                                 */
-                                rc = c2_md_rename(md, pfid_tgt, pfid_src, 
-                                                  tfid_tgt, tfid_src,
-                                                  tattr, sattr, tcob,
-                                                  scob, tx);
-                        }
-                        c2_cob_put(sncob);
-                }
-        }
-        if (scob) {
-                if (rc == 0 && scob->co_nsrec.cnr_nlink > 0 && 
-                    sattr->ca_version > scob->co_nsrec.cnr_version)
-                        rc = c2_md_store_setattr(md, scob, sattr, tx);
-                c2_cob_put(scob);
-        }
-        return rc;
-}
-
 static int c2_md_rename_fom_state(struct c2_fom *fom)
 {
         struct c2_fop_cob        *sbody;
@@ -699,7 +408,7 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
         struct c2_fop            *fop_rep;
         struct c2_fop_ctx        *ctx;
         struct c2_cob            *tcob = NULL;
-        struct c2_cob            *tncob = NULL;
+        struct c2_cob            *scob = NULL;
         struct c2_fid             tfid_src;
         struct c2_fid             tfid_tgt;
         struct c2_fid             pfid_tgt;
@@ -709,7 +418,6 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
         struct c2_service        *svc;
         struct c2_db_tx          *tx;
         struct c2_md_store       *md;
-        int                       scan;
         int                       rc;
 
         fom_obj = container_of(fom, struct c2_fom_md, fm_fom);
@@ -746,56 +454,25 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
         c2_md_fop_cob2attr(&sattr, sbody);
         sattr.ca_name = req->r_sname.s_buf;
         sattr.ca_namelen = req->r_sname.s_len;
-        scan = (sbody->b_bias & C2_MD_BIAS_SCAN_IN_PROGRESS);
 
-        rc = c2_md_store_lookup(md, &pfid_tgt, tattr.ca_name, 
-                                tattr.ca_namelen, &tncob, tx);
-        if (rc == -ENOENT) {
-                rc = c2_md_store_locate(md, &tfid_tgt, &tcob, 
-                                        C2_MD_LOCATE_STORED, tx);
-                if (rc == -ENOENT) {
-                        rc = c2_md_store_create(md, &pfid_tgt,
-                                                &tattr, &tcob, tx);
-                } else if (rc == 0 && !c2_fid_eq(&tfid_src, &tfid_tgt)) {
-                        rc = c2_md_store_link(md, &pfid_tgt, tcob, 
-                                              tattr.ca_name,
-                                              tattr.ca_namelen, 0, tx);
-                }
-                if (rc == 0)
-                        rc = c2_md_rename_src(md, &pfid_tgt, &pfid_src, 
-                                              &tfid_tgt, &tfid_src,
-                                              &tattr, &sattr, tcob, 
-                                              scan, tx);
-        } else if (rc == 0) {
-                /*
-                 * Let's grab stat data from target name and use it 
-                 * for rename.
-                 */
-                rc = c2_md_store_locate(md, tncob->co_fid, &tcob, 
+        rc = c2_md_store_locate(md, &tfid_src, &scob,
+                                C2_MD_LOCATE_STORED, tx);
+        if (rc)
+                goto out;
+        if (c2_fid_eq(&tfid_tgt, &tfid_src)) {
+                rc = c2_md_rename(md, &pfid_tgt, &pfid_src, &tfid_tgt,
+                                  &tfid_src, &tattr, &sattr, scob, scob, tx);
+        } else {
+                rc = c2_md_store_locate(md, &tfid_tgt, &tcob,
                                         C2_MD_LOCATE_STORED, tx);
-
-                /*
-                 * Create stat data name if it is not existing and name
-                 * we've found belongs to our object.
-                 */
-                if (rc == -ENOENT && c2_fid_eq(tncob->co_fid, &tfid_tgt))
-                        rc = c2_md_store_create(md, &pfid_tgt, &tattr, &tcob, tx);
-
-                if (rc == 0)
-                        rc = c2_md_rename_src(md, &pfid_tgt, &pfid_src, 
-                                              &tfid_tgt, &tfid_src,
-                                              &tattr, &sattr, tcob,
-                                              scan, tx);
-                c2_cob_put(tncob);
-        }
-
-        if (tcob) {
-                if (rc == 0 && tcob->co_nsrec.cnr_nlink > 0 &&
-                    tattr.ca_version > tcob->co_nsrec.cnr_version)
-                        rc = c2_md_store_setattr(md, tcob, &tattr, tx);
+                if (rc)
+                        goto out;
+                rc = c2_md_rename(md, &pfid_tgt, &pfid_src, &tfid_tgt,
+                                  &tfid_src, &tattr, &sattr, tcob, scob, tx);
                 c2_cob_put(tcob);
         }
-
+        c2_cob_put(scob);
+out:
         if (rc == 0) {
                 svc = fom->fo_fop_ctx->fc_service;
 	        svc->s_ops->so_reply_post(svc, fop_rep, ctx->fc_cookie);
@@ -1002,12 +679,7 @@ static int c2_md_setattr_fom_state(struct c2_fom *fom)
         /*
          * Setattr fop does not carry enough information to create
          * an object in case there is no target yet. This is why
-         * we return quickly if no object is found. One more reason
-         * to do so is that, object may be missed only in time of
-         * initial scan when it did not find an object yet but we
-         * got changege log rec. In this case we skip attributes
-         * update but correct attributes will anyways be set when
-         * scan finds the object and we create it in db.
+         * we return quickly if no object is found.
          */
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_LOCATE_STORED,
diff --git a/mdservice/md_fops.ff b/mdservice/md_fops.ff
index 54a129c..95aa54f 100644
--- a/mdservice/md_fops.ff
+++ b/mdservice/md_fops.ff
@@ -39,11 +39,9 @@ DEF(c2_fop_str, SEQUENCE,
 
 DEF(c2_fop_cob, RECORD,
     _(b_index, U64),
-    _(b_prev, U64),
     _(b_version, U64),
     _(b_flags, U32),
     _(b_valid, U32),
-    _(b_bias, U32),
     _(b_mode, U32),
     _(b_size, U64),
     _(b_blksize, U64),
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index a9c6341..b7e2ca0 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -149,14 +149,13 @@ int c2_md_store_create(struct c2_md_store       *md,
         nsrec.cnr_atime = attr->ca_atime;
         nsrec.cnr_mtime = attr->ca_mtime;
         nsrec.cnr_ctime = attr->ca_ctime;
-        nsrec.cnr_zombie = attr->ca_zombie;
 
         omgrec.cor_uid = attr->ca_uid;
         omgrec.cor_gid = attr->ca_gid;
         omgrec.cor_mode = attr->ca_mode;
 
         c2_cob_make_fabrec(&fabrec, attr->ca_link, 
-                           attr->ca_linklen);        
+                           attr->ca_link ? attr->ca_size : 0);
         rc = c2_cob_create(&md->md_dom, nskey, &nsrec,
                            fabrec, &omgrec, out, tx);
         if (rc) {
@@ -179,7 +178,6 @@ int c2_md_store_link(struct c2_md_store         *md,
                      struct c2_cob              *cob,
                      const char                 *name,
                      int                         namelen,
-                     int                         zombie,
                      struct c2_db_tx            *tx)
 {
         struct c2_cob_nskey   *nskey;
@@ -199,7 +197,6 @@ int c2_md_store_link(struct c2_md_store         *md,
         c2_cob_make_nskey(&nskey, pfid, name, namelen); 
         C2_PRE(c2_fid_is_set(&cob->co_nsrec.cnr_fid));
 
-        nsrec.cnr_zombie = zombie;
         nsrec.cnr_fid = cob->co_nsrec.cnr_fid;
         nsrec.cnr_linkno = cob->co_nsrec.cnr_cntr;
 
@@ -546,7 +543,6 @@ int c2_md_store_getattr(struct c2_md_store      *md,
                 attr->ca_rdev = cob->co_nsrec.cnr_rdev;
                 attr->ca_size = cob->co_nsrec.cnr_size;
                 attr->ca_version = cob->co_nsrec.cnr_version;
-                attr->ca_zombie = cob->co_nsrec.cnr_zombie;
         }
         
         /*
diff --git a/mdstore/mdstore.h b/mdstore/mdstore.h
index ad53511..a788d58 100644
--- a/mdstore/mdstore.h
+++ b/mdstore/mdstore.h
@@ -224,7 +224,6 @@ int c2_md_store_link(struct c2_md_store         *md,
                      struct c2_cob              *cob, 
                      const char                 *name,
                      int                         namelen,
-                     int                         zombie,
                      struct c2_db_tx            *tx);
                      
 /**
diff --git a/mdstore/ut/lustre.c b/mdstore/ut/lustre.c
index e4c4e1b..25fc934 100644
--- a/mdstore/ut/lustre.c
+++ b/mdstore/ut/lustre.c
@@ -109,7 +109,6 @@ static uint16_t lustre_get_valid(uint16_t valid)
 static void lustre_copy_body(struct c2_fop_cob *body, 
                              struct c2_md_lustre_logrec *rec)
 {
-        body->b_bias = 0;
         body->b_index = rec->cr_index;
         if (rec->cr_valid & C2_LA_SIZE)
                 body->b_size = rec->cr_size;
-- 
1.8.3.2

