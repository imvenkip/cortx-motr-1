From 5276c79f5b176f426ef1ddace01362ad086d6ea3 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Mon, 23 May 2011 05:36:13 -0600
Subject: [PATCH 090/158] - fixed updating cnr_cntr in all the cases of
 c2_cob_add_name(); - fixed data corruption in c2_cob_add_name() when creating
 zero record; - fixes in c2_md_create_state() to support hardlinks during
 initial scan; - update nlink in parents and all "time" fields in parent and
 target during rename;

---
 cob/cob.c            | 29 +++++++++++++++----------
 mdservice/md_foms.c  | 60 +++++++++++++++++++++++++++++++++++-----------------
 mdservice/md_fops.ff |  2 +-
 mdstore/mdstore.c    | 26 ++++++++++++++++++++---
 mdstore/mdstore.h    |  4 ++++
 5 files changed, 87 insertions(+), 34 deletions(-)

diff --git a/cob/cob.c b/cob/cob.c
index 004d02a..3f19a20 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -1000,13 +1000,25 @@ int c2_cob_add_name(struct c2_cob        *cob,
                 goto out_free;
 
         /*
-         * Add to namespace table. Content of ->co_nsrec is not important
-         * with only exception for fid and linkno. Meaningful statdata
-         * is stored in "zero" namespace entry.
+         * Add to namespace table. For hard links content of ->co_nsrec
+         * is not important with only exception for fid and linkno. 
+         * Meaningful statdata is stored in "zero" namespace entry.
          */
-        C2_SET0(&nsrec);
-        nsrec.cnr_fid = cob->co_nsrec.cnr_fid;
-        nsrec.cnr_linkno = cob->co_nsrec.cnr_cntr;
+        if (c2_cob_nskey_cmp(nskey, cob->co_nskey) == 0) {
+                /*
+                 * This is creating of zero name. Let's copy
+                 * nsrec from cob and make sure that cntr is
+                 * correct. As this is special case we can do
+                 * it here. For adding non-zero names this is
+                 * done on higher levels.
+                 */
+                cob->co_nsrec.cnr_cntr++;
+                nsrec = cob->co_nsrec;
+        } else {
+                C2_SET0(&nsrec);
+                nsrec.cnr_fid = cob->co_nsrec.cnr_fid;
+                nsrec.cnr_linkno = cob->co_nsrec.cnr_cntr;
+        }
 
         c2_db_pair_setup(&pair, &cob->co_dom->cd_namespace,
 			 nskey, c2_cob_nskey_size(nskey),
@@ -1015,11 +1027,6 @@ int c2_cob_add_name(struct c2_cob        *cob,
         rc = c2_table_insert(tx, &pair);
         c2_db_pair_release(&pair);
 	c2_db_pair_fini(&pair);
-	
-	/*
-	 * Bump nlink counter. Will be updated on store by upper layer.
-	 */
-        cob->co_nsrec.cnr_cntr++;
 out_free:
         C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, 
                     c2_addb_func_fail, "cob_add_name", rc);
diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index f0dbdd3..4536ee4 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -138,6 +138,8 @@ static void c2_md_fop_attr2cob(struct c2_fop_cob *body,
 
 static int c2_md_create_fom_state(struct c2_fom *fom)
 {
+        const char               *cname;
+        int                       clen;
         struct c2_cob_nskey      *nskey;
         struct c2_cob_attr        attr;
         struct c2_fop_cob        *body;
@@ -175,14 +177,14 @@ static int c2_md_create_fom_state(struct c2_fom *fom)
         c2_md_make_fid(&pfid, &body->b_pfid);
         c2_md_make_fid(&tfid, &body->b_tfid);
 
-        rc = c2_md_store_locate(site->s_mdstore, &tfid, 
-                                &cob, C2_MD_STORE_LOCATE_STORED,
-                                &ctx->fc_tx->tx_dbtx);
-
         c2_md_fop_cob2attr(&attr, body);
         attr.ca_name = req->c_name.n_name;
         attr.ca_namelen = req->c_name.n_count;
         
+        rc = c2_md_store_locate(site->s_mdstore, &tfid, 
+                                &cob, C2_MD_STORE_LOCATE_STORED,
+                                &ctx->fc_tx->tx_dbtx);
+
         if (rc == -ENOENT) {
                 rc = c2_md_store_alloc(site->s_mdstore, &tfid, &cob);
                 if (rc)
@@ -191,28 +193,48 @@ static int c2_md_create_fom_state(struct c2_fom *fom)
                 rc = c2_md_store_create(site->s_mdstore, &pfid,
                                         cob, &attr, ctx);
         } else if (rc == 0) {
-                /* 
-                 * Already have this object, let's check its version
-                 * and update attributes if needed. Older version is
-                 * ignored.
+                /*
+                 * We to handle the following cases:
+                 * - hardlink found by initial scan (object exists we
+                 *   have create fop with another name);
+                 * - create fop from changelog while initial scan has
+                 *   already created this object.
                  */
                 if (attr.ca_version > cob->co_nsrec.cnr_version) {
                         rc = c2_md_store_setattr(site->s_mdstore, cob,
                                                  &attr, ctx);
+                        if (rc)
+                                goto out_put_cob;
+                }
+
+                /*
+                 * This must be hardlink case from initial scan,
+                 * let's create name as well.
+                 */
+                cname = c2_bitstring_buf_get(&cob->co_nskey->cnk_name);
+                clen = c2_bitstring_len_get(&cob->co_nskey->cnk_name);
+                if (clen == attr.ca_namelen && 
+                    strncmp(attr.ca_name, cname, clen)) {
+                        c2_cob_make_nskey(&nskey, &pfid, 
+                                          attr.ca_name, 
+                                          attr.ca_namelen);
+                        rc = c2_cob_add_name(cob, nskey, 
+                                             &ctx->fc_tx->tx_dbtx);
+                        c2_free(nskey);
+
+                        if (rc)
+                                goto out_put_cob;                                
+
                         /*
-                         * This must be hardlink case from initial scan,
-                         * let's create name as well.
+                         * Bump counter and update cob on store.
                          */
-                        if (rc == 0) {
-                                c2_cob_make_nskey(&nskey, &pfid, 
-                                                  attr.ca_name, 
-                                                  attr.ca_namelen);
-                                rc = c2_cob_add_name(cob, nskey, 
-                                                &ctx->fc_tx->tx_dbtx);
-                                c2_free(nskey);
-                        }
+                        cob->co_nsrec.cnr_cntr++;
+                        rc = c2_cob_update(cob, &cob->co_nsrec, 
+                                           NULL, NULL,
+                                           &ctx->fc_tx->tx_dbtx);
                 }
         }
+out_put_cob:
         c2_cob_put(cob);
         if (rc == 0) {
                 svc = fom->fo_fop_ctx->fc_service;
@@ -410,7 +432,7 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
         attr.ca_name = req->u_name.n_name;
         attr.ca_namelen = req->u_name.n_count;
 
-        if (body->b_scan) {
+        if (body->b_bias & C2_MD_BIAS_SCAN_IN_PROGRESS) {
                 /* 
                  * Mark object zombie to kill it later when scan finishes.
                  */
diff --git a/mdservice/md_fops.ff b/mdservice/md_fops.ff
index 00d29c8..042fe67 100644
--- a/mdservice/md_fops.ff
+++ b/mdservice/md_fops.ff
@@ -23,7 +23,7 @@ DEF(c2_fop_cob, RECORD,
     _(b_index, U64),
     _(b_version, U64),
     _(b_flags, U32),
-    _(b_scan, U32),
+    _(b_bias, U32),
     _(b_mode, U32),
     _(b_size, U64),
     _(b_blksize, U64),
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 875e23f..8d263ea 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -159,8 +159,10 @@ int c2_md_store_link(struct c2_md_store         *md,
                 goto out;
 
         /*
-         * Update nlink in statdata and save it to storage. 
+         * Update nlink and links allocation counter in statdata and
+         * save it to storage. 
          */
+        cob->co_nsrec.cnr_cntr++;
         cob->co_nsrec.cnr_nlink++;
         rc = c2_cob_update(cob, &cob->co_nsrec, NULL, NULL,
                            &ctx->fc_tx->tx_dbtx);
@@ -359,11 +361,15 @@ int c2_md_store_rename(struct c2_md_store       *md,
                 if (rc)
                         goto out;
 
+                cob->co_nsrec.cnr_ctime = now;
+
 #if 0
                 /*
                  * Update mtime in parent.
                  */
                 pcob_src->co_nsrec.cnr_mtime = now;
+                pcob_src->co_nsrec.cnr_ctime = now;
+                pcob_src->co_nsrec.cnr_atime = now;
                          
                 /*
                  * Update on-store cob so that updated time
@@ -385,8 +391,11 @@ int c2_md_store_rename(struct c2_md_store       *md,
                 /*
                  * Update mtime and links in src parent.
                  */
-                pcob_src->co_nsrec.cnr_nlink--;
+                if (S_ISDIR(cob->co_nsrec.cnr_mode))
+                        pcob_src->co_nsrec.cnr_nlink--;
                 pcob_src->co_nsrec.cnr_mtime = now;
+                pcob_src->co_nsrec.cnr_ctime = now;
+                pcob_src->co_nsrec.cnr_atime = now;
 #endif
                 /*
                  * Add name to new location.
@@ -394,12 +403,17 @@ int c2_md_store_rename(struct c2_md_store       *md,
                 rc = c2_cob_add_name(cob, tgtkey, &ctx->fc_tx->tx_dbtx);
                 if (rc)
                         goto out;
+                cob->co_nsrec.cnr_cntr++;
+                cob->co_nsrec.cnr_ctime = now;
 #if 0
                 /*
                  * Update mtime and links in tgt parent.
                  */
-                pcob_tgt->co_nsrec.cnr_nlink++;
+                if (S_ISDIR(cob->co_nsrec.cnr_mode))
+                        pcob_tgt->co_nsrec.cnr_nlink++;
                 pcob_tgt->co_nsrec.cnr_mtime = now;
+                pcob_tgt->co_nsrec.cnr_ctime = now;
+                pcob_tgt->co_nsrec.cnr_atime = now;
 
                 /*
                  * Update on-store cob so that updated statdata
@@ -420,6 +434,12 @@ int c2_md_store_rename(struct c2_md_store       *md,
                         goto out;
 #endif
         }
+
+        /*
+         * Update cob on store to save changed cntr and ctime.
+         */
+        rc = c2_cob_update(cob, &cob->co_nsrec,
+                           NULL, NULL, &ctx->fc_tx->tx_dbtx);
 out:
         c2_free(srckey);
         c2_free(tgtkey);
diff --git a/mdstore/mdstore.h b/mdstore/mdstore.h
index 3e9fb5e..e18aec4 100644
--- a/mdstore/mdstore.h
+++ b/mdstore/mdstore.h
@@ -91,6 +91,10 @@ enum c2_md_acc_flags {
         C2_MD_MAY_CHDIR    = 1 << 6
 };
 
+enum c2_md_bias_flags {
+        C2_MD_BIAS_SCAN_IN_PROGRESS = 1 << 0
+};
+
 static inline int accmode(uint32_t flags)
 {
         int result = 0;
-- 
1.8.3.2

