From efd5a1a0b09f7e23cd37443353624f9f54394452 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Tue, 7 Jun 2011 08:08:08 -0600
Subject: [PATCH 106/158] - renamed n_buf and n_len into s_buf and s_len; -
 added c2_md_store_path() that returns path by fid. It is used from
 replicator; - handle -EDEADLK in reqh and c2_md_store_path() with restarting
 transaction; - various cleanups.

---
 mdservice/md_foms.c  | 55 ++++++++++++++++++++++++++-----------------------
 mdservice/md_fops.ff |  5 +++--
 mdstore/mdstore.c    | 58 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 mdstore/mdstore.h    |  4 ++++
 mdstore/ut/lustre.c  | 18 ++++++++--------
 reqh/reqh.c          |  6 +++++-
 6 files changed, 108 insertions(+), 38 deletions(-)

diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index 1ab021d..2e3b908 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -44,7 +44,7 @@ void c2_md_make_nskey(struct c2_cob_nskey **keyh,
         struct c2_fid cfid;
         
         c2_md_make_fid(&cfid, fid);
-        c2_cob_make_nskey(keyh, &cfid, name->n_buf, name->n_len);
+        c2_cob_make_nskey(keyh, &cfid, name->s_buf, name->s_len);
 }
 
 /**
@@ -142,7 +142,7 @@ static int c2_md_create(struct c2_md_store  *mdstore,
 
                         rc = c2_md_store_create(mdstore, pfid, 
                                                 scob, attr, tx);
-                } else {
+                } else if (rc == 0) {
                         name = c2_bitstring_alloc(attr->ca_name, attr->ca_namelen);
                         if (!name) {
                                 c2_cob_put(scob);
@@ -216,8 +216,8 @@ static int c2_md_create_fom_state(struct c2_fom *fom)
 
         body = &req->c_body;
         c2_md_fop_cob2attr(&attr, body);
-        attr.ca_name = req->c_name.n_buf;
-        attr.ca_namelen = req->c_name.n_len;
+        attr.ca_name = req->c_name.s_buf;
+        attr.ca_namelen = req->c_name.s_len;
 
         c2_md_make_fid(&pfid, &body->b_pfid);
         c2_md_make_fid(&tfid, &body->b_tfid);
@@ -269,8 +269,8 @@ static int c2_md_link_fom_state(struct c2_fom *fom)
 
         body = &req->l_body;
         c2_md_fop_cob2attr(&attr, body);
-        attr.ca_name = req->l_name.n_buf;
-        attr.ca_namelen = req->l_name.n_len;
+        attr.ca_name = req->l_name.s_buf;
+        attr.ca_namelen = req->l_name.s_len;
 
         c2_md_make_fid(&pfid, &body->b_pfid);
         c2_md_make_fid(&tfid, &body->b_tfid);
@@ -334,8 +334,8 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
          */
         if (body->b_bias & C2_MD_BIAS_SCAN_IN_PROGRESS) {
                 rc = c2_md_store_lookup(site->s_mdstore, &pfid,
-                                        req->u_name.n_buf,
-                                        req->u_name.n_len, &ncob,
+                                        req->u_name.s_buf,
+                                        req->u_name.s_len, &ncob,
                                         &ctx->fc_tx->tx_dbtx);
                 if (rc)
                         goto out;
@@ -375,8 +375,8 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
                 if (rc)
                         goto out;
                 if (attr.ca_version > scob->co_nsrec.cnr_version) {
-                        name = c2_bitstring_alloc(req->u_name.n_buf,
-                                                  req->u_name.n_len);
+                        name = c2_bitstring_alloc(req->u_name.s_buf,
+                                                  req->u_name.s_len);
                         if (!name) {
                                 c2_cob_put(scob);
                                 goto out;
@@ -496,6 +496,9 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
         sbody = &req->r_sbody;
         tbody = &req->r_tbody;
 
+        fprintf(stderr, "S-path: %s\n", req->r_spath.s_buf);
+        fprintf(stderr, "T-path: %s\n", req->r_tpath.s_buf);
+
         c2_md_make_fid(&pfid_src, &sbody->b_pfid);
         c2_md_make_fid(&pfid_tgt, &tbody->b_pfid);
 
@@ -503,22 +506,22 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
         c2_md_make_fid(&tfid_tgt, &tbody->b_tfid);
 
         c2_md_fop_cob2attr(&tattr, tbody);
-        tattr.ca_name = req->r_tname.n_buf;
-        tattr.ca_namelen = req->r_tname.n_len;
+        tattr.ca_name = req->r_tname.s_buf;
+        tattr.ca_namelen = req->r_tname.s_len;
 
         c2_md_fop_cob2attr(&sattr, sbody);
-        sattr.ca_name = req->r_sname.n_buf;
-        sattr.ca_namelen = req->r_sname.n_len;
+        sattr.ca_name = req->r_sname.s_buf;
+        sattr.ca_namelen = req->r_sname.s_len;
 
-        rc = c2_md_store_lookup(site->s_mdstore, &pfid_tgt, req->r_tname.n_buf,
-                                req->r_tname.n_len, &ncob, &ctx->fc_tx->tx_dbtx);
+        rc = c2_md_store_lookup(site->s_mdstore, &pfid_tgt, req->r_tname.s_buf,
+                                req->r_tname.s_len, &ncob, &ctx->fc_tx->tx_dbtx);
         if (rc == -ENOENT) {
                 rc = c2_md_store_locate(site->s_mdstore, &tfid_src, &scob, 
                                         C2_MD_STORE_LOCATE_STORED,
                                         &ctx->fc_tx->tx_dbtx);
                 if (rc == -ENOENT) {
-                        sattr.ca_name = req->r_tname.n_buf;
-                        sattr.ca_namelen = req->r_tname.n_len;
+                        sattr.ca_name = req->r_tname.s_buf;
+                        sattr.ca_namelen = req->r_tname.s_len;
                         
                         rc = c2_md_store_alloc(site->s_mdstore, &tfid_src, 
                                                &scob);
@@ -527,7 +530,7 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
                         rc = c2_md_store_create(site->s_mdstore, 
                                                 &pfid_tgt, scob, &sattr, 
                                                 &ctx->fc_tx->tx_dbtx);
-                } else {
+                } else if (rc == 0) {
                         rc = c2_md_rename(site->s_mdstore,
                                           &pfid_tgt, &pfid_src, 
                                           &tfid_tgt, &tfid_src, 
@@ -873,8 +876,8 @@ static int c2_md_readdir_fom_state(struct c2_fom *fom)
                 goto out;
         }
 
-        rdpg.r_pos = c2_bitstring_alloc(req->r_pos.n_buf,
-                                        req->r_pos.n_len);
+        rdpg.r_pos = c2_bitstring_alloc(req->r_pos.s_buf,
+                                        req->r_pos.s_len);
         if (rdpg.r_pos == NULL) {
                 c2_cob_put(cob);
                 rc = -ENOMEM;
@@ -903,15 +906,15 @@ static int c2_md_readdir_fom_state(struct c2_fom *fom)
         /*
          * Prepare end position.
          */
-        rep->r_end.n_len = c2_bitstring_len_get(rdpg.r_end);
-        rep->r_end.n_buf = c2_alloc(rep->r_end.n_len);
-        if (rep->r_end.n_buf == NULL) {
+        rep->r_end.s_len = c2_bitstring_len_get(rdpg.r_end);
+        rep->r_end.s_buf = c2_alloc(rep->r_end.s_len);
+        if (rep->r_end.s_buf == NULL) {
                 c2_free(addr);
                 rc = -ENOMEM;
                 goto out;
         }
-        strncpy(rep->r_end.n_buf, c2_bitstring_buf_get(rdpg.r_end),
-                rep->r_end.n_len);
+        strncpy(rep->r_end.s_buf, c2_bitstring_buf_get(rdpg.r_end),
+                rep->r_end.s_len);
 
         /* 
          * Prepare buf with data.
diff --git a/mdservice/md_fops.ff b/mdservice/md_fops.ff
index 52eccb5..169688c 100644
--- a/mdservice/md_fops.ff
+++ b/mdservice/md_fops.ff
@@ -16,8 +16,8 @@ DEF(c2_fop_fid, RECORD,
     _(f_oid, U64));
 
 DEF(c2_fop_str, SEQUENCE,
-    _(n_len, U32),
-    _(n_buf, BYTE));
+    _(s_len, U32),
+    _(s_buf, BYTE));
 
 DEF(c2_fop_cob, RECORD,
     _(b_index, U64),
@@ -69,6 +69,7 @@ DEF(c2_fop_unlink_rep, RECORD,
 DEF(c2_fop_rename, RECORD,
     _(r_sbody, c2_fop_cob),
     _(r_tbody, c2_fop_cob),
+    _(r_spath, c2_fop_str),
     _(r_tpath, c2_fop_str),
     _(r_sname, c2_fop_str),
     _(r_tname, c2_fop_str));
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 5857893..6b1ca95 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -734,3 +734,61 @@ int c2_md_store_alloc(struct c2_md_store        *md,
                 *(*cob)->co_fid = *fid;
         return rc;
 }
+
+/*
+ * Get path by fid.
+ */
+int c2_md_store_path(struct c2_md_store *md,
+                     struct c2_fid *fid,
+                     char **path)
+{
+        struct c2_cob   *cob;
+        struct c2_db_tx  tx;
+        int              rc;
+        
+        *path = c2_alloc(PATH_MAX);
+        if (*path == NULL)
+                return -ENOMEM;
+
+restart:
+        c2_db_tx_init(&tx, md->md_dom.cd_dbenv, 0);
+
+        rc = c2_md_store_locate(md, fid, &cob, C2_MD_STORE_LOCATE_STORED, &tx);
+        if (rc)
+                goto out;
+
+        while (rc == 0) {
+                char name[NAME_MAX] = {0,};
+
+	        if (!c2_fid_eq(cob->co_fid, md->md_root->co_fid)) {
+                        strncat(name, 
+                                c2_bitstring_buf_get(&cob->co_nskey->cnk_name),
+                                c2_bitstring_len_get(&cob->co_nskey->cnk_name));
+                }
+                if (!c2_fid_eq(cob->co_fid, fid) ||
+                    c2_fid_eq(cob->co_fid, md->md_root->co_fid))
+                        strcat(name, "/");
+                memmove(*path + strlen(name), *path, strlen(*path));
+                memcpy(*path, name, strlen(name));
+
+                if (c2_fid_eq(&cob->co_nskey->cnk_pfid, &C2_MD_ROOT_FID)) {
+                        rc = 0;
+                        break;
+                }
+                rc = c2_md_store_locate(md, &cob->co_nskey->cnk_pfid, 
+                                        &cob, C2_MD_STORE_LOCATE_STORED,
+                                        &tx);
+        }
+out:
+        if (rc) {
+                c2_db_tx_abort(&tx);
+                if (rc == -EDEADLK) {
+                        memset(*path, 0, PATH_MAX);
+                        goto restart;
+                }
+                c2_free(*path);
+        } else {
+                c2_db_tx_commit(&tx);
+        }
+        return rc;
+}
diff --git a/mdstore/mdstore.h b/mdstore/mdstore.h
index 39afbb1..36770d8 100644
--- a/mdstore/mdstore.h
+++ b/mdstore/mdstore.h
@@ -332,6 +332,10 @@ int c2_md_store_alloc(struct c2_md_store *md,
                       struct c2_fid *fid,
                       struct c2_cob **cob);
 
+int c2_md_store_path(struct c2_md_store *md,
+                     struct c2_fid *fid,
+                     char **path);
+
 /* __COLIBRI_MDSTORE_MDSTORE_H__ */
 #endif
 
diff --git a/mdstore/ut/lustre.c b/mdstore/ut/lustre.c
index eb5eca1..ecdbee1 100644
--- a/mdstore/ut/lustre.c
+++ b/mdstore/ut/lustre.c
@@ -30,12 +30,12 @@ static void lustre_copy_fid(struct c2_fop_fid *bf,
 static int lustre_copy_name(struct c2_fop_str *n, 
                             struct c2_md_lustre_logrec *rec)
 {
-        n->n_len = rec->cr_namelen;
-        n->n_buf = c2_alloc(rec->cr_namelen);
-        if (!n->n_buf)
+        n->s_len = rec->cr_namelen;
+        n->s_buf = c2_alloc(rec->cr_namelen);
+        if (!n->s_buf)
                 return -ENOMEM;
 
-        memcpy(n->n_buf, rec->cr_name, rec->cr_namelen);
+        memcpy(n->s_buf, rec->cr_name, rec->cr_namelen);
         return 0;
 }
 
@@ -272,20 +272,20 @@ void c2_md_lustre_fop_free(struct c2_fop *fop)
         switch (fop->f_type->ft_code) {
         case C2_FOP_CREATE:
                 create = c2_fop_data(fop);
-                c2_free(create->c_name.n_buf);
+                c2_free(create->c_name.s_buf);
                 break;
         case C2_FOP_LINK:
                 link = c2_fop_data(fop);
-                c2_free(link->l_name.n_buf);
+                c2_free(link->l_name.s_buf);
                 break;
         case C2_FOP_UNLINK:
                 unlink = c2_fop_data(fop);
-                c2_free(unlink->u_name.n_buf);
+                c2_free(unlink->u_name.s_buf);
                 break;
         case C2_FOP_RENAME:
                 rename = c2_fop_data(fop);
-                c2_free(rename->r_sname.n_buf);
-                c2_free(rename->r_tname.n_buf);
+                c2_free(rename->r_sname.s_buf);
+                c2_free(rename->r_tname.s_buf);
                 break;
         default:
                 break;
diff --git a/reqh/reqh.c b/reqh/reqh.c
index e0b5a07..d2aa4ba 100644
--- a/reqh/reqh.c
+++ b/reqh/reqh.c
@@ -2,6 +2,8 @@
 #  include <config.h>
 #endif
 
+#include <errno.h>
+
 #include "lib/assert.h"
 #include "lib/misc.h"
 #include "lib/bitstring.h"
@@ -43,6 +45,7 @@ int c2_reqh_fop_handle(struct c2_reqh *reqh, struct c2_fop *fop, void *cookie)
 	struct c2_fom	    *fom = NULL;
 	int                  result;
 
+restart:
         C2_SET0(&ctx);
         C2_SET0(&env);
 
@@ -100,9 +103,10 @@ out_fini:
 out:
         if (result < 0) {
                 c2_db_tx_abort(&tx.tx_dbtx);
+                if (result == -EDEADLK)
+                        goto restart;
         } else {
                 c2_db_tx_commit(&tx.tx_dbtx);
-//                c2_dbenv_sync(reqh->rh_site->s_mdstore->md_dom.cd_dbenv);
         }
         
         return result;
-- 
1.8.3.2

