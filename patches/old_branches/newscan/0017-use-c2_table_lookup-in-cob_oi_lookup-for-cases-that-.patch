From 709a4d35e6156301c6fdf76feec893dae7c67cb2 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Tue, 1 Mar 2011 06:35:47 -0700
Subject: [PATCH 017/158] - use c2_table_lookup() in cob_oi_lookup() for cases
 that ->cok_linkno == 0. In other cases cursor is used and we don't need to
 know exactly if we found something. We just need to position; - added
 c2_md_store_getattr() and c2_md_store_readdir() stabs.

---
 cob/cob.c         | 45 ++++++++++++++++++++--------------------
 mdstore/mdstore.c | 61 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 mdstore/mdstore.h |  6 ++++++
 3 files changed, 90 insertions(+), 22 deletions(-)

diff --git a/cob/cob.c b/cob/cob.c
index fbe15f3..94560e5 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -276,15 +276,6 @@ static int cob_oi_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
         if (cob->co_valid & CA_NSKEY)
                 return 0;
 
-        /*
-         * We use cursor here because in some situations we need
-         * find most suitable position instead of exact location.
-         */
-        rc = c2_db_cursor_init(&cursor, 
-                               &cob->co_dom->cd_object_index, tx);
-        if (rc)
-                return rc;
-
         /* 
          * Find the name from the object index table. Note the key buffer
          * is out of scope outside of this function, but the record is good
@@ -293,9 +284,29 @@ static int cob_oi_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
         c2_db_pair_setup(&cob->co_oipair, &cob->co_dom->cd_object_index,
 			 &cob->co_oikey, sizeof cob->co_oikey, NULL, 0);
 
-        c2_db_cursor_get(&cursor, &cob->co_oipair);
-        c2_db_pair_release(&cob->co_oipair);
-        c2_db_cursor_fini(&cursor);
+        if (cob->co_oikey.cok_linkno != 0) {
+                /*
+                 * We use cursor here because in some situations we need
+                 * find most suitable position instead of exact location.
+                 */
+                rc = c2_db_cursor_init(&cursor, 
+                                       &cob->co_dom->cd_object_index, tx);
+                if (rc)
+                        return rc;
+
+                c2_db_cursor_get(&cursor, &cob->co_oipair);
+                c2_db_pair_release(&cob->co_oipair);
+                c2_db_cursor_fini(&cursor);
+        } else {
+                /*
+                 * Let's use lookup that can return meaningful error code
+                 * for case that we need exact position.
+                 */
+                rc = c2_table_lookup(tx, &cob->co_oipair);
+                c2_db_pair_release(&cob->co_oipair);
+                if (rc)
+                        return rc;
+        }
 
         cob->co_nskey =
                 (struct c2_cob_nskey *)cob->co_oipair.dp_rec.db_buf.b_addr;
@@ -862,16 +873,6 @@ int c2_cob_setattr(struct c2_cob        *cob,
         
         C2_PRE(c2_cob_is_valid(cob));
         C2_PRE(nsrec != NULL || fabrec != NULL);
-        
-        /*
-         * We need the name key. 
-         */
-        rc = cob_oi_lookup(cob, tx);
-        if (rc) {
-                C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_enoent, rc);
-                goto out;
-        }
-
         C2_POST(cob->co_valid & CA_NSKEY);
 
         if (nsrec != NULL) {
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index e827848..861dec1 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -228,6 +228,9 @@ int c2_md_store_unlink(struct c2_md_store *md, struct c2_fop *fop,
          * Last nlink, let's delete everything left. 
          */
         if (nsrec.cnr_nlink == 0) {
+                /*
+                 * @todo: orphans handling.
+                 */
                 rc = c2_cob_delete(cob, ctx->ft_tx);
                 goto out;
         }
@@ -467,3 +470,61 @@ int c2_md_store_setattr(struct c2_md_store *md, struct c2_fop *fop,
         
         return rc;
 }
+
+int c2_md_store_getattr(struct c2_md_store *md, struct c2_fop *fop,
+                        struct c2_fop_ctx *ctx)
+{
+        struct c2_fop_getattr *getattr = c2_fop_data(fop);
+        struct c2_fop_body    *body = &getattr->g_body;
+        struct c2_cob_oikey    oikey;
+        struct c2_cob         *cob;
+        int                    rc;
+        
+        rc = c2_md_store_check_perm(md, fop, ctx);
+        if (rc)
+                return rc;
+        
+        fid2stobid(&oikey.cok_stobid, &body->b_tfid);
+        oikey.cok_linkno = 0;
+
+        rc = c2_cob_locate(&md->md_cob, &oikey, &cob, ctx->ft_tx);
+        if (rc)
+                return rc;
+        
+        /*
+         * @todo: copy cob->co_nsrec cob->co_fabrec and cob->co_omgrec
+         * to response.
+         */
+        
+        c2_cob_put(cob);
+        return rc;
+}
+
+int c2_md_store_readdir(struct c2_md_store *md, struct c2_fop *fop,
+                        struct c2_fop_ctx *ctx)
+{
+        struct c2_fop_readdir *readdir = c2_fop_data(fop);
+        struct c2_fop_body    *body = &readdir->r_body;
+        struct c2_cob_oikey    oikey;
+        struct c2_cob         *cob;
+        int                    rc;
+        
+        rc = c2_md_store_check_perm(md, fop, ctx);
+        if (rc)
+                return rc;
+        
+        fid2stobid(&oikey.cok_stobid, &body->b_tfid);
+        oikey.cok_linkno = 0;
+
+        rc = c2_cob_locate(&md->md_cob, &oikey, &cob, ctx->ft_tx);
+        if (rc)
+                return rc;
+        
+        /*
+         * @todo: Iterrate over @cob to find entries and put them
+         * to response.
+         */
+        
+        c2_cob_put(cob);
+        return rc;
+}
diff --git a/mdstore/mdstore.h b/mdstore/mdstore.h
index 15249a7..03676fb 100644
--- a/mdstore/mdstore.h
+++ b/mdstore/mdstore.h
@@ -41,6 +41,12 @@ int c2_md_store_close(struct c2_md_store *md, struct c2_fop *fop,
 int c2_md_store_setattr(struct c2_md_store *md, struct c2_fop *fop,
                         struct c2_fop_ctx *ctx);
 
+int c2_md_store_getattr(struct c2_md_store *md, struct c2_fop *fop,
+                        struct c2_fop_ctx *ctx);
+
+int c2_md_store_readdir(struct c2_md_store *md, struct c2_fop *fop,
+                        struct c2_fop_ctx *ctx);
+
 void c2_md_store_fop_fini(void);
 int c2_md_store_fop_init(void);
 
-- 
1.8.3.2

