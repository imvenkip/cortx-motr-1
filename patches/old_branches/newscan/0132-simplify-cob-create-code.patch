From f5499c23d7ce37d3a44400c064efce2c5aec1387 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Tue, 14 Jun 2011 11:48:52 -0600
Subject: [PATCH 132/158] - simplify cob create code.

---
 cob/cob.c            | 22 +++++++++++++++-------
 cob/cob.h            | 15 +++++++--------
 cob/ut/cob.c         |  8 ++++----
 mdservice/md_foms.c  | 28 +++++++---------------------
 mdstore/mdstore.c    | 26 +++++---------------------
 mdstore/mdstore.h    |  8 +-------
 mdstore/ut/mdstore.c |  7 ++-----
 utils/mkfs.colibri.c |  7 ++-----
 8 files changed, 43 insertions(+), 78 deletions(-)

diff --git a/cob/cob.c b/cob/cob.c
index d86fe8b..5e792c5 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -752,20 +752,22 @@ static bool c2_cob_is_valid(struct c2_cob *cob)
 
    This takes a reference on the cob in-memory struct.
  */
-int c2_cob_create(struct c2_cob        *cob,
+int c2_cob_create(struct c2_cob_domain *dom, 
                   struct c2_cob_nskey  *nskey,
                   struct c2_cob_nsrec  *nsrec,
                   struct c2_cob_fabrec *fabrec,
                   struct c2_cob_omgrec *omgrec,
+                  struct c2_cob       **out,
                   struct c2_db_tx      *tx)
 {
         struct c2_db_pair     pair;
         struct c2_cob_omgkey  omgkey;
         struct c2_cob_fabkey  fabkey;
         struct c2_db_cursor   cursor;
+        struct c2_cob        *cob;
         int                   rc;
 
-        C2_PRE(cob != NULL);
+        C2_PRE(out != NULL);
         C2_PRE(nskey != NULL);
         C2_PRE(nsrec != NULL);
         C2_PRE(fabrec != NULL);
@@ -773,6 +775,9 @@ int c2_cob_create(struct c2_cob        *cob,
 	C2_PRE(c2_fid_is_set(&nsrec->cnr_fid));
         C2_PRE(c2_fid_is_set(&nskey->cnk_pfid));
 
+        rc = c2_cob_alloc(dom, &cob);
+        if (rc)
+                return rc;
         /*
          * Allocate omgid using last allocated number + 1.
          * Find terminator record and do prev() out of it
@@ -783,7 +788,7 @@ int c2_cob_create(struct c2_cob        *cob,
         rc = c2_db_cursor_init(&cursor, 
                                &cob->co_dom->cd_fileattr_omg, tx);
         if (rc)
-                return rc;
+                goto out;
 
         c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_omg,
 			 &omgkey, sizeof omgkey, &cob->co_omgrec,
@@ -878,12 +883,15 @@ int c2_cob_create(struct c2_cob        *cob,
         rc = c2_table_insert(tx, &pair);
         c2_db_pair_release(&pair);
 	c2_db_pair_fini(&pair);
+	if (rc)
+	        goto out;
 
-        if (rc == 0) {
-                cob->co_valid |= CA_NSKEY_FREE;
-                cob->co_valid |= CA_FABREC;
-        }
+        cob->co_valid |= CA_NSKEY_FREE;
+        cob->co_valid |= CA_FABREC;
+        *out = cob;
 out:
+        if (rc)
+                c2_cob_put(cob);
         C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, 
                     c2_addb_func_fail, "cob_create", rc);
         return rc;
diff --git a/cob/cob.h b/cob/cob.h
index 080d7ef..c88aa37 100644
--- a/cob/cob.h
+++ b/cob/cob.h
@@ -442,15 +442,14 @@ int c2_cob_locate(struct c2_cob_domain    *dom,
 
    This doesn't create a new storage object; just creates
    metadata table entries for it to enable namespace and oi lookup.
-   
-   @note first argument cob is allocated with c2_cob_alloc()
  */
-int c2_cob_create(struct c2_cob        *cob,
-                  struct c2_cob_nskey  *nskey,
-                  struct c2_cob_nsrec  *nsrec,
-                  struct c2_cob_fabrec *fabrec,
-                  struct c2_cob_omgrec *omgrec,
-                  struct c2_db_tx      *tx);
+int c2_cob_create(struct c2_cob_domain *dom, 
+                  struct c2_cob_nskey   *nskey,
+                  struct c2_cob_nsrec   *nsrec,
+                  struct c2_cob_fabrec  *fabrec,
+                  struct c2_cob_omgrec  *omgrec,
+                  struct c2_cob        **out,
+                  struct c2_db_tx       *tx);
 
 /**
    Delete name with statdata, entry in object index and all file
diff --git a/cob/ut/cob.c b/cob/ut/cob.c
index e179b88..123609c 100644
--- a/cob/ut/cob.c
+++ b/cob/ut/cob.c
@@ -87,8 +87,8 @@ static void test_create(void)
         rc = c2_cob_alloc(&dom, &cob);
         C2_UT_ASSERT(rc == 0);
         c2_cob_make_fabrec(&fabrec, NULL, 0);
-	rc = c2_cob_create(cob, key, &nsrec, fabrec, &omgrec, 
-	                   &tx);
+	rc = c2_cob_create(&dom, key, &nsrec, fabrec,
+	                   &omgrec, &cob, &tx);
 	C2_UT_ASSERT(rc == 0);
 
         nsrec.cnr_nlink++;
@@ -345,8 +345,8 @@ static void ub_create(int i)
         C2_UT_ASSERT(rc == 0);
 
         c2_cob_make_fabrec(&fabrec, NULL, 0);
-	rc = c2_cob_create(cob, key, &nsrec, fabrec, &omgrec, 
-	                   &cob_ub_tx);
+	rc = c2_cob_create(&dom, key, &nsrec, fabrec, &omgrec, 
+	                   &cob, &cob_ub_tx);
 	C2_UB_ASSERT(rc == 0);
 
         c2_cob_put(cob);
diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index 1402d1b..ca00d5c 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -163,11 +163,7 @@ restart:
                          * No file at all, let's create it no matter
                          * where we are called from, scan or changelog.
                          */
-                        rc = c2_md_store_alloc(md, tfid, &scob);
-                        if (rc)
-                                return rc;
-
-                        rc = c2_md_store_create(md, pfid, scob, attr, tx);
+                        rc = c2_md_store_create(md, pfid, attr, &scob, tx);
                 } else if (rc == 0) {
                         /*
                          * There is statdata name, this must be hardlink
@@ -567,11 +563,8 @@ static int c2_md_rename_check_src(struct c2_md_store *md,
                                 /*
                                  * No src object at all, let's create one.
                                  */
-                                rc = c2_md_store_alloc(md, tfid_src, &scob);
-                                if (rc)
-                                        return rc;
                                 rc = c2_md_store_create(md, pfid_src,
-                                                        scob, sattr, tx);
+                                                        sattr, &scob, tx);
                                 if (rc) {
                                         c2_cob_put(scob);
                                         return rc;
@@ -649,11 +642,8 @@ static int c2_md_rename_check_src(struct c2_md_store *md,
                                 /*
                                  * No src object at all, let's create one.
                                  */
-                                rc = c2_md_store_alloc(md, tfid_src, &scob);
-                                if (rc)
-                                        return rc;
                                 rc = c2_md_store_create(md, pfid_src,
-                                                        scob, sattr, tx);
+                                                        sattr, &scob, tx);
                                 if (rc) {
                                         c2_cob_put(scob);
                                         return rc;
@@ -776,10 +766,8 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
                 rc = c2_md_store_locate(md, &tfid_tgt, &tcob, 
                                         C2_MD_LOCATE_STORED, tx);
                 if (rc == -ENOENT) {
-                        rc = c2_md_store_alloc(md, &tfid_tgt, &tcob);
-                        if (rc == 0)
-                                rc = c2_md_store_create(md, &pfid_tgt,
-                                                        tcob, &tattr, tx);
+                        rc = c2_md_store_create(md, &pfid_tgt,
+                                                &tattr, &tcob, tx);
                 } else if (rc == 0 && !c2_fid_eq(&tfid_src, &tfid_tgt)) {
                         rc = c2_md_store_link(md, &pfid_tgt, tcob, 
                                               tattr.ca_name,
@@ -794,10 +782,8 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
                 rc = c2_md_store_locate(md, &tfid_tgt, &tcob, 
                                         C2_MD_LOCATE_STORED, tx);
                 if (rc == -ENOENT) {
-                        rc = c2_md_store_alloc(md, &tfid_tgt, &tcob);
-                        if (rc == 0)
-                                rc = c2_md_store_create(md, &pfid_tgt, tcob,
-                                                        &tattr, tx);
+                        rc = c2_md_store_create(md, &pfid_tgt, &tattr, 
+                                                &tcob, tx);
                 }
                 if (rc == 0)
                         rc = c2_md_rename_check_src(md, &pfid_tgt, &pfid_src, 
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 39846ce..6e29169 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -118,8 +118,8 @@ void c2_md_store_fini(struct c2_md_store *md)
 */
 int c2_md_store_create(struct c2_md_store       *md,
                        struct c2_fid            *pfid,
-                       struct c2_cob            *cob,
                        struct c2_cob_attr       *attr,
+                       struct c2_cob           **out,
                        struct c2_db_tx          *tx)
 {
         struct c2_cob_nskey   *nskey;
@@ -129,11 +129,10 @@ int c2_md_store_create(struct c2_md_store       *md,
         int                    rc;
 
         C2_ASSERT(pfid != NULL);
-        C2_ASSERT(cob != NULL);
-        
+
         C2_SET0(&nsrec);
         C2_SET0(&omgrec);
-
+        
         c2_cob_make_nskey(&nskey, pfid, attr->ca_name, 
                           attr->ca_namelen);
 
@@ -155,8 +154,8 @@ int c2_md_store_create(struct c2_md_store       *md,
 
         c2_cob_make_fabrec(&fabrec, attr->ca_link, 
                            attr->ca_linklen);        
-        rc = c2_cob_create(cob, nskey, &nsrec, fabrec, 
-                           &omgrec, tx);
+        rc = c2_cob_create(&md->md_dom, nskey, &nsrec,
+                           fabrec, &omgrec, out, tx);
         if (rc) {
                 c2_free(nskey);
                 c2_free(fabrec);
@@ -695,21 +694,6 @@ int c2_md_store_lookup(struct c2_md_store       *md,
 }
 
 /**
-   Allocate new cob with fid @fid.
-*/
-int c2_md_store_alloc(struct c2_md_store        *md, 
-                      struct c2_fid             *fid, 
-                      struct c2_cob            **cob)
-{
-        int  rc;
-        
-        rc = c2_cob_alloc(&md->md_dom, cob);
-        if (rc == 0)
-                *(*cob)->co_fid = *fid;
-        return rc;
-}
-
-/**
    Get path by @fid. Path @path is allocated by c2_alloc() on
    success and path is saved there. When it is not longer needed
    it may be freed with c2_free().
diff --git a/mdstore/mdstore.h b/mdstore/mdstore.h
index c9d2dc0..ad53511 100644
--- a/mdstore/mdstore.h
+++ b/mdstore/mdstore.h
@@ -265,8 +265,8 @@ int c2_md_store_rename(struct c2_md_store       *md,
 */
 int c2_md_store_create(struct c2_md_store       *md, 
                        struct c2_fid            *pfid,
-                       struct c2_cob            *cob,
                        struct c2_cob_attr       *attr,
+                       struct c2_cob           **out,
                        struct c2_db_tx          *tx);
 
 /**
@@ -340,12 +340,6 @@ int c2_md_store_lookup(struct c2_md_store       *md,
                        int                       namelen, 
                        struct c2_cob           **cob, 
                        struct c2_db_tx          *tx);
-/**
-   Allocate new cob on mdstore @md.
-*/
-int c2_md_store_alloc(struct c2_md_store        *md, 
-                      struct c2_fid             *fid,
-                      struct c2_cob            **cob);
 
 /**
    Get path by @fid. Path @path is allocated by
diff --git a/mdstore/ut/mdstore.c b/mdstore/ut/mdstore.c
index 3477ebf..bc5cec2 100644
--- a/mdstore/ut/mdstore.c
+++ b/mdstore/ut/mdstore.c
@@ -137,12 +137,9 @@ static void test_mkfs(void)
         /*
          * Create root cob.
          */
-        rc = c2_md_store_alloc(&md, &nsrec.cnr_fid, &cob);
-	C2_UT_ASSERT(rc == 0);
-
         c2_cob_make_fabrec(&fabrec, NULL, 0);
-        rc = c2_cob_create(cob, nskey, &nsrec, fabrec, 
-                           &omgrec, &tx);
+        rc = c2_cob_create(&md.md_dom, nskey, &nsrec, fabrec, 
+                           &omgrec, &cob, &tx);
 	C2_UT_ASSERT(rc == 0);
         c2_cob_put(cob);
 
diff --git a/utils/mkfs.colibri.c b/utils/mkfs.colibri.c
index 0ce69e7..8506afa 100644
--- a/utils/mkfs.colibri.c
+++ b/utils/mkfs.colibri.c
@@ -168,12 +168,9 @@ int main(int argc, char *argv[])
         /*
          * Create root cob.
          */
-        rc = c2_md_store_alloc(&md, &C2_MD_ROOT_FID, &cob);
-        if (rc)
-                goto out;
-
         c2_cob_make_fabrec(&fabrec, NULL, 0);
-        rc = c2_cob_create(cob, nskey, &nsrec, fabrec, &omgrec, &tx);
+        rc = c2_cob_create(&md.md_dom, nskey, &nsrec, fabrec, 
+                           &omgrec, &cob, &tx);
         c2_cob_put(cob);
         if (rc) {
                 c2_free(nskey);
-- 
1.8.3.2

