From 266187d7c188dce2e176128d4d7464f6640bc61a Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Thu, 26 May 2011 08:38:53 -0600
Subject: [PATCH 095/158] - added script headers generated by configure. It is
 used by replicator to get third party lib headers.

---
 Makefile.am  |  2 +-
 cob/cob.c    | 18 +++++++++---------
 cob/cob.h    | 16 ++++++++++++++++
 configure.ac |  4 ++++
 headers.in   |  3 +++
 5 files changed, 33 insertions(+), 10 deletions(-)
 create mode 100644 headers.in

diff --git a/Makefile.am b/Makefile.am
index 9de2153..cdee3ab 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -23,6 +23,6 @@ SUBDIRS    = $(SUBDIRS_BASE) $(SUBDIRS_LIBS) colibri $(SUBDIR_KERNEL) \
 etags:
 	find . -name '*.[ch]' | xargs etags
 
-EXTRA_DIST = autogen.sh README NEWS AUTHORS COPYING ChangeLog
+EXTRA_DIST = autogen.sh README NEWS AUTHORS COPYING ChangeLog headers.in
 ETAGS_ARGS = automake.in --lang=none \ --regex=’/^@node[ \t]+\([^,]+\)/\1/’ automake.texi
 ACLOCAL_AMFLAGS = -I m4
diff --git a/cob/cob.c b/cob/cob.c
index 9497e25..0ec2171 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -75,10 +75,10 @@ int c2_cob_nskey_size(const struct c2_cob_nskey *cnk)
    Make nskey for iterator. Allocate space for max possible name
    but put real string len into the struct.
 */
-static void cob_make_nskey_max(struct c2_cob_nskey **keyh, 
-                               const struct c2_fid *pfid,
-                               const char *name, 
-                               int namelen)
+void c2_cob_make_nskey_max(struct c2_cob_nskey **keyh, 
+                           const struct c2_fid *pfid,
+                           const char *name, 
+                           int namelen)
 {
         struct c2_cob_nskey *key;
 
@@ -94,7 +94,7 @@ static void cob_make_nskey_max(struct c2_cob_nskey **keyh,
    and want to allocate it for worst case scenario, that is, for max 
    possible name len.
  */
-static int cob_nskey_size_max(const struct c2_cob_nskey *cnk)
+int c2_cob_nskey_size_max(const struct c2_cob_nskey *cnk)
 {
         return sizeof(*cnk) + NAME_MAX;
 }
@@ -613,15 +613,15 @@ int c2_cob_iterator_init(struct c2_cob *cob,
         /*
          * Prepare entry key using passed started pos.
          */
-        cob_make_nskey_max(&it->ci_key, cob->co_fid, 
-                           c2_bitstring_buf_get(name),
-                           c2_bitstring_len_get(name));
+        c2_cob_make_nskey_max(&it->ci_key, cob->co_fid, 
+                              c2_bitstring_buf_get(name),
+                              c2_bitstring_len_get(name));
 
         /*
          * Init iterator cursor with max possible key size.
          */
         c2_db_pair_setup(&it->ci_pair, &cob->co_dom->cd_namespace,
-			 it->ci_key, cob_nskey_size_max(it->ci_key), 
+			 it->ci_key, c2_cob_nskey_size_max(it->ci_key), 
 			 &it->ci_rec, sizeof it->ci_rec);
 
         rc = c2_db_cursor_init(&it->ci_cursor, 
diff --git a/cob/cob.h b/cob/cob.h
index e556e0e..911b3e7 100644
--- a/cob/cob.h
+++ b/cob/cob.h
@@ -551,6 +551,22 @@ void c2_cob_make_nskey(struct c2_cob_nskey **keyh,
                        const char *name, 
                        int namelen);
 
+/**
+   Make nskey for iterator. Allocate space for max possible name
+   but put real string len into the struct.
+*/
+void c2_cob_make_nskey_max(struct c2_cob_nskey **keyh, 
+                           const struct c2_fid *pfid,
+                           const char *name, 
+                           int namelen);
+
+/**
+   Key size for iterator in which case we don't know exact length of key
+   and want to allocate it for worst case scenario, that is, for max 
+   possible name len.
+ */
+int c2_cob_nskey_size_max(const struct c2_cob_nskey *cnk);
+
 /** @} end group cob */
 
 /* __COLIBRI_COB_COB_H__ */
diff --git a/configure.ac b/configure.ac
index 4b15fee..36d6e57 100755
--- a/configure.ac
+++ b/configure.ac
@@ -468,6 +468,8 @@ fi
 #
 # _GNU_SOURCE for asprintf(3)
 #
+COLIBRI_HEADERS="-I$DB_SRC/build_unix -I$GALOIS_SRC"
+AC_SUBST([COLIBRI_HEADERS])
 CFLAGS="-Wall -Werror -D_REENTRANT -D_GNU_SOURCE -fno-strict-aliasing -I$DB_SRC/build_unix -I$GALOIS_SRC -I. -I$SRCDIR $CFLAGS"
 KCFLAGS="-Wall -Werror $KCFLAGS"
 LDFLAGS="-rdynamic $LDFLAGS"
@@ -482,6 +484,7 @@ AC_SUBST([KCFLAGS])
 # results in needless merge conflicts)
 AC_CONFIG_FILES([
 		 Makefile
+		 headers
                  addb/Makefile
                  addb/addb_pseudo/Makefile
                  addb/linux_kernel/Makefile
@@ -559,6 +562,7 @@ AC_OUTPUT
 #
 sync
 chmod +x $SRCDIR/fop/fop2c
+chmod +x $SRCDIR/headers
 
 echo ""
 echo "LIBS   :  \"$LIBS\""
diff --git a/headers.in b/headers.in
new file mode 100644
index 0000000..ab15743
--- /dev/null
+++ b/headers.in
@@ -0,0 +1,3 @@
+#!/bin/bash
+
+echo -n @COLIBRI_HEADERS@
-- 
1.8.3.2

