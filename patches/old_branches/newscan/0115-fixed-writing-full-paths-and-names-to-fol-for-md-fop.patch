From 197974d7f5453e1e9956071015aedce0318a0441 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Wed, 8 Jun 2011 07:11:22 -0600
Subject: [PATCH 115/158] - fixed writing full paths and names to fol for md
 fops.

---
 mdservice/md_fops.c | 151 ++++++++++++++++++++++++++++++++++------------------
 1 file changed, 98 insertions(+), 53 deletions(-)

diff --git a/mdservice/md_fops.c b/mdservice/md_fops.c
index e67cd47..648bc97 100644
--- a/mdservice/md_fops.c
+++ b/mdservice/md_fops.c
@@ -36,22 +36,36 @@ static size_t c2_md_fol_pack_size(struct c2_fol_rec_desc *desc)
 	void *data = c2_fop_data(fop);
 
 	switch (fop->f_type->ft_code) {
-	case C2_FOP_CREATE:  len += ((struct c2_fop_create *)data)->c_name.s_len;
-			     len += ((struct c2_fop_create *)data)->c_path.s_len;
-			     break;
-	case C2_FOP_LINK:    len += ((struct c2_fop_link *)data)->l_name.s_len;
-			     len += ((struct c2_fop_link *)data)->l_path.s_len;
-			     break;
-	case C2_FOP_UNLINK:  len += ((struct c2_fop_unlink *)data)->u_name.s_len;
-			     len += ((struct c2_fop_unlink *)data)->u_path.s_len;
-			     break;
-	case C2_FOP_RENAME:  len += ((struct c2_fop_rename *)data)->r_sname.s_len;
-			     len += ((struct c2_fop_rename *)data)->r_spath.s_len;
-			     len += ((struct c2_fop_rename *)data)->r_tname.s_len;
-			     len += ((struct c2_fop_rename *)data)->r_tpath.s_len;
-			     break;
-	case C2_FOP_SETATTR: len += ((struct c2_fop_rename *)data)->r_spath.s_len;
-			     break;
+	case C2_FOP_CREATE:
+	        len += ((struct c2_fop_create *)data)->c_name.s_len;
+		len += ((struct c2_fop_create *)data)->c_path.s_len;
+		break;
+	case C2_FOP_LINK:
+	        len += ((struct c2_fop_link *)data)->l_name.s_len;
+		len += ((struct c2_fop_link *)data)->l_path.s_len;
+		 break;
+	case C2_FOP_UNLINK:
+	        len += ((struct c2_fop_unlink *)data)->u_name.s_len;
+		len += ((struct c2_fop_unlink *)data)->u_path.s_len;
+		break;
+	case C2_FOP_RENAME:
+	        len += ((struct c2_fop_rename *)data)->r_sname.s_len;
+		len += ((struct c2_fop_rename *)data)->r_spath.s_len;
+		len += ((struct c2_fop_rename *)data)->r_tname.s_len;
+		len += ((struct c2_fop_rename *)data)->r_tpath.s_len;
+                break;
+	case C2_FOP_SETATTR:
+	        len += ((struct c2_fop_setattr *)data)->s_path.s_len;
+	        break;
+	case C2_FOP_GETATTR:
+	        len += ((struct c2_fop_getattr *)data)->g_path.s_len;
+	        break;
+	case C2_FOP_OPEN:
+	        len += ((struct c2_fop_open *)data)->o_path.s_len;
+	        break;
+	case C2_FOP_CLOSE:
+	        len += ((struct c2_fop_close *)data)->c_path.s_len;
+	        break;
 	}
 
 	return (len + 7) & ~7;
@@ -73,22 +87,36 @@ static void c2_md_fol_pack(struct c2_fol_rec_desc *desc, void *buf)
 	ptr = (char *)buf + size;
 
 	switch (fop->f_type->ft_code) {
-	case C2_FOP_CREATE:  copy(&ptr, &((struct c2_fop_create *)data)->c_name);
-			     copy(&ptr, &((struct c2_fop_create *)data)->c_path);
-			     break;
-	case C2_FOP_LINK:    copy(&ptr, &((struct c2_fop_link *)data)->l_name);
-			     copy(&ptr, &((struct c2_fop_link *)data)->l_path);
-			     break;
-	case C2_FOP_UNLINK:  copy(&ptr, &((struct c2_fop_unlink *)data)->u_name);
-			     copy(&ptr, &((struct c2_fop_unlink *)data)->u_path);
-			     break;
-	case C2_FOP_RENAME:  copy(&ptr, &((struct c2_fop_rename *)data)->r_sname);
-			     copy(&ptr, &((struct c2_fop_rename *)data)->r_spath);
-			     copy(&ptr, &((struct c2_fop_rename *)data)->r_tname);
-			     copy(&ptr, &((struct c2_fop_rename *)data)->r_tpath);
-			     break;
-	case C2_FOP_SETATTR: copy(&ptr, &((struct c2_fop_setattr *)data)->s_path);
-			     break;
+	case C2_FOP_CREATE:
+	        copy(&ptr, &((struct c2_fop_create *)data)->c_name);
+	        copy(&ptr, &((struct c2_fop_create *)data)->c_path);
+		break;
+	case C2_FOP_LINK:
+	        copy(&ptr, &((struct c2_fop_link *)data)->l_name);
+		copy(&ptr, &((struct c2_fop_link *)data)->l_path);
+		break;
+	case C2_FOP_UNLINK:
+	        copy(&ptr, &((struct c2_fop_unlink *)data)->u_name);
+		copy(&ptr, &((struct c2_fop_unlink *)data)->u_path);
+	        break;
+	case C2_FOP_RENAME:
+	        copy(&ptr, &((struct c2_fop_rename *)data)->r_sname);
+		copy(&ptr, &((struct c2_fop_rename *)data)->r_spath);
+		copy(&ptr, &((struct c2_fop_rename *)data)->r_tname);
+		copy(&ptr, &((struct c2_fop_rename *)data)->r_tpath);
+		break;
+	case C2_FOP_SETATTR:
+	        copy(&ptr, &((struct c2_fop_setattr *)data)->s_path);
+	        break;
+	case C2_FOP_GETATTR:
+	        copy(&ptr, &((struct c2_fop_getattr *)data)->g_path);
+	        break;
+	case C2_FOP_OPEN:
+	        copy(&ptr, &((struct c2_fop_open *)data)->o_path);
+	        break;
+	case C2_FOP_CLOSE:
+	        copy(&ptr, &((struct c2_fop_close *)data)->c_path);
+	        break;
 	}
 }
 
@@ -106,27 +134,44 @@ static int c2_md_fol_open(const struct c2_fol_rec_type *type,
 
 	/* XXX: can we get sizeof() and init ptr using rt_opcode? */
 	switch (type->rt_opcode) {
-	case C2_FOP_CREATE:  ptr = (char *)((struct c2_fop_create *)data + 1);
-			     map(&ptr, &((struct c2_fop_create *)data)->c_name);
-			     map(&ptr, &((struct c2_fop_create *)data)->c_path);
-			     break;
-	case C2_FOP_LINK:    ptr = (char *)((struct c2_fop_link *)data + 1);
-			     map(&ptr, &((struct c2_fop_link *)data)->l_name);
-			     map(&ptr, &((struct c2_fop_link *)data)->l_path);
-			     break;
-	case C2_FOP_UNLINK:  ptr = (char *)((struct c2_fop_unlink *)data + 1);
-			     map(&ptr, &((struct c2_fop_unlink *)data)->u_name);
-			     map(&ptr, &((struct c2_fop_unlink *)data)->u_path);
-			     break;
-	case C2_FOP_RENAME:  ptr = (char *)((struct c2_fop_rename *)data + 1);
-			     map(&ptr, &((struct c2_fop_rename *)data)->r_sname);
-			     map(&ptr, &((struct c2_fop_rename *)data)->r_spath);
-			     map(&ptr, &((struct c2_fop_rename *)data)->r_tname);
-			     map(&ptr, &((struct c2_fop_rename *)data)->r_tpath);
-			     break;
-	case C2_FOP_SETATTR: ptr = (char *)((struct c2_fop_setattr *)data + 1);
-			     map(&ptr, &((struct c2_fop_setattr *)data)->s_path);
-			     break;
+	case C2_FOP_CREATE:
+	        ptr = (char *)((struct c2_fop_create *)data + 1);
+		map(&ptr, &((struct c2_fop_create *)data)->c_name);
+		map(&ptr, &((struct c2_fop_create *)data)->c_path);
+		break;
+	case C2_FOP_LINK:
+	        ptr = (char *)((struct c2_fop_link *)data + 1);
+		map(&ptr, &((struct c2_fop_link *)data)->l_name);
+		map(&ptr, &((struct c2_fop_link *)data)->l_path);
+		break;
+	case C2_FOP_UNLINK:
+	        ptr = (char *)((struct c2_fop_unlink *)data + 1);
+		map(&ptr, &((struct c2_fop_unlink *)data)->u_name);
+		map(&ptr, &((struct c2_fop_unlink *)data)->u_path);
+		break;
+	case C2_FOP_RENAME:
+	        ptr = (char *)((struct c2_fop_rename *)data + 1);
+		map(&ptr, &((struct c2_fop_rename *)data)->r_sname);
+		map(&ptr, &((struct c2_fop_rename *)data)->r_spath);
+		map(&ptr, &((struct c2_fop_rename *)data)->r_tname);
+		map(&ptr, &((struct c2_fop_rename *)data)->r_tpath);
+		break;
+	case C2_FOP_SETATTR:
+	        ptr = (char *)((struct c2_fop_setattr *)data + 1);
+		map(&ptr, &((struct c2_fop_setattr *)data)->s_path);
+		break;
+	case C2_FOP_GETATTR:
+	        ptr = (char *)((struct c2_fop_getattr *)data + 1);
+		map(&ptr, &((struct c2_fop_getattr *)data)->g_path);
+		break;
+	case C2_FOP_OPEN:
+	        ptr = (char *)((struct c2_fop_open *)data + 1);
+		map(&ptr, &((struct c2_fop_open *)data)->o_path);
+		break;
+	case C2_FOP_CLOSE:
+	        ptr = (char *)((struct c2_fop_close *)data + 1);
+		map(&ptr, &((struct c2_fop_close *)data)->c_path);
+		break;
 	}
 
 	return 0;
-- 
1.8.3.2

