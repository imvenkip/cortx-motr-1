From f8b8714ab6bb5f1c3ec533e7886bab015851a003 Mon Sep 17 00:00:00 2001
From: Rohan Puri <rohan_puri@xyratex.com>
Date: Mon, 17 Feb 2014 14:23:26 +0530
Subject: [PATCH 5/5] Coding style fixes

---
 addb/dump/addbdump.c | 25 +++++--------------------
 be/btree.c           |  3 ---
 mero/init.c          |  3 +--
 3 files changed, 6 insertions(+), 25 deletions(-)

diff --git a/addb/dump/addbdump.c b/addb/dump/addbdump.c
index ac7b9d8..194db5f 100644
--- a/addb/dump/addbdump.c
+++ b/addb/dump/addbdump.c
@@ -172,7 +172,7 @@ static int dump_ad_stob_init(struct dump_stob *stob, uint64_t cid,
 	struct m0_balloc    *cb;
 	int                  rc;
 	struct m0_stob_domain *be_stob_dom;
-	struct m0_sm_group *grp = NULL;// m0_locality0_get()->lo_grp;
+	struct m0_sm_group *grp = NULL;
 
         M0_PRE(stob != NULL && db != NULL);
 	M0_ALLOC_PTR(adstob);
@@ -187,9 +187,6 @@ static int dump_ad_stob_init(struct dump_stob *stob, uint64_t cid,
 	bestob_id = &adstob->as_be_id_back;
 	bestob_id->si_bits.u_hi = cid;
 	bestob_id->si_bits.u_lo = /*M0_AD_STOB_ID_LO*/ 43;
-//	rc = dump_stob_locate(stob->s_ldom, bstob_id, bstob);
-//	rc = m0_be_ut_stob_get_by_id(M0_AD_STOB_ID_LO, false);
-	printf("ad 1\n");
 	rc = m0_linux_stob_domain_locate(BE_UT_H_STORAGE_DIR, &be_stob_dom);
 	M0_ASSERT(rc == 0);
 	rc = dump_stob_locate(be_stob_dom, bestob_id, bestob);
@@ -316,7 +313,6 @@ static int setup(struct addb_dump_ctl *ctl)
 			ctl->adc_errstr = ctl->adc_infile;
 		return rc;
 	}
-	printf("setup 1\n");
 
 	ctl->adc_stob.s_stype_nr = ctl->adc_stype_nr;
 	rc = dump_linux_stob_init(ctl);
@@ -326,15 +322,12 @@ static int setup(struct addb_dump_ctl *ctl)
 				       &ctl->adc_be_seg);
 	}
 
-	printf("setup 2 : rc: %d\n", rc);
 	if (rc == 0) {
-		printf("ad stob dom: %p\n", ctl->adc_stob.s_adom->as_dom);
 		rc = dump_stob_locate(ctl->adc_stype_nr == M0_LINUX_STOB ?
 				      ctl->adc_stob.s_ldom :
 				      ctl->adc_stob.s_adom->as_dom,
 				      &m0_addb_stob_id,
 				      &ctl->adc_stob.s_stob);
-			printf("setup 3: rc: %d\n", rc);
 	}
 #if 0
 		if (ctl->adc_stype_nr == M0_LINUX_STOB)
@@ -361,7 +354,6 @@ static int setup(struct addb_dump_ctl *ctl)
 	else
 		rc = m0_addb_stob_iter_alloc(&ctl->adc_iter,
 					     ctl->adc_stob.s_stob);
-	printf("setup 4: rc: %d\n", rc);
 	return rc;
 }
 
@@ -848,19 +840,15 @@ static int dump(struct addb_dump_ctl *ctl)
 	else
 		ctl->adc_ops = &dump_text_ops;
 	rc = m0_addb_cursor_init(&cur, ctl->adc_iter, ctl->adc_dump_flags);
-	printf("dump 1\n");
 	if (rc != 0)
 		return rc;
-	printf("dump 2\n");
 	while (1) {
-		printf("dump 3\n");
 		rc = m0_addb_cursor_next(&cur, &rec);
 		if (rc == -ENODATA) {
 			if (count != 0)
 				rc = 0;
 			break;
 		}
-		printf("dump 4\n");
 		M0_ASSERT(rec != NULL);
 		cur_seq_nr = ctl->adc_iter->asi_seq_get(ctl->adc_iter);
 		if (seq_nr != cur_seq_nr) {
@@ -885,8 +873,8 @@ static void addbdump_help(FILE *out)
 	M0_PRE(out != NULL);
 	fprintf(out,
 		"Usage: m0addbdump [-h]\n"
-		"   or  m0addbdump -T StobType [-D DBPath] [-c][-e][-u][-y]"
-		" -A ADDBStobPath\n"
+		"   or  m0addbdump -T StobType [-B BE Path] [-c][-e][-u][-y]"
+		" -A ADDBStobPath \n"
 		"                  [-s segID] [-o path]\n"
 		"   or  m0addbdump -f path [-c][-e][-u][-y]"
 		" [-s segID] [-o path]\n"
@@ -909,10 +897,10 @@ static void addbdump_help(FILE *out)
 		fprintf(out, " %s", m0_cs_stypes[i]);
 	fprintf(out, "\n");
 	fprintf(out,
-		"\nThe DBPath and ADDBStobPath should be the same as those\n"
+		"\nThe BE Path and ADDBStobPath should be the same as those\n"
 		"specified for the matching options of the m0d\n"
 		"request handler that generated the ADDB repository.\n"
-		"The DBPath is not required for Linux stob.\n");
+		"The BE Path is not required for Linux stob.\n");
 	fprintf(out, "\n"
 		"Each dumped record includes a sequence identifier, the event\n"
 		"type, its timestamp, its fields and its context(s).\n");
@@ -1037,9 +1025,7 @@ int main(int argc, char *argv[])
 	} else {
 		ctl.adc_out = stdout;
 	}
-	printf("hello 1\n");
 	rc = setup(&ctl);
-	printf("hello 2\n");
 	if (rc != 0)
 		goto done;
 	ctl.adc_iter->asi_seq_set(ctl.adc_iter, min_seg_id);
@@ -1047,7 +1033,6 @@ int main(int argc, char *argv[])
 		rc = bindump(&ctl);
 	else
 		rc = dump(&ctl);
-	printf("hello 3\n");
 	cleanup(&ctl);
 done:
 	if (ctl.adc_out != NULL && ctl.adc_out != stdout)
diff --git a/be/btree.c b/be/btree.c
index 1bed54a..750051f 100644
--- a/be/btree.c
+++ b/be/btree.c
@@ -132,9 +132,6 @@ static int be_btree_compare(const struct m0_be_btree *btree,
 	const struct m0_be_btree_kv_ops *ops = btree->bb_ops;
 
 	M0_PRE(ops != NULL);
-	m0_console_printf("ops: %p\n", ops);
-	m0_console_printf("ops->ko_table_ops: %p\n", ops->ko_table_ops);
-	m0_console_printf("ops->ko_table: %p\n", ops->ko_table);
 	M0_PRE(equi(ops->ko_table != NULL, ops->ko_table_ops != NULL));
 
 	return ops->ko_table_ops == NULL ?
diff --git a/mero/init.c b/mero/init.c
index a33919b..01868ad 100644
--- a/mero/init.c
+++ b/mero/init.c
@@ -172,10 +172,9 @@ struct init_fini_call subsystem[] = {
 
 static void fini_nr(int i)
 {
-	while (--i >= 0) {
+	while (--i >= 0)
 		if (subsystem[i].ifc_fini != NULL)
 			subsystem[i].ifc_fini();
-	}
 }
 
 int m0_init(void)
-- 
1.8.3.2

