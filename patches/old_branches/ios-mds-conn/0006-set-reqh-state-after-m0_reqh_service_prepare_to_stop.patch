From d5a3dd76b13282dcd9f5d1a1df590013c9543096 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Tue, 9 Apr 2013 23:22:55 +0800
Subject: [PATCH 06/10] set reqh state after m0_reqh_service_prepare_to_stop()
 on all services.

---
 reqh/reqh.c | 14 ++++++--------
 1 file changed, 6 insertions(+), 8 deletions(-)

diff --git a/reqh/reqh.c b/reqh/reqh.c
index 1d41976..d6be26e 100644
--- a/reqh/reqh.c
+++ b/reqh/reqh.c
@@ -388,14 +388,6 @@ M0_INTERNAL void m0_reqh_shutdown_wait(struct m0_reqh *reqh)
 	struct m0_reqh_service *rpcservice = NULL;
 
 	M0_PRE(reqh != NULL);
-        m0_rwlock_write_lock(&reqh->rh_rwlock);
-	M0_PRE(m0_reqh_invariant(reqh));
-
-	M0_PRE(m0_reqh_state_get(reqh) == M0_REQH_ST_NORMAL);
-	reqh_state_set(reqh, M0_REQH_ST_DRAIN);
-
-        m0_rwlock_write_unlock(&reqh->rh_rwlock);
-
 	m0_tl_for(m0_reqh_svc, &reqh->rh_services, service) {
 		M0_ASSERT(m0_reqh_service_invariant(service));
 		/* skip mdservice in first loop */
@@ -418,6 +410,12 @@ M0_INTERNAL void m0_reqh_shutdown_wait(struct m0_reqh *reqh)
 	if (rpcservice != NULL)
 		m0_reqh_service_prepare_to_stop(rpcservice);
 
+	m0_rwlock_write_lock(&reqh->rh_rwlock);
+	M0_PRE(m0_reqh_invariant(reqh));
+	M0_PRE(m0_reqh_state_get(reqh) == M0_REQH_ST_NORMAL);
+	reqh_state_set(reqh, M0_REQH_ST_DRAIN);
+	m0_rwlock_write_unlock(&reqh->rh_rwlock);
+
 	m0_reqh_fom_domain_idle_wait(reqh);
 }
 
-- 
1.8.3.2

