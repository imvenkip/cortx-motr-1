From 6864017ec677fda05dff9b92f1e23c67f3669703 Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Tue, 1 Apr 2014 14:04:59 -0700
Subject: [PATCH 07/11] seg0: removed b0_dom from 0types, fixed numerous
 warnings.

---
 be/linux_kernel/stubs.c | 23 +++++++++++++++++++++++
 be/seg0.c               | 22 +++++++++++-----------
 be/seg0.h               | 14 +++++++-------
 be/ut/seg_dict.c        | 15 +++++++--------
 mero/magic.h            |  8 ++++----
 mero/mero-pub.api       |  2 ++
 6 files changed, 54 insertions(+), 30 deletions(-)

diff --git a/be/linux_kernel/stubs.c b/be/linux_kernel/stubs.c
index e243944..47a6c9c 100644
--- a/be/linux_kernel/stubs.c
+++ b/be/linux_kernel/stubs.c
@@ -270,3 +270,26 @@ m0_be_ut_backend_sm_group_lookup(struct m0_be_ut_backend *ut_be)
 void m0_be_ut_tx_init(struct m0_be_tx *tx, struct m0_be_ut_backend *ut_be)
 {
 }
+
+void m0_be_ut_fake_mkfs(void)
+{
+}
+
+void m0_be_ut_seg0_test(void)
+{
+}
+
+void m0_be_ut_backend_mkfs_init(struct m0_be_ut_backend *ut_be)
+{
+}
+
+void m0_be_ut__seg_allocator_init(struct m0_be_seg *seg,
+				  struct m0_be_ut_backend *ut_be)
+{
+}
+
+M0_INTERNAL
+struct m0_be_seg *m0_be_domain_seg0_get(const struct m0_be_domain *dom)
+{
+	return NULL;
+}
diff --git a/be/seg0.c b/be/seg0.c
index 6f472ac..bc72e78 100644
--- a/be/seg0.c
+++ b/be/seg0.c
@@ -28,8 +28,7 @@
 
 static bool be_0type_invarinat(const struct m0_be_0type *zt, bool registered)
 {
-	return ergo(registered, zt_tlink_is_in(zt)  &&
-				zt->b0_dom != NULL) &&
+	return ergo(registered, zt_tlink_is_in(zt)) &&
 		zt->b0_name != NULL &&
 		zt->b0_init != NULL &&
 		zt->b0_fini != NULL;
@@ -64,33 +63,34 @@ void m0_be_0type_register(struct m0_be_domain *dom, struct m0_be_0type *zt)
 	M0_PRE(dom_is_locked(dom));
 
 	zt_tlink_init_at_tail(zt, &dom->bd_0type_list);
-	zt->b0_dom = dom;
 }
 
-int m0_be_0type_add(struct m0_be_0type *zt, struct m0_be_tx *tx,
-		    const char *suffix, const struct m0_buf *data)
+int m0_be_0type_add(struct m0_be_0type *zt, const struct m0_be_domain *dom,
+		    struct m0_be_tx *tx, const char *suffix,
+		    const struct m0_buf *data)
 {
 	struct m0_be_seg *seg;
 	char              keyname[1024] = {};
 
-	M0_PRE(dom_is_locked(zt->b0_dom));
+	M0_PRE(dom_is_locked(dom));
 	M0_PRE(be_0type_invarinat(zt, true));
 
-	seg = seg0_get(zt->b0_dom);
+	seg = seg0_get(dom);
 	keyname_format(zt, suffix, keyname);
 	return m0_be_seg_dict_insert(seg, tx, keyname, data->b_addr);
 }
 
-int m0_be_0type_del(struct m0_be_0type *zt, struct m0_be_tx *tx,
-		    const char *suffix)
+int m0_be_0type_del(struct m0_be_0type *zt, const struct m0_be_domain *dom,
+		    struct m0_be_tx *tx, const char *suffix,
+		    const struct m0_buf *data)
 {
 	struct m0_be_seg *seg;
 	char              keyname[1024] = {};
 
-	M0_PRE(dom_is_locked(zt->b0_dom));
+	M0_PRE(dom_is_locked(dom));
 	M0_PRE(be_0type_invarinat(zt, true));
 
-	seg = seg0_get(zt->b0_dom);
+	seg = seg0_get(dom);
 	keyname_format(zt, suffix, keyname);
 	return m0_be_seg_dict_delete(seg, tx, keyname);
 }
diff --git a/be/seg0.h b/be/seg0.h
index 8a7892f..9bb78ec 100644
--- a/be/seg0.h
+++ b/be/seg0.h
@@ -66,9 +66,6 @@ struct m0_be_0type {
 	/** linkage in a list of 0types into m0_be_domain. */
 	struct m0_tlink      b0_linkage;
 	uint64_t             b0_magic;
-
-	/** domain which contains this 0type instance */
-	struct m0_be_domain *b0_dom;
 };
 
 M0_TL_DECLARE(zt, M0_INTERNAL, struct m0_be_0type);
@@ -80,13 +77,16 @@ void m0_be_0type_register(struct m0_be_domain *dom, struct m0_be_0type *zt);
 /**
  * Adds a record about 0type instance to the seg0 dictionary.
  */
-int  m0_be_0type_add(struct m0_be_0type *zt, struct m0_be_tx *tx,
-		     const char *suffix, const struct m0_buf *data);
+int m0_be_0type_add(struct m0_be_0type *zt, const struct m0_be_domain *dom,
+		    struct m0_be_tx *tx, const char *suffix,
+		    const struct m0_buf *data);
+
 /**
  * Deletes a record about 0type instance from the seg0 dictionary.
  */
-int  m0_be_0type_del(struct m0_be_0type *zt, struct m0_be_tx *tx,
-		     const char *suffix);
+int m0_be_0type_del(struct m0_be_0type *zt, const struct m0_be_domain *dom,
+		    struct m0_be_tx *tx, const char *suffix,
+		    const struct m0_buf *data);
 
 /**
  * <hr> <!------------------------------------------------------------>
diff --git a/be/ut/seg_dict.c b/be/ut/seg_dict.c
index 04e554a..7d29860 100644
--- a/be/ut/seg_dict.c
+++ b/be/ut/seg_dict.c
@@ -111,14 +111,13 @@ void m0_be_ut_seg_dict(void)
 		const char *name;
 		void       **value;
 	} dict[] = {
-			{ "dead", (void*)0xdead },
-			{ "beaf", (void*)0xbeaf },
-			{ "cafe", (void*)0xcafe },
-			{ "babe", (void*)0xbabe },
-			{ "d00d", (void*)0xd00d },
-			{ "8bad", (void*)0x8bad },
-			{ "f00d", (void*)0xf00d },
-
+			{ "dead",       (void*)0xdead },
+			{ "beaf",       (void*)0xbeaf },
+			{ "cafe",       (void*)0xcafe },
+			{ "babe",       (void*)0xbabe },
+			{ "d00d",       (void*)0xd00d },
+			{ "8bad",       (void*)0x8bad },
+			{ "f00d",       (void*)0xf00d },
 		[OPT] = { "M0_BE:opt1", (void*)0xf00d0001 },
 			{ "M0_BE:opt2", (void*)0xf00d0002 },
 			{ "M0_BE:opt3", (void*)0xf00d0003 },
diff --git a/mero/magic.h b/mero/magic.h
index ee97ad2..ffada66 100644
--- a/mero/magic.h
+++ b/mero/magic.h
@@ -155,11 +155,11 @@ enum m0_magic_satchel {
 	/* be_alloc_chunk::bac_magic_free (edifice faded) */
 	M0_BE_ALLOC_FREE_LINK_MAGIC = 0xed1f1cefaded,
 
-	/* m0_be_tx::t_magic (badabooooooo) */
-	M0_BE_0TYPE_MAGIC = 0x33badab000000177,
+	/* m0_be_tx::t_magic (bee fires stig) */
+	M0_BE_0TYPE_MAGIC = 0x33beef17e5519177,
 
-	/* m0_be_tx::t_magic (badabooooooo) */
-	M0_BE_SEG_MAGIC = 0x33badab000000177,
+	/* m0_be_tx::t_magic (bee seg faded) */
+	M0_BE_SEG_MAGIC = 0x33bee5e9faded177,
 
 /* m0t1fs */
 	/* m0t1fs_sb::s_magic (cozie filesis) */
diff --git a/mero/mero-pub.api b/mero/mero-pub.api
index 2f41d9c..b3dd203 100644
--- a/mero/mero-pub.api
+++ b/mero/mero-pub.api
@@ -178,3 +178,5 @@ m0_be_0type_add
 m0_be_0type_del
 m0_be_0type_register
 m0_be_ut_backend_mkfs_init
+m0_be_ut__seg_allocator_fini
+m0_be_ut__seg_allocator_init
-- 
1.8.3.2

