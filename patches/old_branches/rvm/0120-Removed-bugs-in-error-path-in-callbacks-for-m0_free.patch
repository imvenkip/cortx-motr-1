From 8cd9afa37b2d9fc477b9e9e047a269a6ee000f2a Mon Sep 17 00:00:00 2001
From: Sachin Patil <sachin_patil@xyratex.com>
Date: Thu, 6 Jun 2013 06:15:04 -0700
Subject: [PATCH 120/121] Removed bugs in error path in callbacks for m0_free.

---
 be/be_rvm.c         | 10 +++++----
 be/handle_store.c   |  4 ++++
 be/kv_store.c       | 14 +++++++------
 be/tx.c             |  5 +++++
 rvm/rvm_logstatus.c | 60 +++++++++++++++++++++++++++++++++++------------------
 rvm/rvm_map.c       | 13 +++++++-----
 rvm/rvm_status.c    | 15 +++++++-------
 rvm/rvm_trans.c     |  1 -
 8 files changed, 79 insertions(+), 43 deletions(-)

diff --git a/be/be_rvm.c b/be/be_rvm.c
index 21a8348..ee8978d 100644
--- a/be/be_rvm.c
+++ b/be/be_rvm.c
@@ -43,7 +43,7 @@ int m0_be_rvm_init(struct m0_be_domain *dom,
         struct linux_domain      *ldom;
         struct m0_stob           *log_stob = dom->bd_impl.log_stob;
         int                      nbytes;
-        rvm_cbdata_t            *rvm_cbdata;
+        rvm_cbdata_t            *rvm_cbdata = NULL;
         struct m0_be_cbinfo     *rvm_cbinfo;
         int                      status;
         m0_be_msg_type_t         msg_type = M0_BE_SUCCESS;
@@ -91,7 +91,8 @@ int m0_be_rvm_init(struct m0_be_domain *dom,
 exit:
         if (status != 0 && cbinfo != NULL && cbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo, status, msg_type);
-                m0_free(rvm_cbdata);
+		if (rvm_cbdata != NULL)
+			m0_free(rvm_cbdata);
         }
 
         return 0;
@@ -104,12 +105,13 @@ void rvm_initialize_cb(struct m0_be_cbinfo     *cbinfo,
         rvm_options_t            *options;
         rvm_cbdata_t             *rvm_cbd;
 
+	M0_PRE(cbinfo != NULL);
+        rvm_cbd   = container_of(cbinfo, rvm_cbdata_t, rvm_cbinfo);
+
 	if (status != 0)
 		goto exit;
 
-        rvm_cbd   = container_of(cbinfo, rvm_cbdata_t, rvm_cbinfo);
         options   = rvm_cbd->rvm_options;
-
 	if (options == NULL) {
 		status   = -1;
 		msg_type =  M0_BE_INTERNAL;
diff --git a/be/handle_store.c b/be/handle_store.c
index b441ce4..30b2375 100644
--- a/be/handle_store.c
+++ b/be/handle_store.c
@@ -154,9 +154,13 @@ M0_INTERNAL void m0_be_hs_tx_cb(struct m0_be_cbinfo *cbinfo, int status,
 
         M0_ASSERT(tx != NULL);
 
+	if (status != 0)
+		goto exit;
+
         m0_be_tx_fini(tx);
         m0_free(tx);
 
+exit:
         if(cbinfo->bc_pcbinfo != NULL && cbinfo->bc_pcbinfo->bc_cb != NULL)
                 m0_be_handler_post(cbinfo->bc_pcbinfo, status, msg_type);
 
diff --git a/be/kv_store.c b/be/kv_store.c
index a2c6e18..dd40e5f 100644
--- a/be/kv_store.c
+++ b/be/kv_store.c
@@ -201,7 +201,8 @@ M0_INTERNAL void m0_be_ks_init(struct m0_be_kv_store     *handle,
 exit:
 	if (status != 0 && cbinfo != NULL && cbinfo->bc_cb) {
 		m0_be_handler_post(cbinfo, status, msg);
-		m0_free(bk_cbdata);
+		if (bk_cbdata != NULL)
+			m0_free(bk_cbdata);
 	}
 }
 M0_EXPORTED(m0_be_ks_init);
@@ -825,12 +826,12 @@ M0_INTERNAL void m0_be_ksi_hs_cb(struct m0_be_cbinfo *cbinfo, int status,
         struct m0_be_domain         *dom;
         struct m0_sm_group          *sm_group;
 
+        M0_ENTRY();
+        bk_cbdata  = container_of(cbinfo, struct m0_be_ks_cbdata, bkc_cbinfo);
+
 	if (status != 0)
 		goto exit;
 
-        M0_ENTRY();
-
-        bk_cbdata  = container_of(cbinfo, struct m0_be_ks_cbdata, bkc_cbinfo);
         tx         = bk_cbdata->bkc_tx;
         descr      = bk_cbdata->bkc_handle->ks_handle_heap.ksh_list_descr;
         rvm_handle = bk_cbdata->bkc_handle->ks_handle_rvm;
@@ -864,12 +865,11 @@ M0_INTERNAL void m0_be_ksi_tx_cb(struct m0_be_cbinfo *cbinfo, int status,
         struct m0_be_reg        *reg;
 
         M0_ENTRY();
+        bk_cbdata  = container_of(cbinfo, struct m0_be_ks_cbdata, bkc_cbinfo);
 
 	if (status != 0)
 		goto exit;
 
-        bk_cbdata  = container_of(cbinfo, struct m0_be_ks_cbdata, bkc_cbinfo);
-
         tx  = bk_cbdata->bkc_tx;
         reg = bk_cbdata->bkc_reg;
 
@@ -1027,6 +1027,8 @@ exit:
 	    bkc_cbinfo->bc_pcbinfo->bc_cb != NULL) {
 	    	m0_be_handler_post(bkc_cbinfo->bc_pcbinfo, status, msg);
 		m0_free(bk_cbdata);
+		if (bh_cbdata != NULL)
+			m0_free(bh_cbdata);
 	}
 }
 
diff --git a/be/tx.c b/be/tx.c
index 53a5d5f..cfc3e32 100644
--- a/be/tx.c
+++ b/be/tx.c
@@ -216,6 +216,8 @@ M0_INTERNAL void m0_be_tx_done(struct m0_be_tx *tx, struct m0_be_cbinfo *cbinfo)
 exit:
         if (status != 0 && cbinfo != NULL && cbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo, status, msg_type);
+		if (bt_cbdata != NULL)
+			m0_free(bt_cbdata);
         }
 }
 
@@ -260,7 +262,9 @@ M0_INTERNAL void td_rvm_end_transaction_cb(struct m0_be_cbinfo *cbinfo,
         struct m0_be_reg         *reg_it;
         enum m0_be_tx_state       tx_state;
 
+	M0_PRE(cbinfo != NULL);
         bt_cbdata = container_of(cbinfo, struct m0_be_tx_cbdata, btc_cbinfo);
+
         if(status != 0)
                 goto tx_exit;
 
@@ -299,6 +303,7 @@ M0_INTERNAL void m0_be_tx_done_cb(struct m0_be_cbinfo *cbinfo, int status,
         rvm_return_t              ret;
         enum m0_be_tx_state       tx_state;
 
+	M0_PRE(cbinfo != NULL);
 	bt_cbdata = container_of(cbinfo, struct m0_be_tx_cbdata, btc_cbinfo);
         if(status != 0)
                 goto tx_exit;
diff --git a/rvm/rvm_logstatus.c b/rvm/rvm_logstatus.c
index 198f6e7..c147cc1 100644
--- a/rvm/rvm_logstatus.c
+++ b/rvm/rvm_logstatus.c
@@ -317,10 +317,12 @@ void pwb_read_dev_cb(struct m0_be_cbinfo *cbinfo, int be_status,
     log_status_t      *status = NULL; /* log status descriptor */
     rcl_cbdata_t      *rcl_cbdata;
 
+    rcl_cbdata = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
+
     if(be_status != 0)
      	goto exit;
-    rcl_cbdata  = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
-    log         = rcl_cbdata->rclc_log;
+
+    log = rcl_cbdata->rclc_log;
 
     status   = &log->status;
     dev      = &log->dev;
@@ -337,11 +339,11 @@ exit:
      m0_free(rcl_cbdata);
 }
 /* pre-load log raw i/o gather write buffer with tail log sector */
-static rvm_return_t preload_wrt_buf(log,cbinfo)
+static rvm_return_t preload_wrt_buf(log, cbinfo)
     log_t           	 *log;               /* log descriptor */
     struct m0_be_cbinfo  *cbinfo;
 {
-    device_t              *dev = &log->dev;   /* device descriptor ptr */
+    device_t              *dev 	  = &log->dev;   /* device descriptor ptr */
     log_status_t          *status = &log->status; /* log status descriptor */
     rvm_offset_t           tail_sector;        /* log tail sector */
     rcl_cbdata_t          *rcl_cbdata;
@@ -356,9 +358,9 @@ static rvm_return_t preload_wrt_buf(log,cbinfo)
                 goto exit;
     }
 
-    rcl_cbdata->rclc_log                = log;
+    rcl_cbdata->rclc_log = log;
+    rcl_cbinfo     	 = &rcl_cbdata->rclc_cbinfo;
 
-    rcl_cbinfo                          = &rcl_cbdata->rclc_cbinfo;
     m0_be_cbinfo_copy_helper(cbinfo, rcl_cbinfo, pwb_read_dev_cb);
 
     tail_sector = CHOP_OFFSET_TO_SECTOR_SIZE(status->log_tail);
@@ -373,7 +375,8 @@ exit:
             cbinfo->bc_pcbinfo != NULL &&
             cbinfo->bc_pcbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo->bc_pcbinfo, be_status, msg_type);
-                m0_free(rcl_cbdata);
+		if (rcl_cbdata != NULL)
+			m0_free(rcl_cbdata);
     }
     return RVM_SUCCESS;
 }
@@ -388,10 +391,12 @@ void ol_read_log_status_cb(struct m0_be_cbinfo *cbinfo, int status,
     rcl_cbdata_t                *rcl_cbdata;
     rvm_options_t               *rvm_options;
 
+    M0_ASSERT(cbinfo != NULL);
+    rcl_cbdata = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
+
     if(status != 0)
     	goto ol_err_exit;
 
-    rcl_cbdata  = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
     log         = rcl_cbdata->rclc_log;
     rvm_options = rcl_cbdata->rclc_rvm_options;
     log_ptr     = rcl_cbdata->rclc_out_log_ptr;
@@ -535,11 +540,12 @@ ol_err_exit:
             cbinfo->bc_pcbinfo != NULL &&
             cbinfo->bc_pcbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo->bc_pcbinfo, retval, msg_type);
-                m0_free(rcl_cbdata);
+		if (rcl_cbdata != NULL)
+			m0_free(rcl_cbdata);
         }
 
     return retval;
-    }
+}
 
 
 void do_log_options_cb(struct m0_be_cbinfo *cbinfo, int status,
@@ -551,7 +557,12 @@ void do_log_options_cb(struct m0_be_cbinfo *cbinfo, int status,
     rcl_cbdata_t                *rcl_cbdata;
     rvm_options_t               *rvm_options;
 
+    M0_ASSERT(cbinfo != NULL);
     rcl_cbdata  = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
+
+    if (status != 0)
+    	goto exit;
+
     log         = rcl_cbdata->rclc_log;
     log_ptr     = rcl_cbdata->rclc_out_log_ptr;
     rvm_options = rcl_cbdata->rclc_rvm_options;
@@ -594,6 +605,9 @@ void dlo_open_log_cb(struct m0_be_cbinfo *cbinfo, int status,
       rcl_cbdata  = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
       log         = rcl_cbdata->rclc_log;
 
+      if (status != 0)
+      	goto exit;
+
       rcl_cbinfo	= &rcl_cbdata->rclc_cbinfo;
       cbinfo->bc_cb 	= do_log_options_cb;
 
@@ -607,6 +621,7 @@ void dlo_open_log_cb(struct m0_be_cbinfo *cbinfo, int status,
                 retval    = RVM_ELOG;
       }
 
+exit:
       if (status != 0 &&
           cbinfo->bc_pcbinfo != NULL &&
           cbinfo->bc_pcbinfo->bc_cb != NULL) {
@@ -674,7 +689,8 @@ exit:
             cbinfo->bc_pcbinfo != NULL &&
             cbinfo->bc_pcbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo->bc_pcbinfo, status, msg_type);
-                m0_free(rcl_cbdata);
+		if (rcl_cbdata != NULL)
+			m0_free(rcl_cbdata);
         }
         return retval;
 }
@@ -873,7 +889,7 @@ rvm_return_t init_log_status(log, cbinfo)
         }
 
     /* write the device areas */
-    return write_log_status(log,NULL, cbinfo);
+    return write_log_status(log, NULL, cbinfo);
     }
 
 void rls_read_dev_cb(struct m0_be_cbinfo *cbinfo, int be_status,
@@ -885,10 +901,12 @@ void rls_read_dev_cb(struct m0_be_cbinfo *cbinfo, int be_status,
     rcl_cbdata_t          *rcl_cbdata;
     rvm_length_t           saved_chk_sum;  /* save area for checksum read */
 
+    M0_ASSERT(cbinfo != NULL);
+    rcl_cbdata = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
+
     if(be_status != 0)
     	goto err_exit;
 
-    rcl_cbdata  = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
     log         = rcl_cbdata->rclc_log;
     status      = &log->status; /* status area descriptor */
     dev_status  = rcl_cbdata->rclc_dev_status;
@@ -989,7 +1007,8 @@ exit:
             cbinfo->bc_pcbinfo != NULL &&
             cbinfo->bc_pcbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo->bc_pcbinfo, be_status, msg_type);
-                m0_free(rcl_cbdata);
+		if (rcl_cbdata != NULL)
+			m0_free(rcl_cbdata);
     }
 
     return RVM_SUCCESS;
@@ -1331,12 +1350,12 @@ void rcl_write_dev_cb(struct m0_be_cbinfo *cbinfo, int status,
         rcl_cbdata_t            *rcl_cbdata;
         log_t                   *log;
 
+        M0_ASSERT(cbinfo != NULL);
+        rcl_cbdata = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
+
         if (status != 0)
                 goto exit;
 
-        M0_ASSERT(cbinfo != NULL);
-
-        rcl_cbdata = container_of(cbinfo, rcl_cbdata_t, rclc_cbinfo);
         log = rcl_cbdata->rclc_log;
 
         /* complete initialization */
@@ -1367,7 +1386,7 @@ rvm_return_t rvm_create_log(rvm_options, log_len,mode, cbinfo)
 	long                     save_errno;
 	rvm_return_t             retval;
 	int                      status = 0;
-	rcl_cbdata_t            *rcl_cbdata;
+	rcl_cbdata_t            *rcl_cbdata = NULL;
 	struct m0_be_cbinfo     *rclc_cbinfo;
 	m0_be_msg_type_t         msg_type = M0_BE_SUCCESS;
 
@@ -1502,9 +1521,10 @@ err_exit:
 
 exit:
 	if (status != 0 && cbinfo->bc_pcbinfo != NULL &&
-		       cbinfo->bc_pcbinfo->bc_cb != NULL) {
+            cbinfo->bc_pcbinfo->bc_cb != NULL) {
 		m0_be_handler_post(cbinfo->bc_pcbinfo, status, msg_type);
-		m0_free(rcl_cbdata);
+		if (rcl_cbdata != NULL)
+			m0_free(rcl_cbdata);
 	}
 	return retval;
 }
diff --git a/rvm/rvm_map.c b/rvm/rvm_map.c
index 4e9a6dc..374c990 100644
--- a/rvm/rvm_map.c
+++ b/rvm/rvm_map.c
@@ -911,10 +911,12 @@ void cd_wait_for_truncate_cb(cbinfo, status, msg)
 	region_t	       *x_region;
 	rvm_return_t		ret;
 
+	M0_ASSERT(cbinfo != NULL);
+	cd_cbdata = container_of(cbinfo, chk_depend_cbdata_t, cdc_cbinfo);
+
 	if (status != 0)
 		goto exit;
 
-	cd_cbdata = container_of(cbinfo, chk_depend_cbdata_t, cdc_cbinfo);
 	seg	  = cd_cbdata->cdc_seg;
 	region	  = cd_cbdata->cdc_region;
 	x_region  = cd_cbdata->cdc_x_region;
@@ -959,7 +961,7 @@ static rvm_return_t chk_dependencies(seg, region, cbinfo)
     region_t        	  *region;
     struct m0_be_cbinfo   *cbinfo;
 {
-	chk_depend_cbdata_t *cd_cbdata;
+	chk_depend_cbdata_t *cd_cbdata = NULL;
 	struct m0_be_cbinfo *cd_cbinfo;
 	region_t            *x_region;    /* conflicting or dependent region */
 	rvm_return_t         ret       = RVM_SUCCESS;
@@ -1027,7 +1029,7 @@ static rvm_return_t chk_dependencies(seg, region, cbinfo)
 	if ((x_region == NULL || be_status != 0)  &&
 	    cbinfo != NULL && cbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo, be_status, msg);
-		if (be_status != 0)
+		if (be_status != 0 && cd_cbdata != NULL)
 			m0_free(cd_cbdata);
         }
 	return ret;
@@ -1165,7 +1167,7 @@ exit:
 	if (cbinfo->bc_pcbinfo != NULL && cbinfo->bc_pcbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo->bc_pcbinfo, status, msg_type);
         }
-	/*m0_free(rm_cbdata);*/
+	m0_free(rm_cbdata);
 }
 
 void rm_chk_dependencies_cb(struct m0_be_cbinfo *cbinfo, int status,
@@ -1384,7 +1386,8 @@ exit:
 	if (status != 0 && cbinfo->bc_pcbinfo != NULL &&
 	    cbinfo->bc_pcbinfo->bc_cb != NULL) {
                 m0_be_handler_post(cbinfo->bc_pcbinfo, status, msg_type);
-		m0_free(rm_cbdata);
+		if (rm_cbdata != NULL)
+			m0_free(rm_cbdata);
         }
 	return status;
 }
diff --git a/rvm/rvm_status.c b/rvm/rvm_status.c
index a9322da..68572d3 100644
--- a/rvm/rvm_status.c
+++ b/rvm/rvm_status.c
@@ -117,12 +117,12 @@ void do_rvm_options_cb(struct m0_be_cbinfo *cbinfo, int status,
         ri_cbdata_t             *ri_cbdata;
         rvm_options_t           *rvm_options;
 
+        M0_ASSERT(cbinfo != NULL);
+        ri_cbdata  = container_of(cbinfo, ri_cbdata_t, ric_cbinfo);
+
         if (status != 0)
                 goto err_exit;
 
-        M0_ASSERT(cbinfo != NULL);
-
-        ri_cbdata  = container_of(cbinfo, ri_cbdata_t, ric_cbinfo);
         rvm_options = ri_cbdata->ric_rvm_options;
 
         if (rvm_options != NULL)
@@ -152,7 +152,7 @@ rvm_return_t do_rvm_options(rvm_options, cbinfo)
     rvm_return_t                 retval;
     int                          status = 0;
     m0_be_msg_type_t             msg_type= M0_BE_SUCCESS;
-    ri_cbdata_t                 *ri_cbdata;
+    ri_cbdata_t                 *ri_cbdata = NULL;
     struct m0_be_cbinfo         *ri_cbinfo;
 
     if (rvm_options != NULL)
@@ -170,9 +170,9 @@ rvm_return_t do_rvm_options(rvm_options, cbinfo)
 		msg_type = -ENOMEM;
 		goto exit;
 	}
-        ri_cbdata->ric_rvm_options         = rvm_options;
+        ri_cbdata->ric_rvm_options = rvm_options;
 
-        ri_cbinfo                          = &ri_cbdata->ric_cbinfo;
+        ri_cbinfo = &ri_cbdata->ric_cbinfo;
         m0_be_cbinfo_copy_helper(cbinfo, ri_cbinfo, do_rvm_options_cb);
 
         /* do log - modifying options */
@@ -184,7 +184,8 @@ exit:
     if (status != 0 && cbinfo->bc_pcbinfo != NULL &&
         cbinfo->bc_pcbinfo->bc_cb != NULL) {
            m0_be_handler_post(cbinfo->bc_pcbinfo, status, msg_type);
-           m0_free(ri_cbdata);
+	   if (ri_cbdata != NULL)
+		   m0_free(ri_cbdata);
     }
     return RVM_SUCCESS;
 }
diff --git a/rvm/rvm_trans.c b/rvm/rvm_trans.c
index c81caf2..233a489 100644
--- a/rvm/rvm_trans.c
+++ b/rvm/rvm_trans.c
@@ -846,7 +846,6 @@ static rvm_return_t queue_tid(int_tid_t *tid, struct m0_be_cbinfo *cbinfo)
 	int			 status = 0;
 	m0_be_msg_type_t 	 msg_type = M0_BE_SUCCESS;
 
-
 	/* make sure transaction not too large for log */
 	if ((retval = nv_io_size(tid,&tid->log_size)) != RVM_SUCCESS) {
 		status = -1;
-- 
1.8.3.2

