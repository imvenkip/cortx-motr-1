From 4ae95c57e1065a5499dd1e36011c5edefac3a052 Mon Sep 17 00:00:00 2001
From: Zishan Shaikh <zishan_shaikh@xyratex.com>
Date: Tue, 4 Jun 2013 00:15:03 -0700
Subject: [PATCH 114/121] Removed m0_be_kv_find_helper from COB and a few lines
 of dead code from kvstore

---
 be/helper.c   | 21 ---------------------
 be/helper.h   |  5 -----
 be/kv_store.c | 45 ---------------------------------------------
 cob/cob.c     |  6 +++---
 4 files changed, 3 insertions(+), 74 deletions(-)

diff --git a/be/helper.c b/be/helper.c
index e65af05..75ab2ca 100644
--- a/be/helper.c
+++ b/be/helper.c
@@ -178,27 +178,6 @@ exit:
 }
 M0_EXPORTED(m0_kv_malloc_helper);
 
-M0_INTERNAL void *m0_kv_find_helper(struct m0_be_kv_store *handle,
-                                    void                  *key,
-                                    void                  *cbdata,
-				    struct m0_be_cbinfo   *cbinfo)
-/*void                 (*find_cb)(void *data,*/
-/*void *res,*/
-/*int   rc))*/
-{
-        void                    *result;
-
-	/*if (cbdata != NULL && find_cb != NULL) {*/
-	/*M0_ALLOC_PTR(cb_info);*/
-	/*cb_info->ksc_cbdata     = cbdata;*/
-	/*cb_info->ksc_cb         = find_cb;*/
-	/*}*/
-
-        result = m0_be_ks_find(handle, cbinfo, key);
-        return result;
-}
-M0_EXPORTED(m0_kv_find_helper);
-
 M0_INTERNAL int32_t m0_kv_delete_helper(struct m0_be_kv_store *handle,
                                         struct m0_be_tx       *tx,
                                         void                  *target,
diff --git a/be/helper.h b/be/helper.h
index 4a4437c..0f99ec5 100644
--- a/be/helper.h
+++ b/be/helper.h
@@ -74,11 +74,6 @@ M0_INTERNAL void *m0_kv_malloc_helper(struct m0_be_domain     *cob_be_domain,
                                       struct m0_be_reference **ref_out,
                                       uint64_t                 sizeof_obj);
 
-M0_INTERNAL void *m0_kv_find_helper(struct m0_be_kv_store *handle,
-                                    void                  *key,
-                                    void                  *cbdata,
-				    struct m0_be_cbinfo   *cbinfo);
-
 M0_INTERNAL int32_t m0_kv_delete_helper(struct m0_be_kv_store *handle,
                                         struct m0_be_tx       *tx,
                                         void                  *target,
diff --git a/be/kv_store.c b/be/kv_store.c
index 4a589c6..553140d 100644
--- a/be/kv_store.c
+++ b/be/kv_store.c
@@ -177,10 +177,6 @@ M0_INTERNAL void m0_be_ks_init(struct m0_be_kv_store     *handle,
 	bkc_cbinfo 		= &bk_cbdata->bkc_cbinfo;
 	m0_be_cbinfo_copy_helper(cbinfo, bkc_cbinfo, NULL);
 
-	/*bkc_ks_cbinfo->ksc_cb     = cb_info->ksc_cb;*/
-	/*bkc_ks_cbinfo->ksc_cbdata = cb_info->ksc_cbdata;*/
-	/*bk_cbdata->bkc_ks_cbinfo  = bkc_ks_cbinfo;*/
-
 	__ks_handle_create_helper(bk_cbdata);
         M0_LEAVE("handle: %p", handle);
 }
@@ -195,13 +191,6 @@ M0_INTERNAL void m0_be_ks_fini(struct m0_be_kv_store     *handle,
         M0_PRE(m0_be_ks_get_handle_state(handle) == M0_BEKS_DONE);
         ret_val = 0;
 
-	/**//* Call the callback function provided by the user. */
-	/*if (bkc_ks_cbinfo != NULL) {*/
-	/*ksc_cbdata = bkc_ks_cbinfo->ksc_cbdata;*/
-	/*M0_ASSERT(ksc_cbdata != NULL);*/
-	/*bkc_ks_cbinfo->ksc_cb(ksc_cbdata, NULL, ret_val);*/
-	/*}*/
-
         m0_free(handle);
         M0_LEAVE();
 }
@@ -238,12 +227,6 @@ M0_INTERNAL void *m0_be_ks_find(struct m0_be_kv_store     *handle,
         rc     = -ENOENT;
 
 exit_find:
-        /* Call the callback function provided by the user. */
-	/*if (bkc_ks_cbinfo != NULL) {*/
-	/*ksc_cbdata = bkc_ks_cbinfo->ksc_cbdata;*/
-	/*M0_ASSERT(ksc_cbdata != NULL);*/
-	/*bkc_ks_cbinfo->ksc_cb(ksc_cbdata, target, rc);*/
-	/*}*/
 
         M0_LEAVE("target: %p", target);
         return target;
@@ -314,13 +297,6 @@ M0_INTERNAL int32_t m0_be_ks_delete(struct m0_be_kv_store     *handle,
         ret_val = -ENOENT;
 
 exit_delete:
-	/* Call the callback function provided by the user. */
-	/*if (bkc_ks_cbinfo != NULL) {*/
-	/*ksc_cbdata = bkc_ks_cbinfo->ksc_cbdata;*/
-	/*M0_ASSERT(ksc_cbdata != NULL);*/
-	/*bkc_ks_cbinfo->ksc_cb(ksc_cbdata, NULL, ret_val);*/
-	/*}*/
-
         M0_LEAVE();
         return ret_val;
 }
@@ -404,12 +380,6 @@ M0_INTERNAL int32_t m0_be_ks_update(struct m0_be_kv_store     *handle,
         ret_val = -ENOENT;
 
 exit_update:
-        /* Call the callback function provided by the user. */
-	/*if (bkc_ks_cbinfo != NULL) {*/
-	/*ksc_cbdata = bkc_ks_cbinfo->ksc_cbdata;*/
-	/*M0_ASSERT(ksc_cbdata != NULL);*/
-	/*bkc_ks_cbinfo->ksc_cb(ksc_cbdata, NULL, ret_val);*/
-	/*}*/
         return ret_val;
 }
 M0_EXPORTED(m0_be_ks_update);
@@ -531,12 +501,6 @@ M0_INTERNAL int32_t m0_be_ks_insert(struct m0_be_kv_store     *handle,
                         ret_val = __ks_tlist_add_at_tail(handle, new, tx);
         }
 exit_insert:
-        /* Call the callback function provided by the user. */
-	/*if (bkc_ks_cbinfo != NULL) {*/
-	/*ksc_cbdata = bkc_ks_cbinfo->ksc_cbdata;*/
-	/*M0_ASSERT(ksc_cbdata != NULL);*/
-	/*bkc_ks_cbinfo->ksc_cb(ksc_cbdata, NULL, ret_val);*/
-	/*}*/
 
         M0_LEAVE("ret_val: %d", ret_val);
         return ret_val;
@@ -907,15 +871,6 @@ M0_INTERNAL void m0_be_ksi_init_done(struct m0_be_ks_cbdata *bk_cbdata)
 		m0_be_handler_post(cbinfo->bc_pcbinfo, ret_val, M0_BE_SUCCESS);
 	}
 
-	/**//* If provided, call the callback function assigned by the user */
-	/*if (bkc_ks_cbinfo != NULL) {*/
-	/*ksc_cbdata = bkc_ks_cbinfo->ksc_cbdata;*/
-	/*M0_ASSERT(ksc_cbdata != NULL);*/
-	/*bkc_ks_cbinfo->ksc_cb(ksc_cbdata, NULL, ret_val);*/
-	/**//* Was allocated in m0_be_ks_init */
-	/*m0_free(bkc_ks_cbinfo);*/
-	/*}*/
-
         /* freeing callback data sent to hs_update from __ks_create_handle. */
         m0_free(bk_cbdata->bkc_hscbdata);
         m0_free(bk_cbdata);
diff --git a/cob/cob.c b/cob/cob.c
index 72071eb..557db21 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -1040,9 +1040,9 @@ static int cob_ns_lookup(struct m0_cob *cob, struct m0_db_tx *tx)
         kv_handle    = cob->co_dom->cd_kvnamespace;
         M0_ASSERT(kv_handle != NULL);
 
-        ret_pair = (struct m0_be_ks_pair *)m0_kv_find_helper(kv_handle,
-                                                             cob->co_nskey,
-                                                             NULL, NULL);
+        ret_pair = (struct m0_be_ks_pair *)m0_be_ks_find(kv_handle, NULL,
+							 cob->co_nskey);
+
         if (ret_pair != NULL) {
                 /* cob->co_pair is used while deletion. */
                 cob->co_pair = ret_pair;
-- 
1.8.3.2

