From f1b84c212f99cdb757d84f2c19111a6eb98335de Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Thu, 21 Jun 2012 12:02:40 +0300
Subject: [PATCH 205/311] Updated DLD of `Configuration server Confd':

     - Fixed grammar defects;
     - Reworded several definitions;
     - Minor fixes.
---
 conf/confd.c            | 81 ++++++++++++++++++++++++++-----------------------
 conf/obj.c              | 23 +++++++++-----
 lib/rwlock.h            |  4 +++
 lib/user_space/rwlock.c | 18 +++++++++++
 4 files changed, 80 insertions(+), 46 deletions(-)

diff --git a/conf/confd.c b/conf/confd.c
index b728fcf..8e33146 100644
--- a/conf/confd.c
+++ b/conf/confd.c
@@ -176,20 +176,17 @@
  * @endcode
  *
  * The implementation of c2_fom_fetch_state() needs the following
- * fuctions to be defined:
+ * functions to be defined:
  *
- * - check_request() - checks incoming request and validates requested
- *     path of configuration objects.
+ * - {fetch,update}_check_request() - checks incoming request and
+ *     validates requested path of configuration objects.
  *
  * - {fetch,update}_next_state() - transits FOM states depending on the current
  *   state and on the state of configuration objects.
  *
  * - obj_serialize() - serializes given object to FOP.
  *
- * - obj_wait() - handles wait state of configuration request
- *   processing, acquires c2_fom_block_at().
- *
- * - failure_handle() - handles occurred errors.
+ * - {fetch,update}_failure_handle() - handles occurred errors.
  *
  * <hr> <!------------------------------------------------------------>
  * @section confd-lspec-state State Specification
@@ -334,7 +331,7 @@
  *
  * @code
  * bool c2_long_{read,write}_lock(struct c2_longlock *lock,
- *                                struct c2_fom *fom, int next_state);
+ *                                struct c2_fom *fom, int next_phase);
  * void c2_long_{read,write}_unlock(struct c2_longlock *lock);
  * bool c2_long_is_{read,write}_locked(struct c2_longlock *lock);
  * @endcode
@@ -355,7 +352,7 @@
  * static int fom_fetch_state(struct c2_fom *fom)
  * {
  *	//...
- *	if (fom->state == F_WAIT_RDLK) {
+ *	if (fom->fo_phase == F_WAIT_RDLK) {
  *		// try to obtain a lock, when it's obtained FOM is
  *		// transitted into F_SERIALIZE
  *
@@ -366,7 +363,7 @@
  *
  *              C2_ASSERT(c2_long_is_{read,write}_locked());
  *
- *		fom->state = F_SERIALIZE;
+ *		fom->fo_phase = F_SERIALIZE;
  *		return C2_FSO_AGAIN;
  *	}
  *	//...
@@ -391,10 +388,12 @@
  *
  * Multiple concurrently executing FOMs share the same configuration
  * cache and db environment of confd, so access to them is
- * synchronized with read/write lock. An access to db and cache, while
- * adding configuration values to cache, is done at the same time and
- * workload of confd is predominantly read-only, so simplistic
- * synchronization is enough (c2_confd::c_cache::ca_lock).
+ * synchronized with the specialized c2_longlock read/write lock
+ * designed for use in FOMs: the FOM does not busy-wait, but gets
+ * blocked until lock acquisition can be retried. Simplistic
+ * synchronization of the database and in-memory cache through means
+ * of this read/writer lock (c2_confd::c_cache::ca_lock) is
+ * sufficient, as the workload of confd is predominantly read-only.
  *
  * <hr> <!------------------------------------------------------------->
  * @subsection confd-lspec-numa NUMA Optimizations
@@ -435,12 +434,17 @@
  * <hr> <!------------------------------------------------------------->
  * @section confd-ref References
  *
- * - HLD of configuration caching:
- *   [https://docs.google.com/a/xyratex.com/document/d/1t8osSyFOsdTGYGbnMC3ynB1niVqtm6bCJSzJwh1IUw8/view]
- * - HLD of configuration.schema:
- *   [https://docs.google.com/a/xyratex.com/document/d/1JmsVBV8B4R-FrrYyJC_kX2ibzC1F-yTHEdrm3-FLQYk/view]
- * - Configuration one-pager:
- *   [https://docs.google.com/a/xyratex.com/document/d/1hnWm6x3UhWIB_9qiR69ScGF57Vcy0D38BBTdpFhe4Bo/view]
+ *  - <a href="https://docs.google.com/a/xyratex.com/document/d/
+ *1t8osSyFOsdTGYGbnMC3ynB1niVqtm6bCJSzJwh1IUw8/view">
+ *     HLD of configuration caching</a>
+ *
+ *  - <a href="https://docs.google.com/a/xyratex.com/document/d/
+ *1JmsVBV8B4R-FrrYyJC_kX2ibzC1F-yTHEdrm3-FLQYk/view">
+ *     HLD of configuration.schema</a>
+ *
+ *  - <a href="https://docs.google.com/a/xyratex.com/document/d/
+ *1hnWm6x3UhWIB_9qiR69ScGF57Vcy0D38BBTdpFhe4Bo/view">
+ *     Configuration one-pager</a>
  *
  */
 
@@ -510,23 +514,6 @@ C2_ADDB_EV_DEFINE(addb_confd, "addb-confd-warn", C2_ADDB_EVENT_CONFD_WARN,
 C2_ADDB_EV_DEFINE(addb_confd, "addb-confd-err", C2_ADDB_EVENT_CONFD_ERR,
 		  C2_ADDB_INVAL);
 
-
-/**
- * Confd service type operations.
- */
-static const struct c2_reqh_service_type_ops c2_confd_service_type_ops = {
-        .rsto_service_locate = confd_service_locate
-};
-
-/**
- * Confd service operations.
- */
-static const struct c2_reqh_service_ops c2_confd_service_ops = {
-        .rso_start = confd_service_start,
-        .rso_stop  = confd_service_stop,
-        .rso_fini  = confd_service_fini
-};
-
 /**
  * Allocate and initiate Confd service instance.
  *
@@ -555,7 +542,9 @@ static void confd_service_fini(struct c2_reqh_service *service)
 /**
  * Start Confd Service:
  * - Register Confd FOPs with service;
- * - Initiates configuration cache;
+ * - Initiates configuration cache if necessary. The first service
+     start would create the cache; subsequent service starts should
+     not;
  * - Pre-loads configuration cache from configuration db.
  *
  * @param service pointer to service instance.
@@ -618,6 +607,22 @@ void c2_confd_service_unregister(void)
 }
 
 /**
+ * Confd service type operations.
+ */
+static const struct c2_reqh_service_type_ops c2_confd_service_type_ops = {
+        .rsto_service_locate = confd_service_locate
+};
+
+/**
+ * Confd service operations.
+ */
+static const struct c2_reqh_service_ops c2_confd_service_ops = {
+        .rso_start = confd_service_start,
+        .rso_stop  = confd_service_stop,
+        .rso_fini  = confd_service_fini
+};
+
+/**
  * Serialises given path into FOP-package.
  *
  * @param confd	configuration service instance.
diff --git a/conf/obj.c b/conf/obj.c
index 39d0974..0ee3b4c 100644
--- a/conf/obj.c
+++ b/conf/obj.c
@@ -305,8 +305,10 @@
  * @test
  * -# Generate configuration DB with yaml2db and given yaml file.
  * -# Run confd, making it use newly generated DB.
- * -# Run multiple confcs on different threads, requesting the same
-      set of configuration objects.
+ * -# In user-space, run 2-3 executables, containing multiple confcs
+ *    running on different threads. In kernel-space run multiple
+ *    confcs on different threads. Confcs should request the same set
+ *    of configuration objects.
  * -# In user-space, every confc should dump configuration objects to
  *    file with name `confc-%d-%d.dump' where the first number is the
  *    process id, and the second the thread id.
@@ -368,12 +370,17 @@
  * <hr> <!------------------------------------------------------------>
  * @section conf-ref References
  *
- * - HLD of configuration caching
- *   [https://docs.google.com/a/xyratex.com/document/d/1t8osSyFOsdTGYGbnMC3ynB1niVqtm6bCJSzJwh1IUw8/view]
- * - HLD of configuration.schema
- *   [https://docs.google.com/a/xyratex.com/document/d/1JmsVBV8B4R-FrrYyJC_kX2ibzC1F-yTHEdrm3-FLQYk/view]
- * - Configuration one-pager
- *   [https://docs.google.com/a/xyratex.com/document/d/1hnWm6x3UhWIB_9qiR69ScGF57Vcy0D38BBTdpFhe4Bo/view]
+ * - <a href="https://docs.google.com/a/xyratex.com/document/d/
+ *1t8osSyFOsdTGYGbnMC3ynB1niVqtm6bCJSzJwh1IUw8/view">
+ *   HLD of configuration caching</a>
+ *
+ * - <a href="https://docs.google.com/a/xyratex.com/document/d/
+ *1JmsVBV8B4R-FrrYyJC_kX2ibzC1F-yTHEdrm3-FLQYk/view">
+ *   HLD of configuration.schema</a>
+ *
+ * - <a href="https://docs.google.com/a/xyratex.com/document/d/
+ *1hnWm6x3UhWIB_9qiR69ScGF57Vcy0D38BBTdpFhe4Bo/view">
+ *   Configuration one-pager</a>
  *
  * (@b Hint: To open a document in read/write mode replace 'view' with
  * 'edit' in its URL.)
diff --git a/lib/rwlock.h b/lib/rwlock.h
index f41a6cf..ae382bd 100644
--- a/lib/rwlock.h
+++ b/lib/rwlock.h
@@ -61,6 +61,10 @@ void c2_rwlock_read_lock(struct c2_rwlock *lock);
  */
 void c2_rwlock_read_unlock(struct c2_rwlock *lock);
 
+
+/* bool c2_rwlock_write_trylock(struct c2_rwlock *lock); */
+/* bool c2_rwlock_read_trylock(struct c2_rwlock *lock); */
+
 /** @} end of rwlock group */
 
 /* __COLIBRI_LIB_RWLOCK_H__ */
diff --git a/lib/user_space/rwlock.c b/lib/user_space/rwlock.c
index 434d847..ac2ccba 100644
--- a/lib/user_space/rwlock.c
+++ b/lib/user_space/rwlock.c
@@ -78,7 +78,25 @@ void c2_rwlock_read_unlock(struct c2_rwlock *lock)
 	rc = pthread_rwlock_unlock(&lock->rw_lock);
 	C2_ASSERT(rc == 0);
 }
+/*
+bool c2_rwlock_read_trylock(struct c2_rwlock *lock)
+{
+	int rc;
+
+	rc = pthread_rwlock_tryrdlock(&lock->rw_lock);
+	C2_ASSERT(rc == EBUSY || rc == 0);
+	return rc == 0;
+}
 
+bool c2_rwlock_write_trylock(struct c2_rwlock *lock)
+{
+	int rc;
+
+	rc = pthread_rwlock_tryrdlock(&lock->rw_lock);
+	C2_ASSERT(rc == EBUSY || rc == 0);
+	return rc == 0;	
+}
+*/
 /** @} end of rwlock group */
 
 
-- 
1.8.3.2

