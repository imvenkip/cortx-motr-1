From a67e5b0f4f13e88316cfaa26feedb923f5744dad Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Sun, 4 Mar 2012 22:57:29 +0200
Subject: [PATCH 036/311] remove rpc-related stuff from confc.c

---
 conf/confc.c | 68 +++---------------------------------------------------------
 conf/rpc.c   |  4 ++++
 2 files changed, 7 insertions(+), 65 deletions(-)

diff --git a/conf/confc.c b/conf/confc.c
index e9955d4..eaae35c 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -238,10 +238,6 @@ static inline struct c2_confc_ctx * to_ctx(struct c2_sm *mach)
 	return container_of(mach, struct c2_confc_ctx, fc_mach);
 }
 
-static void
-request_fill(struct c2_conf_fetch *req, const struct c2_conf_obj *path_org,
-	     struct c2_conf_pathcomp *path, size_t path_len);
-
 /**
  * @pre   cache's sm_group is locked
  * @pre   c2_conf_path_invariant(&ctx->fc_path)
@@ -492,69 +488,11 @@ struct c2_confc_dir {
 static bool request_is_valid(const struct c2_conf_fetch *req)
 {
 	return  req->ff_origin.o_objtype < C2_CO_NR &&
-		ret->ff_origin.o_objkey.cb_size > 0 &&
-		ret->ff_origin.o_objkey.cb_data != NULL &&
-		equi(ret->ff_comps.c_nr == 0, ret->ff_comps.c_data != NULL);
-}
-
-/** Asserts validity of the configuration request and returns its address. */
-static struct c2_conf_fetch * to_request(struct c2_rpc_item *item)
-{
-	struct c2_fop        *fop = c2_rpc_item_to_fop(item);
-	struct c2_conf_fetch *req = c2_fop_data(fop);
-
-	C2_PRE(item->ri_type == &request_item_type);
-
-	/* XXX c2_conf_fetch_bob_check() needs C2_BOB_DEFINE() and
-	 * magic field in c2_conf_fetch, but it's worth it. */
-	C2_ASSERT(req != NULL && c2_conf_fetch_bob_check(req));
-
-	C2_ASSERT(request_is_valid(req));
-	return req;
-}
-
-/**
- * Encodes configuration request into a network buffer provided by the
- * rpc layer.
- *
- * This function is assigned to ->rito_encode() callback of the
- * "request" rpc item.
- */
-static int
-request_encode(struct c2_rpc_item_type *item_type __attribute__((unused)),
-	       struct c2_rpc_item *item, struct c2_bufvec_cursor *cur)
-{
-	struct c2_xcode_ctx       xtx;
-	const struct c2_xcode_obj xobj = {
-		.xo_type = c2_conf_fetch_xc,
-		.xo_ptr  = to_request(item) /* verifies request */
-	};
-
-	c2_xcode_ctx_init(&xtx, &xobj);
-	C2_ASSERT(C2_HAS_TYPE(&xtx.xcx_buf, cur));
-	memcpy(&xtx.xcx_buf, cur, sizeof cur);
-	return c2_xcode_encode(&xtx);
+		req->ff_origin.o_objkey.cb_size > 0 &&
+		req->ff_origin.o_objkey.cb_data != NULL &&
+		equi(req->ff_comps.c_nr == 0, req->ff_comps.c_data == NULL);
 }
 
-static const struct c2_rpc_item_type_ops request_item_type_ops = {
-	.rito_encode    = request_encode,
-
-	/* c2_rpc_encode() asserts that this member is not NULL */
-	.rito_item_size = XXX /* XXX[question] Should it be
-			       * c2_fop_item_type_default_onwire_size()
-			       * or a function returning
-			       * c2_xcode_length() of
-			       * c2_conf_fetch? */
-};
-
-/** Used for configuration requests. */
-static struct c2_rpc_item_type request_item_type = {
-	.rit_opcode = XXX,
-	.rit_ops    = &request_item_type_ops,
-	.rit_flags  = C2_RPC_ITEM_TYPE_REQUEST,
-	.rit_magic  = XXX
-};
-
 /** Fills c2_conf_fetch structure. */
 static void
 request_fill(struct c2_conf_fetch *req, const struct c2_conf_obj *path_org,
diff --git a/conf/rpc.c b/conf/rpc.c
index 0f8b988..a8045da 100644
--- a/conf/rpc.c
+++ b/conf/rpc.c
@@ -67,6 +67,10 @@ C2_FOP_TYPE_DECLARE_OPS(c2_conf_fetch_resp, "c2_conf_fetch_resp", &ftype_ops,
 C2_RPC_ITEM_TYPE_DEF(fetch_resp_itype, C2_CONF_FETCH_RESP_OPCODE,
 		     C2_RPC_ITEM_TYPE_REPLY, &fetch_resp_ops);
 
+/**
+ * Encodes configuration request into a network buffer provided by the
+ * rpc layer.
+ */
 static int
 request_encode(struct c2_rpc_item_type *item_type __attribute__((unused)),
 	       struct c2_rpc_item *item, struct c2_bufvec_cursor *cur)
-- 
1.8.3.2

