From 31f8ed9ece2817d958163b7e72d2911809b0f3af Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 23 Feb 2012 22:43:49 +0200
Subject: [PATCH 016/311] confop.ff: c2_confop_fixstr is not needed

Confd will encode names as c2_conf_buf structure.
---
 conf/confop.ff | 53 +++++++++++++++++++++++------------------------------
 1 file changed, 23 insertions(+), 30 deletions(-)

diff --git a/conf/confop.ff b/conf/confop.ff
index a0ffed6..f881127 100644
--- a/conf/confop.ff
+++ b/conf/confop.ff
@@ -19,8 +19,7 @@
  */
 
 /* XXX TODO Move definitions from cfg/cfg.h to conf/db.ff */
-require "cfg/cfg"; /* C2_CFG_NAME_LEN, C2_CFG_PARAM_LEN,
-		    * C2_CFG_SERVICE_MAX_END_POINTS */
+require "cfg/cfg"; /* C2_CFG_PARAM_LEN, C2_CFG_SERVICE_MAX_END_POINTS */
 
 /*
  * Sequence of bytes.
@@ -32,12 +31,6 @@ sequence {
 	u8  cb_data
 } c2_conf_buf;
 
-/* Array of C2_CFG_NAME_LEN bytes. (cfg/cfg.h puts names in such arrays.) */
-sequence {
-	void fs_none :C2_CFG_NAME_LEN;
-	u8   fs_data
-} c2_confop_fixstr;
-
 union {
 	u8          pc_iskey;
 	u32         pc_relation :0;
@@ -58,7 +51,7 @@ record {
 
 /* Configuration of a profile. */
 record {
-	c2_confop_fixstr fp_filesystem /* Name of profile's filesystem. */
+	c2_conf_buf fp_filesystem /* Name of profile's filesystem. */
 } c2_confop_profile;
 
 /* Configuration of a filesystem. */
@@ -83,8 +76,8 @@ record {
 
 	/* End-points from which this service is reachable. */
 	sequence {
-		void             e_none :C2_CFG_SERVICE_MAX_END_POINTS;
-		c2_confop_fixstr e_data
+		void        e_none :C2_CFG_SERVICE_MAX_END_POINTS;
+		c2_conf_buf e_data
 	} fs_endpoints;
 
 	/* Hosting node. */
@@ -112,22 +105,22 @@ record {
 } c2_confop_node;
 
 record {
-	c2_conf_buf      fn_node;
-	u32              fn_iface_type;
-	u32              fn_mtu;
-	u64              fn_speed;
-	c2_confop_fixstr fn_filename;
-	u64              fn_last_state
+	c2_conf_buf fn_node;
+	u32         fn_iface_type;
+	u32         fn_mtu;
+	u64         fn_speed;
+	c2_conf_buf fn_filename;
+	u64         fn_last_state
 } c2_confop_nic;
 
 record {
-	c2_conf_buf      fd_node;
-	u32              fd_type;
-	u32              fd_media;
-	u64              fd_size;
-	u64              fd_last_state;
-	u64              fd_flags;
-	c2_confop_fixstr fd_filename;
+	c2_conf_buf fd_node;
+	u32         fd_type;
+	u32         fd_media;
+	u64         fd_size;
+	u64         fd_last_state;
+	u64         fd_flags;
+	c2_conf_buf fd_filename;
 	sequence {
 		u32         p_nr;
 		c2_conf_buf p_data
@@ -135,12 +128,12 @@ record {
 } c2_confop_sdev;
 
 record {
-	c2_conf_buf      fp_sdev;
-	u64              fp_start;
-	u64              fp_size;
-	u32              fp_index;
-	u32              fp_type;
-	c2_confop_fixstr fp_filename
+	c2_conf_buf fp_sdev;
+	u64         fp_start;
+	u64         fp_size;
+	u32         fp_index;
+	u32         fp_type;
+	c2_conf_buf fp_filename
 } c2_confop_partition;
 
 /* Encoding of a configuration object. */
-- 
1.8.3.2

