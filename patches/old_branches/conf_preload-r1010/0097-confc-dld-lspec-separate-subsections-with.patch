From 2682daaa59ea85a2e6abc85d1bc0f3f011c2dda5 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Tue, 27 Mar 2012 14:25:33 +0300
Subject: [PATCH 097/311] confc-dld-lspec: separate subsections with <!---->

+ add local table of contents to `confc-dld-lspec' section
+ remove `` (workaround)'' from `confc-offline' title
---
 conf/confc.c         | 42 ++++++++++++++++++++++++++----------------
 conf/confc_offline.h |  2 +-
 2 files changed, 27 insertions(+), 17 deletions(-)

diff --git a/conf/confc.c b/conf/confc.c
index 8680add..6eafaa7 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -151,6 +151,12 @@
  * <hr> <!------------------------------------------------------------->
  * @section confc-dld-lspec Logical Specification
  *
+ * - @ref confc-dld-lspec-comps
+ * - @ref confc-dld-lspec-open
+ * - @ref confc-dld-lspec-walk
+ * - @ref confc-dld-lspec-state
+ * - @ref confc-dld-lspec-thread
+ *
  * @subsection confc-dld-lspec-comps Component Overview
  *
  * Confc library maintains a @b cache of configuration information,
@@ -176,13 +182,12 @@
  * objects to the cache. This ensures that no duplicates are added to
  * the confc cache.
  *
- * @subsection confc-dld-lspec-XXX XXX
- *
- * c2_confc_init() sets up configuration client instance, assigning
- * fields of c2_confc structure.
+ * <!------------------------------------------------------------------>
+ * @subsection confc-dld-lspec-open Opening configuration objects/directories
  *
- * c2_confc_open() checks validity of `path' argument, copies it to
- * c2_confc_ctx::fc_path, and posts an AST to c2_confc::cc_group.
+ * c2_confc_open() and c2_confc_diropen() check validity of `path'
+ * argument, copy it to c2_confc_ctx::fc_path, and post an AST to
+ * c2_confc::cc_group.
  *
  * @note c2_sm_ast_post() signals group's clink. Current design of
  *       confc assumes that some external thread will respond to this
@@ -194,26 +199,30 @@
  * invoked. This function calls path_walk() and, depending on the
  * value returned by the latter, switches the state machine to
  * S_TERMINAL, S_WAIT_REPLY, S_WAIT_STATUS, or S_FAILURE state. No AST
- * is needed as the group is locked already.
+ * is needed as the group is already locked.
+ *
+ * <!------------------------------------------------------------------>
+ * @subsection confc-dld-lspec-walk Walking the DAG
  *
  * path_walk() begins with locking the cache (c2_confc::cc_lock) and
  * unlocks the cache before returning.  The function "moves" along the
- * DAG of cached configuration objects, starting at the configuration
- * object the path originates from and following the path.
- * path_walk() stops when all of the path components are exhausted or
- * when a stub is reached.
+ * DAG of cached configuration objects: it starts at the configuration
+ * object the path originates from and follows the directions,
+ * specified by path components.  path_walk() stops when all of the
+ * path components are consumed or when a stub is reached.
  *
  * @note Until confd is implemented, confc has no service to send
- *       configuration requests to.  As a part of @ref confc-offline
- *       workaround, path_walk() treats "stopped by a stub" situations
- *       as failures and C2_ASSERT()s availability of the requested
- *       object/directory in the configuration cache.
+ *       configuration requests to. This issue is addressed by @ref
+ *       confc-offline workaround. In accordance with this workaround,
+ *       path_walk() treats "stub on a path" situations as failures,
+ *       C2_ASSERT()ing availability of the requested object/directory
+ *       in the configuration cache.
  *
  * A stub object lying on a path makes further progress impossible,
  * because relations of a stub are not trustworthy.  If a stub is
  * C2_CS_LOADING, path_walk() registers c2_confc_ctx::fc_clink with
  * stub's channel and returns C2_CS_LOADING.  Otherwise it changes
- * stub's status to C2_CS_LOADING, fills request fop
+ * stub's status (C2_CS_MISSING) to C2_CS_LOADING, fills request fop
  * (c2_confc_ctx::fc_req) by calling request_fill(), and returns
  * C2_CS_MISSING.
  *
@@ -230,6 +239,7 @@
  * If one of path components is a key and the key is wrong, then
  * path_walk() will return -ENOENT.
  *
+ * <!------------------------------------------------------------------>
  * @subsection confc-dld-lspec-state State Specification
  *
  * @dot
diff --git a/conf/confc_offline.h b/conf/confc_offline.h
index b0301c7..4ef87dd 100644
--- a/conf/confc_offline.h
+++ b/conf/confc_offline.h
@@ -21,7 +21,7 @@
 #define __COLIBRI_CONF__CONFC_OFFLINE_H__
 
 /**
- * @page confc-offline  confc offline (workaround)
+ * @page confc-offline  confc offline
  *
  * Until confd is ready, confc cannot obtain configuration by sending
  * fops.  In order for confc to be operational, its cache needs to be
-- 
1.8.3.2

