From 545712a995d494c0abb5fe6fbd4d24dd12be986d Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Tue, 17 Jul 2012 12:44:48 +0300
Subject: [PATCH 250/311] c2_confc_readdir(): return 2 to signify "instant
 end-of-dir"

+ c2_confc_open_sync(): Postcondition that returned object is C2_CS_READY.

LogD #463
RB: r/865/diff/2-4/?file=23424#file23424line590
---
 conf/confc.c |  2 ++
 conf/confc.h | 39 ++++++++++++++++++++++++---------------
 2 files changed, 26 insertions(+), 15 deletions(-)

diff --git a/conf/confc.c b/conf/confc.c
index a99da04..ebc6171 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -494,6 +494,8 @@ int c2_confc_open_sync(struct c2_conf_obj **result, struct c2_conf_obj *origin,
 	c2_clink_del(&w.w_clink);
 	c2_clink_fini(&w.w_clink);
 	c2_confc_ctx_fini(&w.w_ctx);
+
+	C2_POST(ergo(rc == 0, (*result)->co_status == C2_CS_READY));
 	return rc;
 }
 
diff --git a/conf/confc.h b/conf/confc.h
index 1871025..08464d1 100644
--- a/conf/confc.h
+++ b/conf/confc.h
@@ -557,9 +557,10 @@ int c2_confc_open(struct c2_confc_ctx *ctx, struct c2_conf_obj *origin,
 /**
  * Opens configuration object synchronously.
  *
- * If the call succeeds, *obj will point to the requested object.
+ * If the call succeeds, *result will point to the requested object.
  *
- * @pre  origin != NULL
+ * @pre   origin != NULL
+ * @post  ergo(retval == 0, (*result)->co_status == C2_CS_READY)
  *
  * Example:
  * @code
@@ -594,29 +595,37 @@ void c2_confc_close(struct c2_conf_obj *obj);
 /**
  * Requests asynchronous retrieval of the next directory entry.
  *
- * Closes the configuration object returned by previous
- * c2_confc_readdir*().
+ * Closes the configuration object returned by previous c2_confc_readdir*().
  *
- * @retval 1    "Ready to serve": the requested directory entry is known
- *              to be C2_CS_READY, so the caller does not need to wait
- *              on ctx->fc_mach.sm_chan channel.
- * @retval 0    "Please wait": the caller does need to wait on
- *              ctx->fc_mach.sm_chan.
+ * @retval 0    Asynchronous retrieval of configuration has been initiated.
+ * @retval 1    The next directory entry is available immediately;
+ *              no waiting is needed.
+ * @retval 2    End of directory is reached; no waiting is needed.
  * @retval < 0  Error.
  *
+ * Entries of a directory are usually present in the configuration
+ * cache.  In this common case c2_confc_readdir() can fulfil the
+ * request immediately. Return values 1 and 2 let the caller know that
+ * it can proceed (e.g., call c2_confc_ctx_result()) without waiting
+ * for ctx->fc_mach.sm_chan channel to be signaled.
+ *
+ * c2_confc_readdir() does not touch `ctx' argument if the returned
+ * value is 1 or 2. c2_confc_ctx can be re-used in this case.
+ *
  * @note  The application must not c2_confc_close() a configuration
  *        object retrieved by c2_confc_readdir().  The object will be
- *        closed implicitly by next c2_confc_readdir*() call or by
- *        c2_conf_dircur_fini().
+ *        closed implicitly by subsequent c2_confc_readdir*() call or
+ *        by c2_conf_dircur_fini().
+ *
+ * @see XXX TODO: Add a recipe demonstrating c2_confc_readdir() usage.
  */
 int c2_confc_readdir(struct c2_confc_ctx *ctx, struct c2_conf_dircur *cur);
 
 /**
  * Gets next directory entry synchronously.
  *
- * Closes the configuration object returned by previous
- * c2_confc_readdir*().  Increments reference counter of the returned
- * object.
+ * Closes the configuration object returned by previous c2_confc_readdir*().
+ * Increments reference counter of the returned object.
  *
  * @retval 1    *result now points to the next directory entry.
  * @retval 0    End of directory is reached.
@@ -624,7 +633,7 @@ int c2_confc_readdir(struct c2_confc_ctx *ctx, struct c2_conf_dircur *cur);
  *
  * @note  The application must not c2_confc_close() the resulting
  *        configuration object.  The object will be closed implicitly
- *        by next c2_confc_readdir*() call or by
+ *        by subsequent c2_confc_readdir*() call or by
  *        c2_conf_dircur_fini().
  */
 int c2_confc_readdir_sync(struct c2_conf_obj **result,
-- 
1.8.3.2

