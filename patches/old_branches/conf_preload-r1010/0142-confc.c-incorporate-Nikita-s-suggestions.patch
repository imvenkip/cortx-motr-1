From 3217068fd304c446b4327edefeacdb501c3a7a98 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Fri, 20 Apr 2012 15:53:13 +0300
Subject: [PATCH 142/311] confc.c: incorporate Nikita's suggestions

- It is usually better to explicitly brace a multi-line clause.
- Use explicit '!= NULL' for pointer.
- `const' can - and thus should - be used.
- check_st_in(): improve readability by using static array.
---
 conf/confc.c | 20 +++++++++++---------
 1 file changed, 11 insertions(+), 9 deletions(-)

diff --git a/conf/confc.c b/conf/confc.c
index 67ab861..a5566e4 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -434,9 +434,10 @@ extra_clinks_create(struct c2_clink *group, uint32_t n)
 	uint32_t         i;
 	C2_PRE(n > 0);
 	C2_ALLOC_ARR(ret, n);
-	if (ret != NULL)
+	if (ret != NULL) {
 		for (i = 0; i < n; ++i)
 			c2_clink_attach(ret + i, group, on_object_updated);
+	}
 	return ret;
 }
 
@@ -568,7 +569,7 @@ static int path_walk(struct c2_confc_ctx *ctx)
 
 static bool confc_is_initialized(const struct c2_confc *client)
 {
-	C2_PRE(equi(client->cc_root, client->cc_group));
+	C2_PRE(equi(client->cc_root != NULL, client->cc_group));
 	return client->cc_root != NULL;
 }
 
@@ -726,7 +727,7 @@ static bool request_is_valid(const struct c2_conf_fetch *req)
 /** Fills c2_conf_fetch structure. */
 static void
 request_fill(struct c2_conf_fetch *req, const struct c2_conf_obj *origin,
-	     struct c2_conf_pathcomp *path)
+	     const struct c2_conf_pathcomp *path)
 {
 	struct c2_confc_ctx *ctx =
 		container_of(req, struct c2_confc_ctx, fc_req);
@@ -784,6 +785,11 @@ static void ast_fail(struct c2_sm_ast *ast, int32_t rc)
 /** Actions to perform on entering CHECK state. */
 static void check_st_in(struct c2_sm *mach)
 {
+	static const int st[] = {
+		[C2_CS_MISSING] = S_WAIT_REPLY,
+		[C2_CS_LOADING] = S_WAIT_STATUS,
+		[C2_CS_READY]   = S_TERMINAL
+	};
 	int rc;
 	struct c2_confc_ctx *ctx = mach_to_ctx(mach);
 
@@ -792,12 +798,8 @@ static void check_st_in(struct c2_sm *mach)
 	rc = path_walk(ctx);
 	if (rc < 0)
 		c2_sm_fail(mach, S_FAILURE, rc);
-	else if (rc == C2_CS_MISSING)
-		c2_sm_state_set(mach, S_WAIT_REPLY);
-	else if (rc == C2_CS_LOADING)
-		c2_sm_state_set(mach, S_WAIT_STATUS);
-	else if (rc == C2_CS_READY)
-		c2_sm_state_set(mach, S_TERMINAL);
+	else if (IS_IN_ARRAY(rc, st))
+		c2_sm_state_set(mach, st[rc]);
 	else
 		C2_IMPOSSIBLE("path_walk: invalid result");
 
-- 
1.8.3.2

