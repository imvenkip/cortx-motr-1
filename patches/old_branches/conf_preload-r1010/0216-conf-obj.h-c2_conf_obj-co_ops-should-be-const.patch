From 50f499932850d9c7b2a379ec8b59c3d9d04f7dd6 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Wed, 4 Jul 2012 14:48:38 +0300
Subject: [PATCH 216/311] conf/obj.h: c2_conf_obj::co_ops should be const

LogD #250
RB: r/849
---
 conf/obj.h | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/conf/obj.h b/conf/obj.h
index f4c907e..5b686ff 100644
--- a/conf/obj.h
+++ b/conf/obj.h
@@ -182,31 +182,31 @@ struct c2_confc; /* defined in "conf/confc.h" */
  */
 struct c2_conf_obj {
 	/** Type of the ambient concrete configuration object. */
-	enum c2_conf_objtype    co_type;
+	enum c2_conf_objtype          co_type;
 	/**
 	 * Object identifier.
 	 * This value is unique among the object of given ->co_type.
 	 */
-	struct c2_conf_buf      co_id;
-	enum c2_conf_status     co_status;
-	struct c2_conf_obj_ops *co_ops;
+	struct c2_conf_buf            co_id;
+	enum c2_conf_status           co_status;
+	const struct c2_conf_obj_ops *co_ops;
 	/**
 	 * Pointer to the parent object.
 	 *
 	 * The value is NULL for objects that have several parents
          * (e.g., c2_conf_node).
 	 */
-	struct c2_conf_obj     *co_parent;
+	struct c2_conf_obj           *co_parent;
 	/**
 	 * Reference counter.
 	 * The object is "pinned" if this value is non-zero.
 	 */
-	uint64_t                co_nrefs;
+	uint64_t                      co_nrefs;
 	/**
 	 * Channel on which "configuration loading completed" and
 	 * "object unpinned" events are announced.
 	 */
-	struct c2_chan          co_chan;
+	struct c2_chan                co_chan;
 	/**
 	 * Private data of confc implementation.
 	 *
@@ -217,7 +217,7 @@ struct c2_conf_obj {
 	 *         some_type       *confd;
 	 * } co_private;
 	 */
-	struct c2_confc        *co_confc;
+	struct c2_confc              *co_confc;
 };
 
 /**
-- 
1.8.3.2

