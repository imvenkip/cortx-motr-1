From c1d84d4065558a839000d603d764f8dc9fe39b26 Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Wed, 13 Mar 2013 19:04:49 +0200
Subject: [PATCH 21/24] Add multiple RPC clients.

---
 m0t1fs/linux_kernel/st/st |  2 +-
 rpc/ub/ub.c               | 99 +++++++++++++++++++++++++++++++++++++----------
 2 files changed, 80 insertions(+), 21 deletions(-)

diff --git a/m0t1fs/linux_kernel/st/st b/m0t1fs/linux_kernel/st/st
index d5de11a..aeceefb 100755
--- a/m0t1fs/linux_kernel/st/st
+++ b/m0t1fs/linux_kernel/st/st
@@ -16,7 +16,7 @@ die() { echo "$@" >&2; exit 1; }
 
 M0_CORE_DIR=`readlink -f $0`
 M0_CORE_DIR=${M0_CORE_DIR%/*/*/*/*}
-[[ "${M0_CORE_DIR##*/}" =~ ^mero ]] || die 'Unable to determine M0_CORE_DIR'
+# [[ "${M0_CORE_DIR##*/}" =~ ^mero ]] || die 'Unable to determine M0_CORE_DIR'
 
 ## Path to the file with configuration string for confd.
 CONF_FILE=$SANDBOX_DIR/conf.txt
diff --git a/rpc/ub/ub.c b/rpc/ub/ub.c
index 45791a4..d89c499 100644
--- a/rpc/ub/ub.c
+++ b/rpc/ub/ub.c
@@ -22,6 +22,7 @@
 #include "lib/ub.h"         /* m0_ub_set */
 #include "lib/misc.h"       /* M0_IN, M0_BITS */
 #include "lib/string.h"     /* strlen, strdup */
+#include "lib/memory.h"     /* m0_free */
 #include "fop/fop.h"        /* m0_fop_alloc */
 #include "net/net.h"        /* m0_net_xprt_init */
 #include "net/bulk_mem.h"   /* m0_net_bulk_mem_xprt */
@@ -36,11 +37,6 @@
  * ---------------------------------------------------------------- */
 
 #if 0
-#define CLIENT_ENDPOINT_ADDR "127.0.0.1:12345"
-#define SERVER_ENDPOINT_ADDR CLIENT_ENDPOINT_ADDR
-#define SERVER_ENDPOINT      "bulk-mem:" SERVER_ENDPOINT_ADDR
-static struct m0_net_xprt  *g_xprt = &m0_net_bulk_mem_xprt;
-#else
 #define CLIENT_ENDPOINT_ADDR    "0@lo:12345:34:*"
 #define SERVER_ENDPOINT_ADDR    "0@lo:12345:34:1"
 #define SERVER_ENDPOINT         "lnet:" SERVER_ENDPOINT_ADDR
@@ -62,11 +58,18 @@ enum {
    - define rpc client interface such that it can represent multiple clients.
  */
 
+#define CLIENT_ENDPOINT_ADDR "127.0.0.1:12345"
+#define SERVER_ENDPOINT_ADDR CLIENT_ENDPOINT_ADDR
+#define SERVER_ENDPOINT      "bulk-mem:" SERVER_ENDPOINT_ADDR
+
+static struct m0_net_xprt  *g_xprt = &m0_net_bulk_mem_xprt;
+
+#define NAME(ext) "rpc-ub" ext
+#if 0
 static struct m0_net_domain client_net_dom;
 static struct m0_dbenv      client_dbenv;
 static struct m0_cob_domain client_cob_dom;
 
-#define NAME(ext) "rpc-ub" ext
 static struct m0_rpc_client_ctx g_cctx = {
 	.rcx_net_dom               = &client_net_dom,
 	.rcx_cob_dom               = &client_cob_dom,
@@ -81,6 +84,19 @@ static struct m0_rpc_client_ctx g_cctx = {
 	.rcx_max_rpcs_in_flight    = MAX_RPCS_IN_FLIGHT,
 	.rcx_recv_queue_min_length = M0_NET_TM_RECV_QUEUE_DEF_LEN
 };
+#endif
+
+/**
+ * @todo: documentation.
+ */
+struct ub_rpc_client {
+	struct m0_rpc_client_ctx rc_ctx;
+	struct m0_net_domain     rc_net_dom;
+	struct m0_cob_domain     rc_cob_dom;
+	struct m0_dbenv          rc_dbenv;
+};
+
+static struct ub_rpc_client g_client[1];
 
 static char *g_argv[] = {
 	NAME(""), "-r", "-p", "-T", "AD", "-D", NAME(".db"),
@@ -111,34 +127,72 @@ static const struct m0_rpc_item_ops ub_item_ops = {
  * XXX FIXME: Code duplication!
  * ---------------------------------------------------------------- */
 
-static void _start(void)
+static int _client_init(struct ub_rpc_client *client, uint32_t cob_dom_id,
+			const char *db_name, uint32_t slot_nr)
 {
 	int rc;
 
-	rc = m0_net_xprt_init(g_xprt);
+	rc = m0_net_domain_init(&client->rc_net_dom, g_xprt, &m0_addb_proc_ctx);
+	M0_ASSERT(rc == 0);
+
+	client->rc_ctx.rcx_net_dom               = &client->rc_net_dom;
+	client->rc_ctx.rcx_cob_dom               = &client->rc_cob_dom;
+	client->rc_ctx.rcx_cob_dom_id            = cob_dom_id;
+	client->rc_ctx.rcx_dbenv                 = &client->rc_dbenv;
+	client->rc_ctx.rcx_db_name               = strdup(db_name);
+	client->rc_ctx.rcx_nr_slots              = slot_nr;
+
+	client->rc_ctx.rcx_local_addr            = CLIENT_ENDPOINT_ADDR;
+	client->rc_ctx.rcx_remote_addr           = SERVER_ENDPOINT_ADDR;
+	client->rc_ctx.rcx_timeout_s             = CONNECT_TIMEOUT;
+	client->rc_ctx.rcx_max_rpcs_in_flight    = MAX_RPCS_IN_FLIGHT;
+	client->rc_ctx.rcx_recv_queue_min_length = M0_NET_TM_RECV_QUEUE_DEF_LEN;
+
+	rc = m0_rpc_client_start(&client->rc_ctx);
 	M0_ASSERT(rc == 0);
 
-	rc = m0_net_domain_init(&client_net_dom, g_xprt, &m0_addb_proc_ctx);
+	return rc;
+}
+
+static void _client_fini(struct ub_rpc_client *client)
+{
+	int rc;
+
+	rc = m0_rpc_client_stop(&client->rc_ctx);
 	M0_ASSERT(rc == 0);
+	/* I know, db_name is not actually const pointer */
+	m0_free((void*)client->rc_ctx.rcx_db_name);
+	m0_net_domain_fini(&client->rc_net_dom);
+}
 
-	rc = m0_rpc_server_start(&g_sctx);
+static void _start(void)
+{
+	int i;
+	int rc;
+
+	rc = m0_net_xprt_init(g_xprt);
 	M0_ASSERT(rc == 0);
 
-	rc = m0_rpc_client_start(&g_cctx);
+	rc = m0_rpc_server_start(&g_sctx);
 	M0_ASSERT(rc == 0);
 
+	for (i = 0; i < ARRAY_SIZE(g_client); ++i) {
+		rc = _client_init(&g_client[i], i + CLIENT_COB_DOM_ID,
+				  ".client-db", SESSION_SLOTS);
+		M0_ASSERT(rc == 0);
+	}
+
 	m0_rpc_ub_fops_init();
 }
 
 static void _stop(void)
 {
-	int rc;
+	int i;
 
-	rc = m0_rpc_client_stop(&g_cctx);
-	M0_ASSERT(rc == 0);
+	for (i = 0; i < ARRAY_SIZE(g_client); ++i)
+		_client_fini(&g_client[i]);
 
 	m0_rpc_server_stop(&g_sctx);
-	m0_net_domain_fini(&client_net_dom);
 	m0_net_xprt_fini(g_xprt);
 	m0_rpc_ub_fops_fini();
 }
@@ -194,7 +248,7 @@ static void fop_send(struct m0_rpc_session *session, size_t seqn)
 	rc = client_post(fop, session);
 	M0_UB_ASSERT(rc == 0);
 
-	/* m0_fop_put(fop); */
+	/* @todo: revert back m0_fop_put(fop); */
 }
 
 /* ----------------------------------------------------------------
@@ -203,16 +257,21 @@ static void fop_send(struct m0_rpc_session *session, size_t seqn)
 
 static void XXX_name_me(int iter M0_UNUSED)
 {
+	int i;
+	int j;
 	int rc;
-	size_t i;
-	struct m0_rpc_session *session = &g_cctx.rcx_session;
+	struct m0_rpc_session *session;
 
 	/* @todo: For some reason the followng error may occur here:
 	   mero: NOTICE : [rpc/slot.c:584:m0_rpc_slot_reply_received] < rc=-71.
 	   Needs investigation!
 	 */
-	for (i = 0; i < 5; ++i)
-		fop_send(session, i);
+	for (i = 0; i < 3; ++i) {
+		for (j = 0; j < ARRAY_SIZE(g_client); ++j) {
+			session = &g_client[j].rc_ctx.rcx_session;
+			fop_send(session, i);
+		}
+	}
 
 	rc = m0_rpc_session_timedwait(session, M0_BITS(M0_RPC_SESSION_IDLE,
 						       M0_RPC_SESSION_FAILED),
-- 
1.8.3.2

