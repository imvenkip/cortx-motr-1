From 2f29cb9aeea5206c881030dfd7d4b3903c06a3ee Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 7 Mar 2013 17:22:10 +0200
Subject: [PATCH 04/24] rpc: remove M0_RPC_SERVER_CTX_DEFINE macro

M0_RPC_SERVER_CTX_DEFINE() "calls" sacrifice readability in favour of
compactness. Removing them improves transparency of the code.
(And when we are fed up with the verbosity of `struct m0_rpc_server_ctx'
definitions, we may introduce m0_rpc_server_ctx_init() function.)

Reference: http://rb.clusterstor.com/r/1288/diff/1/?file=41327#file41327line88

Acked-by: Amit Jambure <amit_jambure@xyratex.com>
---
 conf/confd.c                   |  2 --
 conf/ut/confc.c                | 19 +++++++++++++------
 console/st/server.c            | 29 ++++++++++++++++-------------
 ioservice/ut/ios_buffer_pool.c | 13 +++++++++----
 mero/ut/cs_ut_main.c           | 28 +++++++++++++++++++---------
 rpc/it/rpc_ping.c              | 18 +++++++++++-------
 rpc/rpclib.h                   | 13 -------------
 7 files changed, 68 insertions(+), 54 deletions(-)

diff --git a/conf/confd.c b/conf/confd.c
index 972a748..798a238 100644
--- a/conf/confd.c
+++ b/conf/confd.c
@@ -67,8 +67,6 @@
  * Most important functions, confd depends on, are listed above:
  * - RPC layer:
  *   - m0_rpc_reply_post() used to send FOP-based reply to Confc;
- *   - M0_RPC_SERVER_CTX_DEFINE() used to create rpc server context.
- *     (XXX I'm not sure confd may use a definition from ut/ directory. --vvv)
  * - DB layer:
  *   - m0_db_pair_setup() and m0_table_lookup() used to access
  *     configuration values stored in db.
diff --git a/conf/ut/confc.c b/conf/ut/confc.c
index 1bb7ea1..d73fed2 100644
--- a/conf/ut/confc.c
+++ b/conf/ut/confc.c
@@ -27,7 +27,7 @@
 #include "conf/ut/file_helpers.h"
 #include "conf/ut/rpc_helpers.h"
 #include "net/lnet/lnet.h"  /* m0_net_lnet_xprt */
-#include "rpc/rpclib.h"     /* m0_rpc_server_ctx, M0_RPC_SERVER_CTX_DEFINE */
+#include "rpc/rpclib.h"     /* m0_rpc_server_ctx */
 #include "lib/ut.h"
 
 #define SERVER_ENDPOINT_ADDR "0@lo:12345:34:1"
@@ -347,17 +347,24 @@ static void test_confc_local(void)
 
 static void test_confc_net(void)
 {
-	struct m0_rpc_machine mach;
-	int rc;
+	struct m0_rpc_machine    mach;
+	int                      rc;
 #define NAME(ext) "ut_confd" ext
-	char *argv[] = {
+	char                    *argv[] = {
 		NAME(""), "-r", "-p", "-T", "AD", "-D", NAME(".db"),
 		"-S", NAME(".stob"), "-A", NAME("-addb.stob"),
 		"-e", SERVER_ENDPOINT, "-s", "confd",
 		"-c", M0_CONF_UT_PATH("conf-str.txt")
 	};
-	M0_RPC_SERVER_CTX_DEFINE(confd, &g_xprt, 1, argv, ARRAY_SIZE(argv),
-				 NULL, 0, NAME(".log"));
+	struct m0_rpc_server_ctx confd = {
+		.rsx_xprts            = &g_xprt,
+		.rsx_xprts_nr         = 1,
+		.rsx_argv             = argv,
+		.rsx_argc             = ARRAY_SIZE(argv),
+		.rsx_service_types    = NULL,
+		.rsx_service_types_nr = 0,
+		.rsx_log_file_name    = NAME(".log")
+	};
 #undef NAME
 
 	rc = service_start(&confd);
diff --git a/console/st/server.c b/console/st/server.c
index 1210753..5c18fc5 100644
--- a/console/st/server.c
+++ b/console/st/server.c
@@ -54,24 +54,27 @@ static void sig_handler(int num)
 /** @brief Test server for m0console */
 int main(int argc, char **argv)
 {
-	int                 result;
-	char                tm_len[CONSOLE_STR_LEN];
-	char                rpc_size[CONSOLE_STR_LEN];
-	uint32_t            tm_recv_queue_len = M0_NET_TM_RECV_QUEUE_DEF_LEN;
-	uint32_t            max_rpc_msg_size  = M0_RPC_DEF_MAX_RPC_MSG_SIZE;
-	struct m0_net_xprt *xprt              = &m0_net_lnet_xprt;
-
-	char *default_server_argv[] = {
+	char     tm_len[CONSOLE_STR_LEN];
+	char     rpc_size[CONSOLE_STR_LEN];
+	int      result;
+	uint32_t tm_recv_queue_len = M0_NET_TM_RECV_QUEUE_DEF_LEN;
+	uint32_t max_rpc_msg_size  = M0_RPC_DEF_MAX_RPC_MSG_SIZE;
+	char    *default_server_argv[] = {
 		argv[0], "-r", "-p", "-T", "AD", "-D", SERVER_DB_FILE_NAME,
 		"-S", SERVER_STOB_FILE_NAME, "-e", SERVER_ENDPOINT,
 		"-s", "ds1", "-s", "ds2", "-s", "ioservice", "-q", tm_len,
 		"-m", rpc_size, "-A", "as_addb_stob"
 	};
-
-	M0_RPC_SERVER_CTX_DEFINE(sctx, &xprt, 1, default_server_argv,
-				 ARRAY_SIZE(default_server_argv),
-				 m0_cs_default_stypes, m0_cs_default_stypes_nr,
-				 SERVER_LOG_FILE_NAME);
+	struct m0_net_xprt      *xprt = &m0_net_lnet_xprt;
+	struct m0_rpc_server_ctx sctx = {
+		.rsx_xprts            = &xprt,
+		.rsx_xprts_nr         = 1,
+		.rsx_argv             = default_server_argv,
+		.rsx_argc             = ARRAY_SIZE(default_server_argv),
+		.rsx_service_types    = m0_cs_default_stypes,
+		.rsx_service_types_nr = m0_cs_default_stypes_nr,
+		.rsx_log_file_name    = SERVER_LOG_FILE_NAME
+	};
 
 	verbose = false;
 
diff --git a/ioservice/ut/ios_buffer_pool.c b/ioservice/ut/ios_buffer_pool.c
index 87614b4..d6f7a78 100644
--- a/ioservice/ut/ios_buffer_pool.c
+++ b/ioservice/ut/ios_buffer_pool.c
@@ -92,10 +92,15 @@ static int check_buffer_pool_per_domain(char *cs_argv[], int cs_argc, int nbp)
 {
 	int rc;
 	int bp_count;
-
-	M0_RPC_SERVER_CTX_DEFINE(sctx, cs_xprts, ARRAY_SIZE(cs_xprts),
-				 cs_argv, cs_argc, m0_cs_default_stypes,
-				 m0_cs_default_stypes_nr, SERVER_LOG_FILE_NAME);
+	struct m0_rpc_server_ctx sctx = {
+		.rsx_xprts            = cs_xprts,
+		.rsx_xprts_nr         = ARRAY_SIZE(cs_xprts),
+		.rsx_argv             = cs_argv,
+		.rsx_argc             = cs_argc,
+		.rsx_service_types    = m0_cs_default_stypes,
+		.rsx_service_types_nr = m0_cs_default_stypes_nr,
+		.rsx_log_file_name    = SERVER_LOG_FILE_NAME
+	};
 
 	rc = m0_rpc_server_start(&sctx);
 	M0_UT_ASSERT(rc == 0);
diff --git a/mero/ut/cs_ut_main.c b/mero/ut/cs_ut_main.c
index bca497d..c9e1da8 100644
--- a/mero/ut/cs_ut_main.c
+++ b/mero/ut/cs_ut_main.c
@@ -24,7 +24,7 @@
 #include "lib/memory.h"
 #include "lib/tlist.h"
 
-#include "rpc/rpclib.h"        /* M0_RPC_SERVER_CTX_DEFINE */
+#include "rpc/rpclib.h"        /* m0_rpc_server_ctx */
 #include "rpc/rpc_opcodes.h"
 #include "fop/fop.h"
 #include "net/bulk_mem.h"
@@ -302,10 +302,15 @@ static int cs_ut_test_helper_success(struct cl_ctx *cctx, size_t cctx_nr,
 	int rc;
 	int i;
 	int stype;
-
-	M0_RPC_SERVER_CTX_DEFINE(sctx, cs_xprts, ARRAY_SIZE(cs_xprts),
-				 cs_argv, cs_argc, m0_cs_default_stypes,
-				 m0_cs_default_stypes_nr, SERVER_LOG_FILE_NAME);
+	struct m0_rpc_server_ctx sctx = {
+		.rsx_xprts            = cs_xprts,
+		.rsx_xprts_nr         = ARRAY_SIZE(cs_xprts),
+		.rsx_argv             = cs_argv,
+		.rsx_argc             = cs_argc,
+		.rsx_service_types    = m0_cs_default_stypes,
+		.rsx_service_types_nr = m0_cs_default_stypes_nr,
+		.rsx_log_file_name    = SERVER_LOG_FILE_NAME
+	};
 
 	rc = m0_rpc_server_start(&sctx);
 	M0_UT_ASSERT(rc == 0);
@@ -331,10 +336,15 @@ static int cs_ut_test_helper_success(struct cl_ctx *cctx, size_t cctx_nr,
 static void cs_ut_test_helper_failure(char *cs_argv[], int cs_argc)
 {
 	int rc;
-
-	M0_RPC_SERVER_CTX_DEFINE(sctx, cs_xprts, ARRAY_SIZE(cs_xprts),
-				 cs_argv, cs_argc, m0_cs_default_stypes,
-				 m0_cs_default_stypes_nr, SERVER_LOG_FILE_NAME);
+	struct m0_rpc_server_ctx sctx = {
+		.rsx_xprts            = cs_xprts,
+		.rsx_xprts_nr         = ARRAY_SIZE(cs_xprts),
+		.rsx_argv             = cs_argv,
+		.rsx_argc             = cs_argc,
+		.rsx_service_types    = m0_cs_default_stypes,
+		.rsx_service_types_nr = m0_cs_default_stypes_nr,
+		.rsx_log_file_name    = SERVER_LOG_FILE_NAME
+	};
 
 	rc = m0_rpc_server_start(&sctx);
 	M0_UT_ASSERT(rc != 0);
diff --git a/rpc/it/rpc_ping.c b/rpc/it/rpc_ping.c
index d81ff04..6d274d3 100644
--- a/rpc/it/rpc_ping.c
+++ b/rpc/it/rpc_ping.c
@@ -402,16 +402,24 @@ static void quit_dialog(void)
 
 static int run_server(void)
 {
-	int	    rc;
 	static char tm_len[STRING_LEN];
 	static char rpc_size[STRING_LEN];
-
-	char *server_argv[] = {
+	int	    rc;
+	char       *argv[] = {
 		"rpclib_ut", "-r", "-p", "-T", "AD", "-D", SERVER_DB_FILE_NAME,
 		"-S", SERVER_STOB_FILE_NAME, "-e", server_endpoint,
 		"-A", SERVER_ADDB_STOB_FILE_NAME,
 		"-s", "ds1", "-s", "ds2", "-q", tm_len, "-m", rpc_size,
 	};
+	struct m0_rpc_server_ctx sctx = {
+		.rsx_xprts            = &xprt,
+		.rsx_xprts_nr         = 1,
+		.rsx_argv             = argv,
+		.rsx_argc             = ARRAY_SIZE(argv),
+		.rsx_service_types    = m0_cs_default_stypes,
+		.rsx_service_types_nr = m0_cs_default_stypes_nr,
+		.rsx_log_file_name    = SERVER_LOG_FILE_NAME
+	};
 
 	if (tm_recv_queue_len != 0)
 		sprintf(tm_len, "%d" , tm_recv_queue_len);
@@ -419,10 +427,6 @@ static int run_server(void)
 	if (max_rpc_msg_size != 0)
 		sprintf(rpc_size, "%d" , max_rpc_msg_size);
 
-	M0_RPC_SERVER_CTX_DEFINE(sctx, &xprt, 1, server_argv,
-				 ARRAY_SIZE(server_argv), m0_cs_default_stypes,
-				 m0_cs_default_stypes_nr, SERVER_LOG_FILE_NAME);
-
 	rc = m0_init();
 	if (rc != 0)
 		return rc;
diff --git a/rpc/rpclib.h b/rpc/rpclib.h
index 7c6e512..db42dcb 100644
--- a/rpc/rpclib.h
+++ b/rpc/rpclib.h
@@ -80,19 +80,6 @@ struct m0_rpc_server_ctx {
 	FILE                         *rsx_log_file;
 };
 
-#define M0_RPC_SERVER_CTX_DEFINE(name, xprts, xprts_nr, server_argv, \
-				 server_argc, service_types,         \
-				 service_types_nr, log_file_name)    \
-	struct m0_rpc_server_ctx name = {                            \
-		.rsx_xprts            = (xprts),                     \
-		.rsx_xprts_nr         = (xprts_nr),                  \
-		.rsx_argv             = (server_argv),               \
-		.rsx_argc             = (server_argc),               \
-		.rsx_service_types    = (service_types),             \
-		.rsx_service_types_nr = (service_types_nr),          \
-		.rsx_log_file_name    = (log_file_name)              \
-	}
-
 /**
   Starts server's rpc machine.
 
-- 
1.8.3.2

