From 6aa9ca66c05c2fa28b2a59ddbbbc13eddb3fd2e7 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Thu, 13 Jun 2013 15:14:46 +0800
Subject: [PATCH 07/12] checkout device state in PREPARE phase. If io target
 device is not in proper state, return -EIO to client.

---
 ioservice/cob_foms.c |  2 --
 ioservice/io_foms.c  | 24 ++++++++++++++++++++++--
 2 files changed, 22 insertions(+), 4 deletions(-)

diff --git a/ioservice/cob_foms.c b/ioservice/cob_foms.c
index 4158d35..84d46e8 100644
--- a/ioservice/cob_foms.c
+++ b/ioservice/cob_foms.c
@@ -38,8 +38,6 @@
 #include "mero/setup.h"
 #include "ioservice/io_service_addb.h"
 #include "ioservice/io_service.h"
-#include "layout/pdclust.h"
-#include "layout/layout.h"
 
 /* Forward Declarations. */
 static void cc_fom_fini(struct m0_fom *fom);
diff --git a/ioservice/io_foms.c b/ioservice/io_foms.c
index 8c49947..eaf78d9 100644
--- a/ioservice/io_foms.c
+++ b/ioservice/io_foms.c
@@ -1062,9 +1062,9 @@ static int io_prepare(struct m0_fom *fom)
 	struct m0_fop_cob_rw_reply     *rwrep;
 	struct m0_pool_version_numbers *cliv;
 	struct m0_pool_version_numbers  curr;
+	enum m0_pool_nd_state           device_state = 0;
+	int                             rc;
 
-	M0_LOG(M0_DEBUG, "Preparing %s IO",
-			 m0_is_read_fop(fom->fo_fop)? "Read": "Write");
 	reqh = m0_fom_reqh(fom);
 	poolmach = m0_ios_poolmach_get(reqh);
 	m0_poolmach_current_version_get(poolmach, &curr);
@@ -1072,6 +1072,10 @@ static int io_prepare(struct m0_fom *fom)
 	rwrep = io_rw_rep_get(fom->fo_rep_fop);
 	cliv = (struct m0_pool_version_numbers*)(&rwfop->crw_version);
 
+	M0_LOG(M0_DEBUG, "Preparing %s IO @ %lu:%lu",
+			 m0_is_read_fop(fom->fo_fop)? "Read": "Write",
+			 rwfop->crw_fid.f_container,
+			 rwfop->crw_fid.f_key);
 	/*
 	 * Dumps the state of SNS repair with respect to global fid
 	 * from IO fop.
@@ -1092,7 +1096,23 @@ static int io_prepare(struct m0_fom *fom)
 		m0_poolmach_version_dump(&curr);
 		m0_poolmach_event_list_dump(poolmach);
 		m0_poolmach_device_state_dump(poolmach);
+		return M0_FSO_AGAIN;
 	}
+
+	rc = m0_poolmach_device_state(poolmach, rwfop->crw_fid.f_container,
+				      &device_state);
+	if ((rc != 0) || (device_state != M0_PNDS_ONLINE &&
+			  device_state != M0_PNDS_SNS_REPAIRED &&
+			  device_state != M0_PNDS_SNS_REBALANCED)) {
+		m0_fom_phase_move(fom, -EIO,
+				  M0_FOPH_FAILURE);
+		M0_LOG(M0_ERROR, "%s IO @ %lu:%lu on failed device: state = %d",
+				 m0_is_read_fop(fom->fo_fop)? "Read": "Write",
+				 rwfop->crw_fid.f_container,
+				 rwfop->crw_fid.f_key,
+				 device_state);
+	}
+
 	return M0_FSO_AGAIN;
 }
 /**
-- 
1.8.3.2

