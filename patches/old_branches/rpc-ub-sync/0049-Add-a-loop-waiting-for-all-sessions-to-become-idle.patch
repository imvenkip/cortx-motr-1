From 0a8fd567a62f3fd0bd6931387994736060ad0a1f Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Thu, 21 Mar 2013 11:57:45 +0200
Subject: [PATCH 49/63] Add a loop waiting for all sessions to become idle.

---
 rpc/ub/ub.c | 27 +++++++++++++++++----------
 1 file changed, 17 insertions(+), 10 deletions(-)

diff --git a/rpc/ub/ub.c b/rpc/ub/ub.c
index b7c7659..0dffd68 100644
--- a/rpc/ub/ub.c
+++ b/rpc/ub/ub.c
@@ -255,19 +255,19 @@ static void ub_item_replied(struct m0_rpc_item *item)
 	M0_UB_ASSERT(m0_buf_eq(&resp->ur_data, &req->uq_data));
 }
 
-static void fop_send(struct m0_rpc_session *session, size_t seqn)
+static void fop_send(struct m0_rpc_session *session, size_t nr)
 {
 	struct m0_fop      *fop;
 	struct ub_req      *req;
 	struct m0_rpc_item *item;
 	int                 rc;
-	const char         *data = "RPC UB data";
+	const char         *data = "RPC UB data"; /* XXX CONFIGUREME */
 
 	fop = m0_fop_alloc(&m0_rpc_ub_req_fopt, NULL);
 	M0_UB_ASSERT(fop != NULL);
 
 	req = m0_fop_data(fop);
-	req->uq_seqn = 0x12345678;
+	req->uq_seqn = nr;
 	m0_buf_init(&req->uq_data, strdup(data), strlen(data));
 
 	item = &fop->f_item;
@@ -277,7 +277,8 @@ static void fop_send(struct m0_rpc_session *session, size_t seqn)
 	item->ri_deadline    = 0; /* XXX CONFIGUREME? */
 	item->ri_prio        = M0_RPC_ITEM_PRIO_MID; /* XXX CONFIGUREME */
 
-	rc = m0_rpc_post(item);
+	rc = m0_rpc_post_slot(item, session->s_slot_table[nr %
+							  g_args.a_nr_slots]);
 	M0_UB_ASSERT(rc == 0);
 
 	m0_fop_put(fop);
@@ -298,18 +299,24 @@ static void run(int iter M0_UNUSED)
 	   mero: NOTICE : [rpc/slot.c:584:m0_rpc_slot_reply_received] < rc=-71.
 	   Needs investigation!
 	 */
-	for (i = 0; i < 3; ++i) {
+	for (i = 0; i < 3; ++i) { /* XXX CONFIGUREME */
 		for (j = 0; j < g_args.a_nr_conns; ++j) {
 			session = &g_clients[j].rc_ctx.rcx_session;
 			fop_send(session, i);
 		}
 	}
-	rc = m0_rpc_session_timedwait(session, M0_BITS(M0_RPC_SESSION_IDLE,
+
+	rc = 1;
+	while (rc != 0) {
+		for (j = 0; j < g_args.a_nr_conns; ++j) {
+			rc = m0_rpc_session_timedwait(session, M0_BITS
+						      (M0_RPC_SESSION_IDLE,
 						       M0_RPC_SESSION_FAILED),
-				      M0_TIME_NEVER);
-	M0_UB_ASSERT(M0_IN(session->s_sm.sm_state, (M0_RPC_SESSION_IDLE,
-						    M0_RPC_SESSION_FAILED)) &&
-		     rc == 0);
+						      3ULL*M0_TIME_ONE_BILLION);
+			if (rc != 0)
+				break;
+		}
+	}
 }
 
 struct m0_ub_set m0_rpc_ub = {
-- 
1.8.3.2

