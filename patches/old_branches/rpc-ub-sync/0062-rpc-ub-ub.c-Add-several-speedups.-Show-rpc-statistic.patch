From 857f64dc256d1d037e0193d2897ee0af83ed69a5 Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Mon, 1 Apr 2013 13:29:38 +0300
Subject: [PATCH 62/63] rpc/ub/ub.c: Add several speedups. Show rpc statistics.

- ub_req_fom_home_locality() to round-robin localities
- change the value of ->ri_deadline to be non-zero
- updated xcode
- rpc statistics
---
 rpc/rpclib.c         |  2 +-
 rpc/rpclib.h         |  4 ++++
 rpc/ub/rpc_ub_fops.c |  4 +++-
 rpc/ub/ub.c          | 44 +++++++++++++++++++++++++++++++++++++++++++-
 4 files changed, 51 insertions(+), 3 deletions(-)

diff --git a/rpc/rpclib.c b/rpc/rpclib.c
index 0b7eb32..418df05 100644
--- a/rpc/rpclib.c
+++ b/rpc/rpclib.c
@@ -90,7 +90,7 @@ void m0_rpc_server_stop(struct m0_rpc_server_ctx *sctx)
 	M0_LEAVE();
 }
 
-M0_INTERNAL struct m0_rpc_machine *
+struct m0_rpc_machine *
 m0_rpc_server_ctx_get_rmachine(struct m0_rpc_server_ctx *sctx)
 {
 	return m0_mero_to_rmach(&sctx->rsx_mero_ctx);
diff --git a/rpc/rpclib.h b/rpc/rpclib.h
index 1231f04..ce385a8 100644
--- a/rpc/rpclib.h
+++ b/rpc/rpclib.h
@@ -242,4 +242,8 @@ int m0_rpc_client_call(struct m0_fop *fop,
 		       const struct m0_rpc_item_ops *ri_ops,
 		       m0_time_t deadline);
 
+
+struct m0_rpc_machine *
+m0_rpc_server_ctx_get_rmachine(struct m0_rpc_server_ctx *sctx);
+
 #endif /* __MERO_RPC_RPCLIB_H__ */
diff --git a/rpc/ub/rpc_ub_fops.c b/rpc/ub/rpc_ub_fops.c
index 35a7e7c..e849ccb 100644
--- a/rpc/ub/rpc_ub_fops.c
+++ b/rpc/ub/rpc_ub_fops.c
@@ -107,7 +107,9 @@ static int ub_req_fom_tick(struct m0_fom *fom)
 
 static size_t ub_req_fom_home_locality(const struct m0_fom *fom)
 {
-	return 0;
+	static size_t locality = 0;
+
+	return locality++;
 }
 
 /* ----------------------------------------------------------------
diff --git a/rpc/ub/ub.c b/rpc/ub/ub.c
index e753fd7..1f26908 100644
--- a/rpc/ub/ub.c
+++ b/rpc/ub/ub.c
@@ -324,7 +324,7 @@ static void fop_send(struct m0_rpc_session *session, size_t msg_id)
 	item->ri_nr_sent_max = MAX_RETRIES;
 	item->ri_ops         = &ub_item_ops;
 	item->ri_session     = session;
-	item->ri_deadline    = 0; /* XXX CONFIGUREME? */
+	item->ri_deadline    = m0_time_from_now(1, 0); /* 1s formation time */
 	item->ri_prio        = M0_RPC_ITEM_PRIO_MID; /* XXX CONFIGUREME */
 
 	rc = m0_rpc_post_slot(item, session->s_slot_table[msg_id %
@@ -343,6 +343,41 @@ static struct m0_rpc_session *_session(unsigned int i)
 	return &g_clients[i].rc_ctx.rcx_session;
 }
 
+/* XXX: Copy-paste!!! Get stats from rpc_machine and print them */
+static void __print_stats(struct m0_rpc_machine *rpc_mach)
+{
+	struct m0_rpc_stats stats;
+	printf("stats:\n");
+
+	m0_rpc_machine_get_stats(rpc_mach, &stats, false);
+	printf("\treceived_items: %llu\n",
+	       (unsigned long long)stats.rs_nr_rcvd_items);
+	printf("\tsent_items: %llu\n",
+		(unsigned long long)stats.rs_nr_sent_items);
+	printf("\tsent_items_uniq: %llu\n",
+		(unsigned long long)stats.rs_nr_sent_items_uniq);
+	printf("\tresent_items: %llu\n",
+		(unsigned long long)stats.rs_nr_resent_items);
+	printf("\tfailed_items: %llu\n",
+		(unsigned long long)stats.rs_nr_failed_items);
+	printf("\ttimedout_items: %llu\n",
+		(unsigned long long)stats.rs_nr_timedout_items);
+	printf("\tdropped_items: %llu\n",
+		(unsigned long long)stats.rs_nr_dropped_items);
+
+	printf("\treceived_packets: %llu\n",
+	       (unsigned long long)stats.rs_nr_rcvd_packets);
+	printf("\tsent_packets: %llu\n",
+	       (unsigned long long)stats.rs_nr_sent_packets);
+	printf("\tpackets_failed : %llu\n",
+	       (unsigned long long)stats.rs_nr_failed_packets);
+
+	printf("\tTotal_bytes_sent : %llu\n",
+	       (unsigned long long)stats.rs_nr_sent_bytes);
+	printf("\tTotal_bytes_rcvd : %llu\n",
+	       (unsigned long long)stats.rs_nr_rcvd_bytes);
+}
+
 static void run(int iter M0_UNUSED)
 {
 	int n;
@@ -374,6 +409,13 @@ static void run(int iter M0_UNUSED)
 	}
 	ProfilerFlush();
 	ProfilerStop();
+
+	{
+		struct m0_rpc_machine *m =
+			m0_rpc_server_ctx_get_rmachine(&g_sctx);
+		__print_stats(m);
+	}
+
 	printf("\n#--#\n");
 }
 
-- 
1.8.3.2

