From 6e866e00dcef69cd7253abdad3671dc2d9fa9f2a Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Mon, 18 Mar 2013 20:28:54 +0200
Subject: [PATCH 40/63] rpc-ub: delete CLIENT_MAX macro; cleanup

* M0_TRACE_SUBSYSTEM: Use M0_TRACE_SUBSYS_UT instead of
  M0_TRACE_SUBSYS_RPC. A trace message generated by rpc-ub does not
  originate from rpc layer, thus the former value of
  M0_TRACE_SUBSYSTEM was inappropriate. And we do not want to
  introduce M0_TRACE_SUBSYS_UB just yet.  *_UT will do.

* Get rid of CLIENT_MAX macro. It wasn't needed.

* SERVER_ENDPOINT_ADDR: Use different portal numbers for rpc clients
  and server (34 and 12, correspondingly). This is an additional
  measure to ensure that client's endpoint address is not equal to
  server's.

* Disperse "CONFIGUREME" comments.
---
 rpc/ub/ub.c | 42 +++++++++++++++++++-----------------------
 1 file changed, 19 insertions(+), 23 deletions(-)

diff --git a/rpc/ub/ub.c b/rpc/ub/ub.c
index 42439b5..b91e3bd 100644
--- a/rpc/ub/ub.c
+++ b/rpc/ub/ub.c
@@ -18,7 +18,7 @@
  *                  Valery V. Vorotyntsev <valery_vorotyntsev@xyratex.com>
  * Original creation date: 04-Mar-2013
  */
-#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_RPC
+#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_UT
 #include "lib/trace.h"
 
 #include "lib/ub.h"         /* m0_ub_set */
@@ -40,26 +40,22 @@
 
 enum {
 	CLIENT_COB_DOM_ID  = 16,
-	SESSION_SLOTS      = 15, /* @todo: play with this value */
-	MAX_RPCS_IN_FLIGHT = 1,  /* @todo: play with this value */
+	SESSION_SLOTS      = 15, /* XXX CONFIGUREME */
+	MAX_RPCS_IN_FLIGHT = 1,  /* XXX CONFIGUREME */
 	CONNECT_TIMEOUT    = 50,
 	MAX_RETRIES        = 5
 };
 
-/* #define UB_USE_LNET_XPORT */
+/* #define UB_USE_LNET_XPORT  /\* XXX CONFIGUREME *\/ */
 #ifdef UB_USE_LNET_XPORT
-#  define CLIENT_MAX           9
-#  define CLIENT_ENPOINT       "0@lo:12345:34:%d"
-#  define SERVER_ENDPOINT_ADDR "0@lo:12345:34:1"
+#  define CLIENT_ENDPOINT_FMT  "0@lo:12345:34:%d"
+#  define SERVER_ENDPOINT_ADDR "0@lo:12345:12:1"
 #  define SERVER_ENDPOINT      "lnet:" SERVER_ENDPOINT_ADDR
-
 static struct m0_net_xprt *g_xprt = &m0_net_lnet_xprt;
 #else
-#  define CLIENT_MAX           12345
-#  define CLIENT_ENPOINT       "127.0.0.1:%d"
-#  define SERVER_ENDPOINT_ADDR "127.0.0.1:54321"
+#  define CLIENT_ENDPOINT_FMT  "127.0.0.1:%d"
+#  define SERVER_ENDPOINT_ADDR "127.0.0.1:1"
 #  define SERVER_ENDPOINT      "bulk-mem:" SERVER_ENDPOINT_ADDR
-
 static struct m0_net_xprt *g_xprt = &m0_net_bulk_mem_xprt;
 #endif
 
@@ -70,8 +66,7 @@ struct ub_rpc_client {
 	struct m0_dbenv          rc_dbenv;
 };
 
-static struct ub_rpc_client g_client[1];
-M0_BASSERT(ARRAY_SIZE(g_client) < CLIENT_MAX);
+static struct ub_rpc_client g_client[1]; /* XXX CONFIGUREME */
 
 #define NAME(ext) "rpc-ub" ext
 static char *g_argv[] = {
@@ -125,6 +120,8 @@ static void _client_start(struct ub_rpc_client *client, uint32_t cob_dom_id,
 	client->rc_ctx.rcx_recv_queue_min_length = M0_NET_TM_RECV_QUEUE_DEF_LEN;
 
 	rc = m0_rpc_client_start(&client->rc_ctx);
+	if (rc != 0)
+		M0_LOG(M0_FATAL, "rc=%d", rc);
 	M0_ASSERT(rc == 0);
 }
 
@@ -154,7 +151,7 @@ static int _start(const char *opts /*XXX USEME*/)
 
 	for (i = 0; i < ARRAY_SIZE(g_client); ++i) {
 		snprintf(db, ARRAY_SIZE(db), "rpc-ub.client-db_%d", i);
-		snprintf(ep, ARRAY_SIZE(ep), CLIENT_ENPOINT, CLIENT_MAX - i);
+		snprintf(ep, ARRAY_SIZE(ep), CLIENT_ENDPOINT_FMT, 2 + i);
 		_client_start(&g_client[i], CLIENT_COB_DOM_ID + i, db,
 			      SESSION_SLOTS, ep);
 	}
@@ -179,7 +176,8 @@ static void ub_item_replied(struct m0_rpc_item *item)
 	struct ub_resp *resp;
 	struct ub_req  *req;
 
-	M0_LOG(M0_INFO, "ri_error %d", item->ri_error);
+	if (item->ri_error != 0)
+		M0_LOG(M0_FATAL, "ri_error=%d", item->ri_error);
 	M0_UB_ASSERT(item->ri_error == 0);
 	M0_UB_ASSERT(item->ri_reply != 0);
 
@@ -191,10 +189,9 @@ static void ub_item_replied(struct m0_rpc_item *item)
 
 static int client_post(struct m0_fop *fop, struct m0_rpc_session *session)
 {
-	/* @todo: parametrise this to test resend after timeout ??? */
-	int                 deadline = 0;
 	struct m0_rpc_item *item;
-
+	int                 deadline = 0; /* XXX CONFIGUREME?
+					   * (to test resend after timeout) */
 	M0_PRE(fop != NULL);
 	M0_PRE(session != NULL);
 
@@ -202,8 +199,7 @@ static int client_post(struct m0_fop *fop, struct m0_rpc_session *session)
 	item->ri_ops      = &ub_item_ops;
 	item->ri_session  = session;
 	item->ri_deadline = deadline;
-	/* @todo: parametrise this for tests */
-	item->ri_prio     = M0_RPC_ITEM_PRIO_MID;
+	item->ri_prio     = M0_RPC_ITEM_PRIO_MID; /* XXX CONFIGUREME */
 
 	return m0_rpc_post(item);
 }
@@ -250,11 +246,9 @@ static void run(int iter M0_UNUSED)
 			fop_send(session, i);
 		}
 	}
-
 	rc = m0_rpc_session_timedwait(session, M0_BITS(M0_RPC_SESSION_IDLE,
 						       M0_RPC_SESSION_FAILED),
 				      M0_TIME_NEVER);
-
 	M0_UB_ASSERT(M0_IN(session->s_sm.sm_state, (M0_RPC_SESSION_IDLE,
 						    M0_RPC_SESSION_FAILED)) &&
 		     rc == 0);
@@ -271,3 +265,5 @@ struct m0_ub_set m0_rpc_ub = {
 		{ .ub_name = NULL }  /* terminator */
 	}
 };
+
+#undef M0_TRACE_SUBSYSTEM
-- 
1.8.3.2

