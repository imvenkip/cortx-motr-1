From c2c891c1207391e761a52f536a88071280206e49 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Fri, 15 Mar 2013 23:35:51 +0200
Subject: [PATCH 36/63] mero: slightly improve documentation of m0d CLI options

Document -G, -L, and -i options as well as possible, given complete
unfamiliarity with the first two (this is still better than original
documentation).

+ m0_ios_mds_rpc_ctx_init(): Move enum and static variables to the top.
+ reqh_ctxs_are_valid(): Remove unneeded braces.
---
 ioservice/io_service.c | 23 ++++++++++++-----------
 mero/setup.c           | 16 +++++++---------
 2 files changed, 19 insertions(+), 20 deletions(-)

diff --git a/ioservice/io_service.c b/ioservice/io_service.c
index dbe8669..83b070a 100644
--- a/ioservice/io_service.c
+++ b/ioservice/io_service.c
@@ -604,23 +604,24 @@ static void ios_stats_post_addb(struct m0_reqh_service *service)
 
 M0_INTERNAL int m0_ios_mds_rpc_ctx_init(struct m0_reqh_service *service)
 {
+	enum {
+		RPC_TIMEOUT          = 8, /* seconds */
+		NR_SLOTS_PER_SESSION = 2,
+		MAX_NR_RPC_IN_FLIGHT = 5,
+		CLIENT_COB_DOM_ID    = 14
+	};
+	static struct m0_dbenv      client_dbenv;
+	static struct m0_cob_domain client_cob_dom;
+
 	struct m0_reqh             *reqh = service->rs_reqh;
 	struct m0_reqh_io_service  *serv_obj;
 	struct m0_rpc_client_ctx   *rpc_client_ctx;
-	int                         rc;
-	const char                 *dbname = "sr_cdb";
 	struct m0_net_domain       *cl_ndom;
 	struct m0_reqh_context     *reqh_ctx = service->rs_reqh_ctx;
+	const char                 *dbname = "sr_cdb";
 	const char                 *cli_ep_addr;
 	const char                 *srv_ep_addr;
-	enum {
-		RPC_TIMEOUT              = 8, /* seconds */
-		NR_SLOTS_PER_SESSION     = 2,
-		MAX_NR_RPC_IN_FLIGHT     = 5,
-		CLIENT_COB_DOM_ID        = 14,
-	};
-	static struct m0_dbenv      client_dbenv;
-	static struct m0_cob_domain client_cob_dom;
+	int                         rc;
 
 	srv_ep_addr = reqh_ctx->rc_mero->cc_mds_epx.ex_endpoint;
 	cli_ep_addr = reqh_ctx->rc_mero->cc_cli2mds_epx.ex_endpoint;
@@ -629,7 +630,7 @@ M0_INTERNAL int m0_ios_mds_rpc_ctx_init(struct m0_reqh_service *service)
 	M0_LOG(M0_DEBUG, "srv = %s", srv_ep_addr);
 
 	if (srv_ep_addr == NULL || cli_ep_addr == NULL) {
-		M0_LOG(M0_WARN, "No mdservice endpoint.");
+		M0_LOG(M0_WARN, "None of mdservice endpoints provided");
 		M0_RETURN(0);
 	}
 
diff --git a/mero/setup.c b/mero/setup.c
index 19ad2d9..72a3b90 100644
--- a/mero/setup.c
+++ b/mero/setup.c
@@ -666,14 +666,13 @@ static int cs_buffer_pool_setup(struct m0_mero *cctx)
 		tms_nr		   = cs_domain_tms_nr(cctx, dom);
 		M0_ASSERT(max_recv_queue_len >= tms_nr);
 
-		bufs_nr  = m0_rpc_bufs_nr(max_recv_queue_len, tms_nr);
-
 		M0_ALLOC_PTR(cs_bp);
 		if (cs_bp == NULL) {
 			rc = -ENOMEM;
 			break;
 		}
 
+		bufs_nr = m0_rpc_bufs_nr(max_recv_queue_len, tms_nr);
 		rc = m0_rpc_net_buffer_pool_setup(dom, &cs_bp->cs_buffer_pool,
 						  bufs_nr, tms_nr);
 		if (rc != 0) {
@@ -1578,10 +1577,10 @@ static void cs_help(FILE *out)
 "  -M num   Maximum RPC message size.\n"
 "  -w num   Pool width.\n"
 "  -C addr  Endpoint address of confd service.\n"
-"  -G addr  Endpoint address of mdservice service.\n"
-"  -L addr  Client Endpoint address to mdservice service.\n"
-"  -i addr  ios endpoint list.\n"
 "  -P str   Configuration profile.\n"
+"  -G addr  Endpoint address of mdservice.\n"
+"  -L addr  Client endpoint address to mdservice.\n"
+"  -i addr  Add new entry to the list of ioservice endpoint addresses.\n"
 "\n"
 "Request handler options:\n"
 "  -r   Start new set of request handler options.\n"
@@ -1702,14 +1701,13 @@ static int reqh_ctxs_are_valid(struct m0_mero *cctx)
 		}
 	} m0_tl_endfor;
 
-	if (cctx->cc_mds_epx.ex_endpoint == NULL) {
+	if (cctx->cc_mds_epx.ex_endpoint == NULL)
 		M0_LOG(M0_WARN, "Missing mdservice endpoint.\n"
 				 "Use -G to provide a valid one");
-	}
-	if (cctx->cc_cli2mds_epx.ex_endpoint == NULL) {
+
+	if (cctx->cc_cli2mds_epx.ex_endpoint == NULL)
 		M0_LOG(M0_WARN, "Missing client to mdservice endpoint.\n"
 				 "Use -L to provide a valid one");
-	}
 
 	if (cctx->cc_pool_width <= 0) {
 		M0_LOG(M0_ERROR, "Invalid pool width.\n"
-- 
1.8.3.2

