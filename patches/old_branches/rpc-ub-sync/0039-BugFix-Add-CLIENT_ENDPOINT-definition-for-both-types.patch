From f2c199f4ebe8d779a7d36c7c0e7147be480539f0 Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Mon, 18 Mar 2013 15:48:23 +0200
Subject: [PATCH 39/63] BugFix: Add CLIENT_ENDPOINT definition for both types
 of net-transpots

---
 rpc/ub/ub.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/rpc/ub/ub.c b/rpc/ub/ub.c
index 4de81af..42439b5 100644
--- a/rpc/ub/ub.c
+++ b/rpc/ub/ub.c
@@ -18,6 +18,8 @@
  *                  Valery V. Vorotyntsev <valery_vorotyntsev@xyratex.com>
  * Original creation date: 04-Mar-2013
  */
+#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_RPC
+#include "lib/trace.h"
 
 #include "lib/ub.h"         /* m0_ub_set */
 #include "lib/misc.h"       /* M0_IN, M0_BITS */
@@ -44,12 +46,17 @@ enum {
 	MAX_RETRIES        = 5
 };
 
+/* #define UB_USE_LNET_XPORT */
 #ifdef UB_USE_LNET_XPORT
+#  define CLIENT_MAX           9
+#  define CLIENT_ENPOINT       "0@lo:12345:34:%d"
 #  define SERVER_ENDPOINT_ADDR "0@lo:12345:34:1"
 #  define SERVER_ENDPOINT      "lnet:" SERVER_ENDPOINT_ADDR
 
 static struct m0_net_xprt *g_xprt = &m0_net_lnet_xprt;
 #else
+#  define CLIENT_MAX           12345
+#  define CLIENT_ENPOINT       "127.0.0.1:%d"
 #  define SERVER_ENDPOINT_ADDR "127.0.0.1:54321"
 #  define SERVER_ENDPOINT      "bulk-mem:" SERVER_ENDPOINT_ADDR
 
@@ -63,7 +70,8 @@ struct ub_rpc_client {
 	struct m0_dbenv          rc_dbenv;
 };
 
-static struct ub_rpc_client g_client[3];
+static struct ub_rpc_client g_client[1];
+M0_BASSERT(ARRAY_SIZE(g_client) < CLIENT_MAX);
 
 #define NAME(ext) "rpc-ub" ext
 static char *g_argv[] = {
@@ -146,7 +154,7 @@ static int _start(const char *opts /*XXX USEME*/)
 
 	for (i = 0; i < ARRAY_SIZE(g_client); ++i) {
 		snprintf(db, ARRAY_SIZE(db), "rpc-ub.client-db_%d", i);
-		snprintf(ep, ARRAY_SIZE(ep), "127.0.0.1:%d", 12345 - i);
+		snprintf(ep, ARRAY_SIZE(ep), CLIENT_ENPOINT, CLIENT_MAX - i);
 		_client_start(&g_client[i], CLIENT_COB_DOM_ID + i, db,
 			      SESSION_SLOTS, ep);
 	}
@@ -171,6 +179,7 @@ static void ub_item_replied(struct m0_rpc_item *item)
 	struct ub_resp *resp;
 	struct ub_req  *req;
 
+	M0_LOG(M0_INFO, "ri_error %d", item->ri_error);
 	M0_UB_ASSERT(item->ri_error == 0);
 	M0_UB_ASSERT(item->ri_reply != 0);
 
-- 
1.8.3.2

