From f30a7a44cedc9de3b391664d58c80e0a1ecc455e Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 21 Mar 2013 16:40:29 +0200
Subject: [PATCH 51/63] rpc-ub: s/msg_nr/nr_msgs/

Use consistent naming for configurable parameters:
s/msg_nr/nr_msgs/

+ g_argv: Use global option (-Q) instead of reqh-specific (-q).
+ MIN_RECV_QUEUE_LEN: new enum value.
+ Use check() function to improve readability.
---
 rpc/ub/ub.c | 54 ++++++++++++++++++++++++++++++------------------------
 1 file changed, 30 insertions(+), 24 deletions(-)

diff --git a/rpc/ub/ub.c b/rpc/ub/ub.c
index 5eb2683..f5b0e39 100644
--- a/rpc/ub/ub.c
+++ b/rpc/ub/ub.c
@@ -41,8 +41,8 @@
 struct args {
 	unsigned int a_nr_conns;
 	unsigned int a_nr_slots;
+	unsigned int a_nr_msgs;
 	unsigned int a_msg_len; /* XXX USEME */
-	unsigned int a_msg_nr;
 };
 
 /** Assigns default values to the arguments. */
@@ -50,15 +50,15 @@ static void args_init(struct args *args)
 {
 	args->a_nr_conns = 1;
 	args->a_nr_slots = 15;
+	args->a_nr_msgs  = 100;
 	args->a_msg_len  = 32;
-	args->a_msg_nr   = 100;
 }
 
 enum { /* XXX TODO: Revise these values. */
 	MAX_NR_CONNS = 10000,
 	MAX_NR_SLOTS = 100,
-	MAX_MSG_LEN  = 8192,
-	MAX_MSG_NR   = 1000
+	MAX_NR_MSGS  = 1000,
+	MAX_MSG_LEN  = 8192
 };
 
 static int args_format_error(void)
@@ -68,20 +68,25 @@ static int args_format_error(void)
 	return -EINVAL;
 }
 
+static bool check(unsigned int n, unsigned int max)
+{
+	return 0 < n && n <= max;
+}
+
 static int args_check_limits(const struct args *args)
 {
-	if (0 < args->a_nr_conns && args->a_nr_conns <= MAX_NR_CONNS &&
-	    0 < args->a_nr_slots && args->a_nr_slots <= MAX_NR_SLOTS &&
-	    0 < args->a_msg_len && args->a_msg_len <= MAX_MSG_LEN &&
-	    0 < args->a_msg_nr && args->a_msg_nr <= MAX_MSG_NR)
+	if (check(args->a_nr_conns, MAX_NR_CONNS) &&
+	    check(args->a_nr_slots, MAX_NR_SLOTS) &&
+	    check(args->a_nr_msgs,  MAX_NR_MSGS) &&
+	    check(args->a_msg_len,  MAX_MSG_LEN))
 		return 0;
 
 	fprintf(stderr, "**ERROR** Parameter is out of limits, which are:\n"
 		"  nr_conns: 1..%u\n"
 		"  nr_slots: 1..%u\n"
-		"  msg_len:  1..%u\n"
-		"  msg_nr:   1..%u\n", MAX_NR_CONNS, MAX_NR_SLOTS, MAX_MSG_LEN,
-		MAX_MSG_NR);
+		"  nr_msgs:  1..%u\n"
+		"  msg_len:  1..%u\n",
+		MAX_NR_CONNS, MAX_NR_SLOTS, MAX_NR_MSGS, MAX_MSG_LEN);
 	return -EINVAL;
 }
 
@@ -89,9 +94,9 @@ static int args_parse(const char *src, struct args *dest)
 {
 	if (src == NULL || *src == 0)
 		return 0;
-	int rc = sscanf(src, "nr_conns=%u,nr_slots=%u,msg_len=%u,msg_nr=%u",
-			&dest->a_nr_conns, &dest->a_nr_slots,
-			&dest->a_msg_len, &dest->a_msg_nr);
+	int rc = sscanf(src, "nr_conns=%u,nr_slots=%u,nr_msgs=%u,msg_len=%u",
+			&dest->a_nr_conns, &dest->a_nr_slots, &dest->a_nr_msgs,
+			&dest->a_msg_len);
 	return rc == 4 ? args_check_limits(dest) : args_format_error();
 }
 
@@ -105,7 +110,8 @@ enum {
 	CLIENT_COB_DOM_ID  = 16,
 	MAX_RPCS_IN_FLIGHT = 1,  /* XXX CONFIGUREME */
 	CONNECT_TIMEOUT    = 50,
-	MAX_RETRIES        = 500
+	MAX_RETRIES        = 500,
+	MIN_RECV_QUEUE_LEN = 200
 };
 
 /* #define UB_USE_LNET_XPORT */
@@ -132,9 +138,9 @@ static struct ub_rpc_client *g_clients;
 
 #define NAME(ext) "rpc-ub" ext
 static char *g_argv[] = {
-	NAME(""), "-w", "10", "-r", "-p", "-T", "AD", "-D", NAME(".db"),
-	"-S", NAME(".stob"), "-A", NAME(".addb-stob"), "-e", SERVER_ENDPOINT,
-	"-s", "ds1", "-q", "200"
+	NAME(""), "-Q", "200" /* MIN_RECV_QUEUE_LEN */, "-w", "10",
+	"-r", "-p", "-T", "AD", "-D", NAME(".db"), "-S", NAME(".stob"),
+	"-A", NAME(".addb-stob"), "-e", SERVER_ENDPOINT, "-s", "ds1"
 };
 
 static struct m0_rpc_server_ctx g_sctx = {
@@ -176,7 +182,7 @@ static void _client_start(struct ub_rpc_client *client, uint32_t cob_dom_id,
 	client->rc_ctx.rcx_remote_addr           = SERVER_ENDPOINT_ADDR;
 	client->rc_ctx.rcx_timeout_s             = CONNECT_TIMEOUT;
 	client->rc_ctx.rcx_max_rpcs_in_flight    = MAX_RPCS_IN_FLIGHT;
-	client->rc_ctx.rcx_recv_queue_min_length = 200; /* M0_NET_TM_RECV_QUEUE_DEF_LEN; */
+	client->rc_ctx.rcx_recv_queue_min_length = MIN_RECV_QUEUE_LEN;
 
 	rc = m0_rpc_client_start(&client->rc_ctx);
 	if (rc != 0)
@@ -305,7 +311,7 @@ static void run(int iter M0_UNUSED)
 	   mero: NOTICE : [rpc/slot.c:584:m0_rpc_slot_reply_received] < rc=-71.
 	   Needs investigation!
 	 */
-	for (i = 0; i < g_args.a_msg_nr; ++i) {
+	for (i = 0; i < g_args.a_nr_msgs; ++i) {
 		for (j = 0; j < g_args.a_nr_conns; ++j) {
 			session = &g_clients[j].rc_ctx.rcx_session;
 			fop_send(session, i);
@@ -315,10 +321,10 @@ static void run(int iter M0_UNUSED)
 	rc = 1;
 	while (rc != 0) {
 		for (j = 0; j < g_args.a_nr_conns; ++j) {
-			rc = m0_rpc_session_timedwait(session, M0_BITS
-						      (M0_RPC_SESSION_IDLE,
-						       M0_RPC_SESSION_FAILED),
-						      m0_time(3, 0));
+			rc = m0_rpc_session_timedwait(
+				session, M0_BITS(M0_RPC_SESSION_IDLE,
+						 M0_RPC_SESSION_FAILED),
+				m0_time(3, 0));
 			if (rc != 0)
 				break;
 		}
-- 
1.8.3.2

