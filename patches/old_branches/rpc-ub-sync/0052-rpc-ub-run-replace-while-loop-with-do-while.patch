From eba73d971abb65ec1488e813cf6c09d6206bb228 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 21 Mar 2013 16:56:36 +0200
Subject: [PATCH 52/63] rpc-ub (run): replace "while" loop with "do/while"

Refactor run():
- use "do/while" loop as it makes the code here more concise;
- assign to `session' in order for the compiler not to complain
  (`session' may be uninitialized, bla bla bla);
- add M0_PRE() to sanity-check loop boundaries.
---
 rpc/ub/ub.c    | 16 ++++++++--------
 utils/common.c |  4 ++--
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/rpc/ub/ub.c b/rpc/ub/ub.c
index f5b0e39..fa70eed 100644
--- a/rpc/ub/ub.c
+++ b/rpc/ub/ub.c
@@ -292,7 +292,6 @@ static void fop_send(struct m0_rpc_session *session, size_t nr)
 	rc = m0_rpc_post_slot(item, session->s_slot_table[nr %
 							  g_args.a_nr_slots]);
 	M0_UB_ASSERT(rc == 0);
-
 	m0_fop_put(fop);
 }
 
@@ -302,10 +301,12 @@ static void fop_send(struct m0_rpc_session *session, size_t nr)
 
 static void run(int iter M0_UNUSED)
 {
-	struct m0_rpc_session *session;
 	int                    i;
 	int                    j;
-	int                    rc;
+	struct m0_rpc_session *session = NULL;
+	int                    rc = 1;
+
+	M0_PRE(g_args.a_nr_msgs > 0 && g_args.a_nr_conns > 0);
 
 	/* @todo: For some reason the following error may occur here:
 	   mero: NOTICE : [rpc/slot.c:584:m0_rpc_slot_reply_received] < rc=-71.
@@ -318,17 +319,16 @@ static void run(int iter M0_UNUSED)
 		}
 	}
 
-	rc = 1;
-	while (rc != 0) {
-		for (j = 0; j < g_args.a_nr_conns; ++j) {
+	do {
+		for (i = 0; i < g_args.a_nr_conns; ++i) {
 			rc = m0_rpc_session_timedwait(
 				session, M0_BITS(M0_RPC_SESSION_IDLE,
 						 M0_RPC_SESSION_FAILED),
 				m0_time(3, 0));
 			if (rc != 0)
-				break;
+				return;
 		}
-	}
+	} while (rc != 0);
 }
 
 struct m0_ub_set m0_rpc_ub = {
diff --git a/utils/common.c b/utils/common.c
index 17a4c3b..dce2152 100644
--- a/utils/common.c
+++ b/utils/common.c
@@ -49,8 +49,8 @@ static int reset_sandbox(const char *sandbox)
 	if (rc != 0) {
 		/* cleanup might fail for innocent reasons, e.g., unreliable rm
 		   on an NFS mount. */
-		fprintf(stderr, "sandbox cleanup at \"%s\" failed: %i\n",
-			sandbox, rc);
+		fprintf(stderr, "*WARNING* sandbox cleanup at \"%s\" failed:"
+			" %i\n", sandbox, rc);
 	}
 
 	free(cmd);
-- 
1.8.3.2

