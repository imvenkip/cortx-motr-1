From 2f295f6505e9ac844660f309f3c25c8e775f0ed8 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Wed, 13 Mar 2013 19:48:08 +0200
Subject: [PATCH 23/63] ub_main.c: list and execute benchmarks in
 alphanumerical order

ub_add(): Add benchmarks in reversed order, using the fact that
they are executed (or printed) from last to first.

+ Refactor main().
---
 lib/ub.c        |  6 +++---
 utils/ub_main.c | 65 ++++++++++++++++++++++++++++++++-------------------------
 2 files changed, 40 insertions(+), 31 deletions(-)

diff --git a/lib/ub.c b/lib/ub.c
index 025d0b3..7f618e5 100644
--- a/lib/ub.c
+++ b/lib/ub.c
@@ -41,7 +41,7 @@ static struct m0_ub_set *last = NULL;
 
 M0_INTERNAL void m0_ub_set_print(void)
 {
-	struct m0_ub_set *set;
+	const struct m0_ub_set *set;
 
 	printf("Available benchmarks:\n");
 	for (set = last; set != NULL; set = set->us_prev)
@@ -59,13 +59,13 @@ M0_INTERNAL int m0_ub_set_select(const char *name)
 			return 0;
 		}
 	}
-	printf("Given benchmark `%s' not found\n", name);
+	printf("No such benchmark: %s\n", name);
 	return -ENOENT;
 }
 
 M0_INTERNAL void m0_ub_set_add(struct m0_ub_set *set)
 {
-	M0_ASSERT(set->us_prev == NULL);
+	M0_PRE(set->us_prev == NULL);
 
 	set->us_prev = last;
 	last = set;
diff --git a/utils/ub_main.c b/utils/ub_main.c
index 1ad7296..01579ea 100644
--- a/utils/ub_main.c
+++ b/utils/ub_main.c
@@ -74,11 +74,11 @@ static int ub_args_parse(int argc, char *argv[], struct ub_args *out)
 			       LAMBDA(void, (int64_t rounds) {
 					       out->ua_rounds = rounds;
 				       })),
-		  M0_VOIDARG('l', "List available benchmark tests",
+		  M0_VOIDARG('l', "List available benchmarks and exit",
 			     LAMBDA(void, (void) {
 					     out->ua_ub_list = true;
 				     })),
-		  M0_STRINGARG('t', "Benchmark test name to run",
+		  M0_STRINGARG('t', "Benchmark to run",
 			       LAMBDA(void, (const char *str) {
 					       out->ua_name = strdup(str);
 				       })),
@@ -91,37 +91,42 @@ static int ub_args_parse(int argc, char *argv[], struct ub_args *out)
 
 static void ub_add(const struct ub_args *args)
 {
-	/* Note these tests are run in reverse order from the way
-	   they are listed here */
-
-	m0_ub_set_add(&m0_ad_ub);
-	m0_ub_set_add(&m0_adieu_ub);
-	m0_ub_set_add(&m0_atomic_ub);
-	m0_ub_set_add(&m0_bitmap_ub);
-	m0_ub_set_add(&m0_cob_ub);
-	m0_ub_set_add(&m0_db_ub);
-	m0_ub_set_add(&m0_emap_ub);
-	m0_ub_set_add(&m0_fol_ub);
-	m0_ub_set_add(&m0_fom_ub);
-	m0_ub_set_add(&m0_list_ub);
-	m0_ub_set_add(&m0_memory_ub);
-	m0_ub_set_add(&m0_parity_math_ub);
-	m0_ub_set_add(&m0_rm_ub);
-	m0_ub_set_add(&m0_rpc_ub);
-	m0_ub_set_add(&m0_thread_ub);
-	m0_ub_set_add(&m0_tlist_ub);
+	/*
+	 * Please maintain _reversed_ sorting order.
+	 *
+	 * These benchmarks are executed in reverse order from the way
+	 * they are listed here.
+	 */
 	m0_ub_set_add(&m0_trace_ub);
+	m0_ub_set_add(&m0_tlist_ub);
+	m0_ub_set_add(&m0_thread_ub);
+	m0_ub_set_add(&m0_rpc_ub);
+	m0_ub_set_add(&m0_rm_ub);
+	m0_ub_set_add(&m0_parity_math_ub);
+	m0_ub_set_add(&m0_memory_ub);
+	m0_ub_set_add(&m0_list_ub);
+	m0_ub_set_add(&m0_fom_ub);
+	m0_ub_set_add(&m0_fol_ub);
+	m0_ub_set_add(&m0_emap_ub);
+	m0_ub_set_add(&m0_db_ub);
+	m0_ub_set_add(&m0_cob_ub);
+	m0_ub_set_add(&m0_bitmap_ub);
+	m0_ub_set_add(&m0_atomic_ub);
+	m0_ub_set_add(&m0_adieu_ub);
+	m0_ub_set_add(&m0_ad_ub);
 }
 
-static void ub_run(const struct ub_args *args)
+static int ub_run(const struct ub_args *args)
 {
-	if (args->ua_ub_list) {
-		m0_ub_set_print();
-		return;
-	}
+	int rc = 0;
+
+	M0_PRE(!args->ua_ub_list);
 
-	if (args->ua_name == NULL || m0_ub_set_select(args->ua_name) == 0)
+	if (args->ua_name != NULL)
+		rc = m0_ub_set_select(args->ua_name);
+	if (rc == 0)
 		m0_ub_run(args->ua_rounds);
+	return rc;
 }
 
 int main(int argc, char *argv[])
@@ -136,7 +141,11 @@ int main(int argc, char *argv[])
 	rc = ub_args_parse(argc, argv, &args);
 	if (rc == 0) {
 		ub_add(&args);
-		ub_run(&args);
+
+		if (args.ua_ub_list)
+			m0_ub_set_print();
+		else
+			rc = ub_run(&args);
 	}
 	ub_args_fini(&args);
 	unit_end(UB_SANDBOX, false);
-- 
1.8.3.2

