From d0ae62db1869b984b3aae2c06fba919422a6ca52 Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Wed, 21 Aug 2013 19:15:02 +0300
Subject: [PATCH 34/34] db: Added UT proper db UT start and stop procedures.

  XXX: compiles but does not run.
---
 db/db.c         |  6 +++---
 db/ut/db.c      | 38 ++++++++++++++++++++++++++++++++++++--
 layout/layout.c | 26 +++++++++++++++++++++++++-
 3 files changed, 64 insertions(+), 6 deletions(-)

diff --git a/db/db.c b/db/db.c
index 40137c3..734c2d5 100644
--- a/db/db.c
+++ b/db/db.c
@@ -125,9 +125,9 @@ int m0_dbenv_init(struct m0_dbenv *env, const char *storage_dir,
 		.d_sm_group = &_db_sm_group,
 	};
 
-	m0_be_ut_seg_init(&env->d_i.d_ut_seg, NULL /* XXX */,
-			  0x1000000 /* 16MiB */);
-
+	if (env->d_i.d_seg->bs_state != M0_BSS_OPENED)
+		m0_be_ut_seg_init(&env->d_i.d_ut_seg, NULL /* XXX */,
+				  0x1000000 /* 16MiB */);
 	return 0;
 }
 
diff --git a/db/ut/db.c b/db/ut/db.c
index f95cc89..3ca05ea 100644
--- a/db/ut/db.c
+++ b/db/ut/db.c
@@ -23,6 +23,7 @@
 #include "ut/ut.h"
 #include "lib/ub.h"
 #include "db/db.h"
+#include "reqh/reqh.h"
 
 static const char db_name[] = "ut-db";
 static const char test_table[] = "test-table";
@@ -59,6 +60,39 @@ static int db_reset(void)
         return m0_ut_db_reset(db_name);
 }
 
+static struct m0_reqh ut__reqh;
+static int _ut_init(void)
+{
+        static struct m0_fol   fol;
+        static struct m0_dbenv dbenv;
+        int result;
+
+	db_reset();
+
+        result = m0_dbenv_init(&dbenv, "__ut_db_db", 0);
+        M0_ASSERT(result == 0);
+
+        result = M0_REQH_INIT(&ut__reqh,
+                              .rhia_dtm       = (void*)1,
+                              .rhia_db        = &dbenv,
+                              .rhia_mdstore   = (void*)1,
+                              .rhia_fol       = &fol,
+                              .rhia_svc       = (void*)1);
+        M0_ASSERT(result == 0);
+        m0_reqh_start(&ut__reqh);
+	return 0;
+}
+
+static int _ut_fini(void)
+{
+        m0_reqh_shutdown_wait(&ut__reqh);
+        m0_reqh_services_terminate(&ut__reqh);
+        m0_reqh_fini(&ut__reqh);
+        m0_dbenv_fini(ut__reqh.rh_dbenv);
+	db_reset();
+	return 0;
+}
+
 static void dbut_init(const char *db_name,
                       const char *test_table,
                       struct m0_dbenv *db,
@@ -330,8 +364,8 @@ static void test_waiter(void)
 
 const struct m0_test_suite db_ut = {
 	.ts_name = "libdb-ut",
-	.ts_init = db_reset,
-	.ts_fini = db_reset,
+	.ts_init = _ut_init,
+	.ts_fini = _ut_fini,
 	.ts_tests = {
 		{ "db-create", test_db_create },
 		{ "table-create", test_table_create },
diff --git a/layout/layout.c b/layout/layout.c
index f4af173..2b4c6b6 100644
--- a/layout/layout.c
+++ b/layout/layout.c
@@ -96,6 +96,7 @@
 #include "layout/layout_internal.h"
 #include "layout/layout_db.h"
 #include "layout/layout.h"
+#include "be/btree.h"
 
 extern struct m0_layout_type m0_pdclust_layout_type;
 extern struct m0_layout_enum_type m0_list_enum_type;
@@ -552,6 +553,28 @@ static int l_key_cmp(struct m0_table *table,
 	return M0_3WAY(*lid0, *lid1);
 }
 
+static m0_bcount_t layout_ksize(const void *key)
+{
+	return sizeof(struct m0_uint128);
+}
+
+static m0_bcount_t layout_vsize(const void *data)
+{
+	/* XXX: has to be replaced with more accurate function */
+	return 1ULL << 10;
+}
+
+static int layout_compare(const void *key0, const void *key1)
+{
+	return l_key_cmp(NULL, key0, key1);
+}
+
+static const struct m0_be_btree_kv_ops layouts_btree_ops = {
+	.ko_ksize   = layout_ksize,
+	.ko_vsize   = layout_vsize,
+	.ko_compare = layout_compare
+};
+
 /** table_ops for the layouts table. */
 static const struct m0_table_ops layouts_table_ops = {
 	.to = {
@@ -562,7 +585,8 @@ static const struct m0_table_ops layouts_table_ops = {
 			.max_size = ~0
 		}
 	},
-	.key_cmp = l_key_cmp
+	.key_cmp = l_key_cmp,
+	.ops = &layouts_btree_ops
 };
 
 M0_INTERNAL m0_bcount_t m0_layout__enum_max_recsize(struct m0_layout_domain
-- 
1.8.3.2

