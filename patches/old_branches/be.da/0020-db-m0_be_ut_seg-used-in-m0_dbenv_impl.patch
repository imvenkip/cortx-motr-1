From abb4aa8921505d212571a38d88c87c860decef7a Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Wed, 21 Aug 2013 14:31:25 +0300
Subject: [PATCH 20/34] db: m0_be_ut_seg used in m0_dbenv_impl

---
 db/db.c         | 54 +++++++++---------------------------------------------
 db/db_impl.h    |  5 +++--
 ut/Makefile.sub |  6 +++---
 3 files changed, 15 insertions(+), 50 deletions(-)

diff --git a/db/db.c b/db/db.c
index caabc92..092e313 100644
--- a/db/db.c
+++ b/db/db.c
@@ -46,7 +46,7 @@
 
 #include "be/domain.h"	/* m0_be_domain */
 #include "be/btree.h"
-#include "ut/ast_thread.c"/* XXX: m0_ut_ast_thread_start */
+#include "ut/ast_thread.h"/* XXX: m0_ut_ast_thread_start */
 
 #include "stob/linux.h"		/* m0_linux_stob_domain_locate */
 
@@ -57,7 +57,6 @@
 
 struct m0_addb_ctx m0_db_mod_ctx;
 
-static struct m0_be_seg        _db_seg;
 static struct m0_sm_group      _db_sm_group;
 static struct m0_be_domain     _db_dom;
 static struct m0_be_domain_cfg _db_cfg = {
@@ -121,61 +120,26 @@ M0_INTERNAL void m0_db_fini(void)
 	/* m0_xc_extmap_fini(); */
 }
 
-static int dbenv_dir_prepare(const char *storage_dir)
-{
-	char db[256];
-	char dbo[256];
-
-	sprintf(db, "rm -rf %s", storage_dir);
-	sprintf(dbo, "%s/o", storage_dir);
-
-        return system(db)
-		?: mkdir(storage_dir, 0700)
-		?: mkdir(dbo, 0700);
-}
-
-M0_INTERNAL int m0_dbenv_init(struct m0_dbenv *env, const char *storage_dir,
+int m0_dbenv_init(struct m0_dbenv *env, const char *storage_dir,
 			      uint64_t flags)
 {
-        struct m0_stob_id stob_id = { .si_bits = M0_UINT128(0, 42) };
-        int               rc;
-
+	/* XXX storage dir isn't used */
 	env->d_i = (struct m0_dbenv_impl) {
 		.d_dom	    = &_db_dom,
-		.d_seg      = &_db_seg,
+		.d_seg      = &env->d_i.d_ut_seg.bus_seg,
 		.d_dom_cfg  = &_db_cfg,
 		.d_sm_group = &_db_sm_group,
 	};
 
-	rc = access(storage_dir, 0700);
-	if (rc == 0) { /* db exists */
-		M0_IMPOSSIBLE("not implemented yet");
-	} else {
-		rc = dbenv_dir_prepare(storage_dir) ?:
-			m0_linux_stob_domain_locate(storage_dir,
-						    &env->d_i.d_stob_dom) ?:
-			m0_stob_create_helper(env->d_i.d_stob_dom, (void*)1,
-					      &stob_id, &_db_seg.bs_stob);
-		if (rc != 0)
-			return rc;
-
-		m0_be_seg_init(env->d_i.d_seg, env->d_i.d_seg->bs_stob,
-			       env->d_i.d_dom);
-		rc = m0_be_seg_create(env->d_i.d_seg, 1 << 26) ?:
-			m0_be_seg_open(env->d_i.d_seg);
-	}
+	m0_be_ut_seg_init(&env->d_i.d_ut_seg, NULL /* XXX */,
+			  0x1000000 /* 16MiB */);
 
-	return rc;
+	return 0;
 }
 
-M0_INTERNAL void m0_dbenv_fini(struct m0_dbenv *env)
+void m0_dbenv_fini(struct m0_dbenv *env)
 {
-        m0_be_seg_close(env->d_i.d_seg);
-	m0_be_seg_destroy(env->d_i.d_seg);
-        m0_be_seg_fini(env->d_i.d_seg);
-	m0_stob_put(env->d_i.d_seg->bs_stob);
-
-	env->d_i.d_stob_dom->sd_ops->sdo_fini(env->d_i.d_stob_dom);
+	m0_be_ut_seg_fini(&env->d_i.d_ut_seg);
 }
 
 M0_INTERNAL int m0_dbenv_sync(struct m0_dbenv *env)
diff --git a/db/db_impl.h b/db/db_impl.h
index 31bcdcb..c94db00 100644
--- a/db/db_impl.h
+++ b/db/db_impl.h
@@ -27,6 +27,8 @@
 #include "lib/thread.h"
 #include "sm/sm.h"
 
+#include "be/ut/helper.h"	/* m0_be_ut_seg */
+
 struct m0_be_domain;
 struct m0_be_domain_cfg;
 
@@ -46,8 +48,7 @@ struct m0_dbenv_impl {
         struct m0_sm_group      *d_sm_group;
 	/** Segment which is used to implement db storage */
 	struct m0_be_seg        *d_seg;
-	/** Pointer to stob domain */
-	struct m0_stob_domain   *d_stob_dom;
+	struct m0_be_ut_seg	 d_ut_seg;	/* XXX temporary */
 
 #if 0 /* XXX: move from mero/ut/ast_thread.c */
 	/** Thread for asynchronous environment related work. */
diff --git a/ut/Makefile.sub b/ut/Makefile.sub
index 7b37f7a..f9f4383 100644
--- a/ut/Makefile.sub
+++ b/ut/Makefile.sub
@@ -1,6 +1,4 @@
-ut_libmero_ut_la_SOURCES += ut/ast_thread.c \
-                            ut/ast_thread.h \
-                            ut/be.c \
+ut_libmero_ut_la_SOURCES += ut/be.c \
                             ut/be.h \
                             ut/cs_fop_foms.c \
                             ut/cs_fop_foms.h \
@@ -13,6 +11,8 @@ ut_libmero_ut_la_SOURCES += ut/ast_thread.c \
                             ut/ut_rpc_machine.h \
                             ut/ut_rpc_machine.c
 
+mero_libmero_la_SOURCES += ut/ast_thread.c
+
 XC_FILES   += ut/cs_fop_foms_xc.h
 
 CLEANFILES += ut/cs_fop_foms_xc.h \
-- 
1.8.3.2

