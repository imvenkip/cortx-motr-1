From 75d13b2284006e1e111f6fd577524468ac3ac33f Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Wed, 21 Aug 2013 17:57:45 +0300
Subject: [PATCH 33/34] db: XXX work in progress

---
 db/ut/db.c   |  6 ++++++
 mero/setup.c | 13 +++++++++++--
 reqh/reqh.c  | 22 ++++++++++++++++++++++
 3 files changed, 39 insertions(+), 2 deletions(-)

diff --git a/db/ut/db.c b/db/ut/db.c
index 647a3be..f95cc89 100644
--- a/db/ut/db.c
+++ b/db/ut/db.c
@@ -96,7 +96,11 @@ static void test_table_create(void)
 	struct m0_dbenv db;
 	struct m0_table table;
 	int             result;
+	struct m0_reqh *reqh;
 
+	reqh = m0_be_ut_reqh_get();
+
+	M0_SET0(&db);
 	result = m0_dbenv_init(&db, db_name, 0);
 	M0_UT_ASSERT(result == 0);
 
@@ -105,6 +109,8 @@ static void test_table_create(void)
 
 	m0_table_fini(&table);
 	m0_dbenv_fini(&db);
+
+	m0_be_ut_reqh_put(reqh);
 }
 
 static void test_lookup(void)
diff --git a/mero/setup.c b/mero/setup.c
index a0da064..8523461 100644
--- a/mero/setup.c
+++ b/mero/setup.c
@@ -1040,7 +1040,8 @@ cs_service_init(const char *name, struct m0_reqh_context *rctx,
 	m0_reqh_service_init(service, reqh, uuid);
 
 	/** @todo Remove the USE_MGMT_STARTUP macro later */
-#define USE_MGMT_STARTUP 1
+	/** XXX ??? */
+#define USE_MGMT_STARTUP 0
 #if USE_MGMT_STARTUP
 	rc = m0_mgmt_reqh_service_start(service);
 #else
@@ -1212,7 +1213,8 @@ static void cs_net_domains_fini(struct m0_mero *cctx)
 		m0_net_xprt_fini(xprts[idx]);
 }
 
-static int cs_storage_prepare(struct m0_reqh_context *rctx)
+// XXX_DB_BE static int cs_storage_prepare(struct m0_reqh_context *rctx)
+int cs_storage_prepare(struct m0_reqh_context *rctx)
 {
 	struct m0_db_tx tx;
 	int rc;
@@ -1337,6 +1339,7 @@ static int cs_request_handler_start(struct m0_reqh_context *rctx)
 
 	rctx->rc_cdom_id.id = ++cdom_id;
 
+#if 0
 	/** Mkfs cob domain before using it. */
 	if (rctx->rc_prepare_storage) {
 		/*
@@ -1369,6 +1372,12 @@ static int cs_request_handler_start(struct m0_reqh_context *rctx)
 		M0_LOG(M0_ERROR, "m0_fol_init");
 		goto cleanup_mdstore;
 	}
+#else
+	if (false) {
+		goto cleanup_mdstore;
+		goto cleanup_addb_stob;
+	}
+#endif
 
 	rc = M0_REQH_INIT(&rctx->rc_reqh,
 			  .rhia_dtm       = NULL,
diff --git a/reqh/reqh.c b/reqh/reqh.c
index f4c7bd0..705dcb8 100644
--- a/reqh/reqh.c
+++ b/reqh/reqh.c
@@ -147,6 +147,7 @@ m0_reqh_init(struct m0_reqh *reqh, const struct m0_reqh_init_args *reqh_args)
 
 	m0_ha_domain_init(&reqh->rh_hadom, M0_HA_EPOCH_NONE);
 
+#ifdef __KERNEL__
 	rc = m0_layout_domain_init(&reqh->rh_ldom, reqh->rh_dbenv);
 	if (rc != 0)
 		return rc;
@@ -154,6 +155,10 @@ m0_reqh_init(struct m0_reqh *reqh, const struct m0_reqh_init_args *reqh_args)
 	rc = m0_layout_standard_types_register(&reqh->rh_ldom);
 	if (rc != 0)
 		goto layout_dom_fini;
+#else
+	if (false)
+		goto layout_dom_fini;
+#endif
 
 	if (reqh->rh_fol != NULL)
 		reqh->rh_fol->f_reqh = reqh;
@@ -211,6 +216,7 @@ m0_reqh_init(struct m0_reqh *reqh, const struct m0_reqh_init_args *reqh_args)
 		   &reqh->rh_sm_grp);
 	m0_reqh_lockers_init(reqh);
 
+
 	M0_POST(m0_reqh_invariant(reqh));
 	return 0;
 
@@ -232,6 +238,9 @@ M0_INTERNAL void m0_reqh_fini(struct m0_reqh *reqh)
 	m0_addb_ctx_fini(&reqh->rh_addb_ctx);
 	m0_addb_mc_fini(&reqh->rh_addb_mc);
         m0_fom_domain_fini(&reqh->rh_fom_dom);
+#ifndef __KERNEL__
+	m0_db_domain_fini();
+#endif
         m0_reqh_svc_tlist_fini(&reqh->rh_services);
         m0_reqh_rpc_mach_tlist_fini(&reqh->rh_rpc_machines);
 	m0_reqh_lockers_fini(reqh);
@@ -492,6 +501,19 @@ M0_INTERNAL void m0_reqh_start(struct m0_reqh *reqh)
 	reqh_state_set(reqh, M0_REQH_ST_NORMAL);
 
         m0_rwlock_write_unlock(&reqh->rh_rwlock);
+
+#ifndef __KERNEL__
+	int rc;
+
+	rc = m0_db_domain_init(reqh);	/* XXX */
+	M0_ASSERT(rc == 0);		/* XXX */
+
+	rc = m0_layout_domain_init(&reqh->rh_ldom, reqh->rh_dbenv);
+	M0_ASSERT(rc == 0);		/* XXX */
+
+	rc = m0_layout_standard_types_register(&reqh->rh_ldom);
+	M0_ASSERT(rc == 0);		/* XXX */
+#endif
 }
 
 M0_INTERNAL int m0_reqh_mgmt_service_start(struct m0_reqh *reqh)
-- 
1.8.3.2

