From 5ef83ef09a2bfa646176d75ca09317e517052b3c Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Wed, 21 Aug 2013 14:31:47 +0300
Subject: [PATCH 21/34] ut/ast_thread: resolved collisions in altogether build

---
 ut/ast_thread.c | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/ut/ast_thread.c b/ut/ast_thread.c
index 77b23a9..78a5ac8 100644
--- a/ut/ast_thread.c
+++ b/ut/ast_thread.c
@@ -36,13 +36,13 @@ static struct {
 	bool                run;
 	struct m0_sm_group *grp;
 	struct m0_thread    thread;
-} g_ast;
+} g_ast2;
 
-static void ast_thread(struct m0_sm_group *grp)
+static void ast_thread2(struct m0_sm_group *grp)
 {
 	struct m0_sm_group *g = grp;
 
-	while (g_ast.run) {
+	while (g_ast2.run) {
 		m0_chan_wait(&g->s_clink);
 		m0_sm_group_lock(g);
 		m0_sm_asts_run(g);
@@ -53,18 +53,18 @@ static void ast_thread(struct m0_sm_group *grp)
 M0_INTERNAL int m0_ut_ast_thread_start(struct m0_sm_group *grp)
 {
 	m0_sm_group_init(grp);
-	g_ast.grp = grp;
-	g_ast.run = true;
-	return M0_THREAD_INIT(&g_ast.thread, struct m0_sm_group *, NULL,
-			      &ast_thread, grp, "ut_ast_thread");
+	g_ast2.grp = grp;
+	g_ast2.run = true;
+	return M0_THREAD_INIT(&g_ast2.thread, struct m0_sm_group *, NULL,
+			      &ast_thread2, grp, "ut_ast_thread");
 }
 
 M0_INTERNAL void m0_ut_ast_thread_stop(void)
 {
-	g_ast.run = false;
-	m0_clink_signal(&g_ast.grp->s_clink);
-	m0_thread_join(&g_ast.thread);
-	m0_sm_group_fini(g_ast.grp);
+	g_ast2.run = false;
+	m0_clink_signal(&g_ast2.grp->s_clink);
+	m0_thread_join(&g_ast2.thread);
+	m0_sm_group_fini(g_ast2.grp);
 }
 
 /** @} end of XXX group */
-- 
1.8.3.2

