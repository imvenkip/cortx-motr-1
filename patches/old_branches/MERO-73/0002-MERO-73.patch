From 1125d5da93e5b7fe316392417bd950e1a02e9fcb Mon Sep 17 00:00:00 2001
From: Mandar Sawant <mandar_sawant@xyratex.com>
Date: Fri, 14 Mar 2014 12:55:31 +0530
Subject: [PATCH 2/2] MERO-73, - Separate out m0_cm_sw_store_fini() from
 m0_cm_prepare_done() to handle finalisation   of un-initialised transaction
 in case of sns repaire re-start.

---
 cm/cm.h              | 1 +
 cm/sw.h              | 1 -
 conf/db.c            | 1 +
 sns/cm/trigger_fom.c | 6 +++---
 4 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/cm/cm.h b/cm/cm.h
index 8bfd240..674c0e7 100644
--- a/cm/cm.h
+++ b/cm/cm.h
@@ -377,6 +377,7 @@ M0_INTERNAL int m0_cm_prepare_done(struct m0_cm *cm);
 M0_INTERNAL int m0_cm_prepare_sw_store_init(struct m0_cm *cm,
 					    struct m0_sm_group *grp);
 M0_INTERNAL int m0_cm_prepare_sw_store_commit(struct m0_cm *cm);
+M0_INTERNAL void m0_cm_prepare_sw_store_fini(struct m0_cm *cm);
 M0_INTERNAL int m0_cm_ready(struct m0_cm *cm);
 
 M0_INTERNAL bool m0_cm_is_ready(struct m0_cm *cm);
diff --git a/cm/sw.h b/cm/sw.h
index fe14eb3..4e72d75 100644
--- a/cm/sw.h
+++ b/cm/sw.h
@@ -89,7 +89,6 @@ M0_INTERNAL int m0_cm_sw_remote_update(struct m0_cm *cm);
  * @param grp This group is used for sliding window BE transactions.
  */
 M0_INTERNAL int m0_cm_sw_store_init(struct m0_cm *cm, struct m0_sm_group *grp);
-M0_INTERNAL void m0_cm_sw_store_fini(struct m0_cm *cm);
 
 /**
  * Prepares sliding window persistent store for this copy machine.
diff --git a/conf/db.c b/conf/db.c
index 73bb3a3..1582e86 100644
--- a/conf/db.c
+++ b/conf/db.c
@@ -36,6 +36,7 @@
 #include "lib/misc.h"        /* M0_SET0 */
 
 static int confdb_objs_count(struct m0_be_btree *btree, size_t *result);
+static void confdb_table_fini(struct m0_be_seg *seg);
 
 /* ------------------------------------------------------------------
  * xcoding: m0_confx_obj <--> raw buffer
diff --git a/sns/cm/trigger_fom.c b/sns/cm/trigger_fom.c
index c3298cb..3b78947 100644
--- a/sns/cm/trigger_fom.c
+++ b/sns/cm/trigger_fom.c
@@ -252,12 +252,12 @@ static int trigger_fom_tick(struct m0_fom *fom)
 				M0_LOG(M0_DEBUG, "trigger: prepare init wait");
 				break;
 			case TPH_PREPARE_DONE:
-				enum me_be_tx_state state = m0_be_tx_state(tx);
 				tx = &cm->cm_sw_update.swu_tx;
-				if (M0_IN(state, (M0_BTS_FAILED, M0_BTS_DONE))) {
+				if (M0_IN(m0_be_tx_state(tx), (M0_BTS_FAILED,
+							       M0_BTS_DONE))) {
 					rc = tx->t_sm.sm_rc;
 					m0_cm_prepare_sw_store_fini(cm);
-					if (state == M0_BTS_FAILED)
+					if (m0_be_tx_state(tx) == M0_BTS_FAILED)
 						goto fail;
 				}
 				if (m0_be_tx_state(tx) != M0_BTS_PREPARE &&
-- 
1.8.3.2

