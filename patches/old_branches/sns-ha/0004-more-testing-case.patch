From 6c43d80ff85148131fda6ab4018607b1954b41dd Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Thu, 20 Jun 2013 23:01:47 +0800
Subject: [PATCH 04/14] more testing case. more checking for user input.

---
 m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh | 79 +++++++++++++++++++++++++++++++
 pool/pool_foms.c                          |  8 +---
 pool/pool_trigger.c                       | 41 ++++++++++++----
 3 files changed, 114 insertions(+), 14 deletions(-)

diff --git a/m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh b/m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh
index ad3f988..7a646ab 100755
--- a/m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh
+++ b/m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh
@@ -24,6 +24,85 @@ sns_repair_test()
 		IOSEP="$IOSEP -S ${lnet_nid}:${EP[$i]}"
 	done
 
+####### Query
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Q -I 1
+                         -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $trigger
+
+	if ! $trigger ; then
+		echo "m0poolmach failed"
+		rc=1
+	else
+		echo "m0poolmach done."
+		rc=0
+	fi
+
+####### Set
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O S -I 1 -s 1
+                         -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $trigger
+
+	if ! $trigger ; then
+		echo "m0poolmach failed"
+		rc=1
+	else
+		echo "m0poolmach done."
+		rc=0
+	fi
+
+####### Query again
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Q -I 1
+                         -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $trigger
+
+	if ! $trigger ; then
+		echo "m0poolmach failed"
+		rc=1
+	else
+		echo "m0poolmach done."
+		rc=0
+	fi
+
+####### Set again. This set request should get error
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O S -I 1 -s 0
+                         -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $trigger
+
+	if ! $trigger ; then
+		echo "m0poolmach failed"
+		rc=1
+	else
+		echo "m0poolmach done."
+		rc=0
+	fi
+
+####### Set again. This set request should get error
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O S -I 1 -s 1
+                         -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $trigger
+
+	if ! $trigger ; then
+		echo "m0poolmach failed"
+		rc=1
+	else
+		echo "m0poolmach done."
+		rc=0
+	fi
+
+####### Set again. This set request should get error
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O S -I 1 -s 2
+                         -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $trigger
+
+	if ! $trigger ; then
+		echo "m0poolmach failed"
+		rc=1
+	else
+		echo "m0poolmach done."
+		rc=0
+	fi
+
+####### Query again
 	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Q -I 1
                          -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
 	echo $trigger
diff --git a/pool/pool_foms.c b/pool/pool_foms.c
index 75eb583..53ac228 100644
--- a/pool/pool_foms.c
+++ b/pool/pool_foms.c
@@ -89,13 +89,10 @@ static int poolmach_fom_tick(struct m0_fom *fom)
 
 		query_fop = m0_fop_data(req_fop);
 		query_fop_rep = m0_fop_data(rep_fop);
-		M0_LOG(M0_FATAL, "Query type=%lu, index=%lu",
+		M0_LOG(M0_DEBUG, "Query type=%lu, index=%lu",
 				 (unsigned long)query_fop->fpq_type,
 				 (unsigned long)query_fop->fpq_index);
 
-		//query_fop_rep->fpq_rc    = 123;
-		//query_fop_rep->fpq_state = 456;
-
 		query_fop_rep->fpq_rc =
 			m0_poolmach_device_state(poolmach,
 						 query_fop->fpq_index,
@@ -107,12 +104,11 @@ static int poolmach_fom_tick(struct m0_fom *fom)
 
 		set_fop = m0_fop_data(req_fop);
 		set_fop_rep = m0_fop_data(rep_fop);
-		M0_LOG(M0_FATAL, "Set type=%lu, index=%lu, state=%lu",
+		M0_LOG(M0_DEBUG, "Set type=%lu, index=%lu, state=%lu",
 				 (unsigned long)set_fop->fps_type,
 				 (unsigned long)set_fop->fps_index,
 				 (unsigned long)set_fop->fps_state);
 
-		//set_fop_rep->fps_rc = 789;
 		M0_SET0(&pme);
 		pme.pe_type  = set_fop->fps_type;
 		pme.pe_index = set_fop->fps_index;
diff --git a/pool/pool_trigger.c b/pool/pool_trigger.c
index 67a6919..bf72d9c 100644
--- a/pool/pool_trigger.c
+++ b/pool/pool_trigger.c
@@ -36,7 +36,7 @@
 #include "pool/pool_fops.h"
 
 
-#define RPC_ASYNC_MODE
+/*#define RPC_ASYNC_MODE*/
 
 struct m0_net_domain     cl_ndom;
 struct m0_dbenv          cl_dbenv;
@@ -189,16 +189,30 @@ const struct m0_rpc_item_ops poolmach_fop_rpc_item_ops = {
 	.rio_replied = trigger_rpc_item_reply_cb,
 };
 
+void print_help()
+{
+	fprintf(stdout,
+"-O Q(uery) or S(et): Query device state or Set device state\n"
+"-I device_index\n"
+"[-s device_state]: if Set, the device state. The states supported are:\n"
+"    0:    M0_PNDS_ONLINE\n"
+"    1:    M0_PNDS_FAILED\n"
+"    2:    M0_PNDS_OFFLINE\n"
+"-C Client_end_point\n"
+"-S Server_end_point [-S Server_end_point ]: max number is %d\n", MAX_SERVERS);
+}
 
 int main(int argc, char *argv[])
 {
 	struct rpc_ctx        *ctxs;
 	struct m0_clink        poolmach_clink;
-	const char            *op;
-	uint64_t               device_index;
+	const char            *op = NULL;
+	uint32_t               device_index = -1;
+	uint32_t               device_state = -1;
 	m0_time_t              start;
 	m0_time_t              delta;
 	int                    rc;
+	int                    rc2 = 0;
 	int                    i;
 
 	rc = M0_GETOPTS("poolmach", argc, argv,
@@ -210,11 +224,12 @@ int main(int argc, char *argv[])
 						    op[0] != 'q' &&
 						    op[0] != 'S' &&
 						    op[0] != 's')
-							rc = -EINVAL;
+							rc2 = -EINVAL;
 					}
 				     )
 				    ),
-			M0_FORMATARG('I', "device index", "%lu", &device_index),
+			M0_FORMATARG('I', "device index", "%u", &device_index),
+			M0_FORMATARG('s', "device state", "%u", &device_state),
 			M0_STRINGARG('C', "Client endpoint",
 				     LAMBDA(void, (const char *str) {
 						cl_ep_addr = str;
@@ -226,13 +241,23 @@ int main(int argc, char *argv[])
 						srv_ep_addr[srv_cnt] = str;
 						++srv_cnt;
 						if (srv_cnt >= MAX_SERVERS)
-							rc = -E2BIG;
+							rc2 = -E2BIG;
 					}
 				     )
 				    ),
 			);
-	if (rc != 0)
+	if (rc != 0 || rc2 != 0) {
+		print_help();
 		return rc;
+	}
+
+	if (op == NULL         || device_index == -1 ||
+	    cl_ep_addr == NULL || srv_cnt == 0       ||
+	    ((op[0] == 'S' || op[0] == 's') &&
+	     (device_state < 0 || device_state > 2))  ) {
+		print_help();
+		return -EINVAL;
+	}
 
 	rc = m0_init();
 	if (rc != 0)
@@ -288,7 +313,7 @@ int main(int argc, char *argv[])
 			set_fop = m0_fop_data(req);
 			set_fop->fps_type  = 1;
 			set_fop->fps_index = device_index;
-			set_fop->fps_state = 0;
+			set_fop->fps_state = device_state;
 		}
 
 		fprintf(stderr, "sending/posting to %s\n", srv_ep_addr[i]);
-- 
1.8.3.2

