From 6167d7ec73eb0c64b087f90772bdc38898346519 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Mon, 24 Jun 2013 16:31:07 +0800
Subject: [PATCH 05/14] add type CLI option.

---
 m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh | 14 +++++++-------
 pool/pool_foms.c                          |  5 ++++-
 pool/pool_trigger.c                       | 29 +++++++++++++++++++++++++----
 3 files changed, 36 insertions(+), 12 deletions(-)

diff --git a/m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh b/m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh
index 7a646ab..170e203 100755
--- a/m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh
+++ b/m0t1fs/linux_kernel/st/m0t1fs_poolmach.sh
@@ -25,7 +25,7 @@ sns_repair_test()
 	done
 
 ####### Query
-	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Q -I 1
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Query -T device -I 1
                          -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
 	echo $trigger
 
@@ -38,7 +38,7 @@ sns_repair_test()
 	fi
 
 ####### Set
-	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O S -I 1 -s 1
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Set -T device -I 1 -s 1
                          -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
 	echo $trigger
 
@@ -51,7 +51,7 @@ sns_repair_test()
 	fi
 
 ####### Query again
-	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Q -I 1
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Query -T device -I 1
                          -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
 	echo $trigger
 
@@ -64,7 +64,7 @@ sns_repair_test()
 	fi
 
 ####### Set again. This set request should get error
-	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O S -I 1 -s 0
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Set -T device -I 1 -s 0
                          -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
 	echo $trigger
 
@@ -77,7 +77,7 @@ sns_repair_test()
 	fi
 
 ####### Set again. This set request should get error
-	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O S -I 1 -s 1
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Set -T device -I 1 -s 1
                          -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
 	echo $trigger
 
@@ -90,7 +90,7 @@ sns_repair_test()
 	fi
 
 ####### Set again. This set request should get error
-	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O S -I 1 -s 2
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Set -T device -I 1 -s 2
                          -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
 	echo $trigger
 
@@ -103,7 +103,7 @@ sns_repair_test()
 	fi
 
 ####### Query again
-	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Q -I 1
+	trigger="$MERO_CORE_ROOT/pool/m0poolmach -O Query -T device -I 1
                          -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
 	echo $trigger
 
diff --git a/pool/pool_foms.c b/pool/pool_foms.c
index 53ac228..e514118 100644
--- a/pool/pool_foms.c
+++ b/pool/pool_foms.c
@@ -93,7 +93,10 @@ static int poolmach_fom_tick(struct m0_fom *fom)
 				 (unsigned long)query_fop->fpq_type,
 				 (unsigned long)query_fop->fpq_index);
 
-		query_fop_rep->fpq_rc =
+		query_fop_rep->fpq_rc = query_fop->fpq_type == M0_POOL_NODE?
+			m0_poolmach_node_state(poolmach,
+					       query_fop->fpq_index,
+					       &query_fop_rep->fpq_state):
 			m0_poolmach_device_state(poolmach,
 						 query_fop->fpq_index,
 						 &query_fop_rep->fpq_state);
diff --git a/pool/pool_trigger.c b/pool/pool_trigger.c
index bf72d9c..1d69dd5 100644
--- a/pool/pool_trigger.c
+++ b/pool/pool_trigger.c
@@ -33,6 +33,7 @@
 #include "rpc/rpclib.h"
 #include "lib/getopts.h"
 #include "mero/init.h"
+#include "pool/pool.h"
 #include "pool/pool_fops.h"
 
 
@@ -193,7 +194,8 @@ void print_help()
 {
 	fprintf(stdout,
 "-O Q(uery) or S(et): Query device state or Set device state\n"
-"-I device_index\n"
+"-T (D)evice or (N)ode\n"
+"-I device_index or node_index\n"
 "[-s device_state]: if Set, the device state. The states supported are:\n"
 "    0:    M0_PNDS_ONLINE\n"
 "    1:    M0_PNDS_FAILED\n"
@@ -207,6 +209,7 @@ int main(int argc, char *argv[])
 	struct rpc_ctx        *ctxs;
 	struct m0_clink        poolmach_clink;
 	const char            *op = NULL;
+	const char            *type = NULL;
 	uint32_t               device_index = -1;
 	uint32_t               device_state = -1;
 	m0_time_t              start;
@@ -228,6 +231,18 @@ int main(int argc, char *argv[])
 					}
 				     )
 				    ),
+			M0_STRINGARG('T',
+				     "D(evice) or N(ode)",
+				     LAMBDA(void, (const char *str) {
+						type = str;
+						if (type[0] != 'D' &&
+						    type[0] != 'd' &&
+						    type[0] != 'N' &&
+						    type[0] != 'n')
+							rc2 = -EINVAL;
+					}
+				     )
+				    ),
 			M0_FORMATARG('I', "device index", "%u", &device_index),
 			M0_FORMATARG('s', "device state", "%u", &device_state),
 			M0_STRINGARG('C', "Client endpoint",
@@ -251,7 +266,7 @@ int main(int argc, char *argv[])
 		return rc;
 	}
 
-	if (op == NULL         || device_index == -1 ||
+	if (op == NULL         || type == NULL       || device_index == -1 ||
 	    cl_ep_addr == NULL || srv_cnt == 0       ||
 	    ((op[0] == 'S' || op[0] == 's') &&
 	     (device_state < 0 || device_state > 2))  ) {
@@ -303,7 +318,10 @@ int main(int argc, char *argv[])
 			if (req == NULL)
 				return -ENOMEM;
 			query_fop = m0_fop_data(req);
-			query_fop->fpq_type  = 1;
+			if (type[0] == 'N' || type[0] == 'n')
+				query_fop->fpq_type  = M0_POOL_NODE;
+			else
+				query_fop->fpq_type  = M0_POOL_DEVICE;
 			query_fop->fpq_index = device_index;
 		} else {
 			struct m0_fop_poolmach_set   *set_fop;
@@ -311,7 +329,10 @@ int main(int argc, char *argv[])
 			if (req == NULL)
 				return -ENOMEM;
 			set_fop = m0_fop_data(req);
-			set_fop->fps_type  = 1;
+			if (type[0] == 'N' || type[0] == 'n')
+				set_fop->fps_type  = M0_POOL_NODE;
+			else
+				set_fop->fps_type  = M0_POOL_DEVICE;
 			set_fop->fps_index = device_index;
 			set_fop->fps_state = device_state;
 		}
-- 
1.8.3.2

