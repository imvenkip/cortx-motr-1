From 8a0b8f15241ecbb08be4eacae06817ece4765142 Mon Sep 17 00:00:00 2001
From: Amit Jambure <Amit_Jambure@xyratex.com>
Date: Mon, 29 Apr 2013 13:12:47 +0530
Subject: [PATCH 4/5] rpc: Get rid of old implementation of m0_uuid_generate().

---
 ioservice/io_service.c |  7 ++++---
 lib/uuid.c             | 15 ---------------
 lib/uuid.h             |  3 ---
 reqh/reqh_service.c    |  3 +--
 reqh/reqh_service.h    |  8 --------
 rpc/conn.c             |  2 +-
 rpc/rpc_internal.h     |  2 ++
 rpc/session.c          |  2 +-
 rpc/session_utils.c    | 15 +++++++++++++++
 9 files changed, 24 insertions(+), 33 deletions(-)

diff --git a/ioservice/io_service.c b/ioservice/io_service.c
index 8563f92..5d81147 100644
--- a/ioservice/io_service.c
+++ b/ioservice/io_service.c
@@ -448,14 +448,15 @@ static int ios_start(struct m0_reqh_service *service)
 {
 	int			   rc;
 	struct m0_reqh_io_service *serv_obj;
+	static uint64_t            cdom_id = 37;   /* XXX temporary */
 
 	M0_PRE(service != NULL);
 	M0_PRE(m0_reqh_lockers_is_empty(service->rs_reqh, ios_cdom_key));
 
 	serv_obj = container_of(service, struct m0_reqh_io_service, rios_gen);
-
-	rc = m0_ios_cdom_get(service->rs_reqh, &serv_obj->rios_cdom,
-			     service->rs_uuid);
+	/** @todo what should be cob dom id? */
+	cdom_id = m0_rnd(1ULL << 47, &cdom_id);
+	rc = m0_ios_cdom_get(service->rs_reqh, &serv_obj->rios_cdom, cdom_id);
 	if (rc != 0)
 		return rc;
 
diff --git a/lib/uuid.c b/lib/uuid.c
index 43f6818..7e95b23 100644
--- a/lib/uuid.c
+++ b/lib/uuid.c
@@ -116,21 +116,6 @@ M0_INTERNAL void m0_uuid_format(const struct m0_uint128 *val,
 	sprintf(buf, fmt, h1, h2, h3, h4, h5);
 }
 
-M0_INTERNAL uint64_t m0_uuid_generate(void)
-{
-	static struct m0_atomic64 cnt;
-	uint64_t                  uuid;
-	uint64_t                  millisec;
-
-	do {
-		m0_atomic64_inc(&cnt);
-		millisec = m0_time_nanoseconds(m0_time_now()) * 1000000;
-		uuid = (millisec << 10) | (m0_atomic64_get(&cnt) & 0x3FF);
-	} while (uuid == 0 || uuid == UINT64_MAX);
-
-	return uuid;
-}
-
 /*
  *  Local variables:
  *  c-indentation-style: "K&R"
diff --git a/lib/uuid.h b/lib/uuid.h
index 0f535df..3f9398e 100644
--- a/lib/uuid.h
+++ b/lib/uuid.h
@@ -55,9 +55,6 @@ M0_INTERNAL int m0_uuid_parse(const char *str, struct m0_uint128 *val);
 M0_INTERNAL void m0_uuid_format(const struct m0_uint128 *val,
 				char *buf, size_t len);
 
-/** Generate unique UUID. */
-M0_INTERNAL uint64_t m0_uuid_generate(void);
-
 M0_INTERNAL void m0_uuid_generate2(struct m0_uint128 *u);
 
 /** @} end uuid group */
diff --git a/reqh/reqh_service.c b/reqh/reqh_service.c
index ba8448b..fd954f7 100644
--- a/reqh/reqh_service.c
+++ b/reqh/reqh_service.c
@@ -110,7 +110,7 @@ M0_INTERNAL bool m0_reqh_service_invariant(const struct m0_reqh_service *svc)
 	svc->rs_type != NULL && svc->rs_ops != NULL &&
 	ergo(M0_IN(svc->rs_sm.sm_state, (M0_RST_INITIALISED, M0_RST_STARTING,
 					 M0_RST_STARTED, M0_RST_STOPPING)),
-	     svc->rs_uuid != 0 && svc->rs_reqh != NULL) &&
+	     svc->rs_reqh != NULL) &&
 	ergo(M0_IN(svc->rs_sm.sm_state, (M0_RST_STARTED, M0_RST_STOPPING)),
 	     m0_reqh_svc_tlist_contains(&svc->rs_reqh->rh_services, svc) ||
 	     svc->rs_reqh->rh_mgmt_svc == svc);
@@ -296,7 +296,6 @@ M0_INTERNAL void m0_reqh_service_init(struct m0_reqh_service *service,
 
 	if (uuid != NULL)
 		service->rs_service_uuid = *uuid;
-	service->rs_uuid = m0_uuid_generate();
 	service->rs_reqh = reqh;
 	m0_reqh_svc_tlink_init(service);
 	m0_mutex_init(&service->rs_mutex);
diff --git a/reqh/reqh_service.h b/reqh/reqh_service.h
index 7d9dfc2..ec7be2b 100644
--- a/reqh/reqh_service.h
+++ b/reqh/reqh_service.h
@@ -210,14 +210,6 @@ struct m0_reqh_service {
 	struct m0_uint128                 rs_service_uuid;
 
 	/**
-	   @deprecated Use rs_service_uuid instead.
-	   Service id that should be unique throughout the cluster.
-	   This must be a 128 bit number, but is currently used as a 64
-	   bit key by IO service in m0_ios_cdom_get().
-	 */
-	uint64_t                          rs_uuid;
-
-	/**
 	   Service type specific structure to hold service specific
 	   implementations of its operations.
 	   This can be used to initialise service specific objects such as fops.
diff --git a/rpc/conn.c b/rpc/conn.c
index cf57a52..5bedea0 100644
--- a/rpc/conn.c
+++ b/rpc/conn.c
@@ -992,7 +992,7 @@ M0_INTERNAL int m0_rpc_rcv_conn_establish(struct m0_rpc_conn *conn)
 	conn_state_set(conn, M0_RPC_CONN_CONNECTING);
 	rc = m0_db_tx_init(&tx, machine->rm_dom->cd_dbenv, 0);
 	if (rc == 0) {
-		sender_id = m0_uuid_generate();
+		sender_id = m0_rpc_id_generate();
 		rc = conn_persistent_state_attach(conn, sender_id, &tx);
 		if (rc == 0)
 			rc = m0_db_tx_commit(&tx);
diff --git a/rpc/rpc_internal.h b/rpc/rpc_internal.h
index 82f08a7..d1e30eb 100644
--- a/rpc/rpc_internal.h
+++ b/rpc/rpc_internal.h
@@ -151,6 +151,8 @@ M0_INTERNAL bool m0_rpc_item_is_control_msg(const struct m0_rpc_item *item);
 M0_INTERNAL void m0_rpc_oneway_item_post_locked(const struct m0_rpc_conn *conn,
 						struct m0_rpc_item *item);
 
+M0_INTERNAL uint64_t m0_rpc_id_generate(void);
+
 M0_TL_DESCR_DECLARE(item_source, M0_EXTERN);
 M0_TL_DECLARE(item_source, M0_INTERNAL, struct m0_rpc_item_source);
 
diff --git a/rpc/session.c b/rpc/session.c
index b48d2a7..659a58a 100644
--- a/rpc/session.c
+++ b/rpc/session.c
@@ -996,7 +996,7 @@ M0_INTERNAL uint64_t session_id_allocate(void)
 	M0_ENTRY();
 
 	do {
-		session_id = m0_uuid_generate();
+		session_id = m0_rpc_id_generate();
 	} while (session_id <= SESSION_ID_MIN &&
 		 session_id >= SESSION_ID_MAX);
 
diff --git a/rpc/session_utils.c b/rpc/session_utils.c
index a6bde17..409d9c1 100644
--- a/rpc/session_utils.c
+++ b/rpc/session_utils.c
@@ -111,6 +111,21 @@ static struct m0_uint128 stob_id_alloc(void)
         return id;
 }
 
+M0_INTERNAL uint64_t m0_rpc_id_generate(void)
+{
+	static struct m0_atomic64 cnt;
+	uint64_t                  id;
+	uint64_t                  millisec;
+
+	do {
+		m0_atomic64_inc(&cnt);
+		millisec = m0_time_nanoseconds(m0_time_now()) * 1000000;
+		id = (millisec << 10) | (m0_atomic64_get(&cnt) & 0x3FF);
+	} while (id == 0 || id == UINT64_MAX);
+
+	return id;
+}
+
 M0_INTERNAL int m0_rpc_cob_create_helper(struct m0_cob_domain *dom,
 					 const struct m0_cob *pcob,
 					 const char *name,
-- 
1.8.3.2

