From 2e982b83b73c7a8c5b96936ee89fc1c1412b4bf7 Mon Sep 17 00:00:00 2001
From: Alexander Gattin <alexander_gattin@xyratex.com>
Date: Tue, 11 Jun 2013 19:16:44 +0300
Subject: [PATCH 139/228] be/list: use t_unsafe flag to disable full scanning
 of BE lists in invariant.

---
 be/list.c   | 1 +
 lib/tlist.c | 9 +++++++--
 lib/tlist.h | 2 ++
 3 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/be/list.c b/be/list.c
index a2e8396..b522a37 100644
--- a/be/list.c
+++ b/be/list.c
@@ -37,6 +37,7 @@ m0_be_list_create(const struct m0_tl_descr *d,
 	M0_PRE(m0_be__reg_is_pinned(&M0_BE_REG(list->bl_seg, sizeof *list,
 					       list)));
 	m0_tlist_init(d, &list->bl_list);
+	list->bl_list.t_unsafe = true;  /* BE tlist is usually unsafe. */
 	m0_be_tx_capture(tx, &M0_BE_REG(list->bl_seg, sizeof *list, list));
 }
 
diff --git a/lib/tlist.c b/lib/tlist.c
index 6cf14ea..0ad73c9 100644
--- a/lib/tlist.c
+++ b/lib/tlist.c
@@ -43,6 +43,7 @@ static void *amb(const struct m0_tl_descr *d, struct m0_list_link *link);
 M0_INTERNAL void m0_tlist_init(const struct m0_tl_descr *d, struct m0_tl *list)
 {
 	list->t_magic = d->td_head_magic;
+	list->t_unsafe = false;  /* normally tlist is safe. */
 	m0_list_init(&list->t_head);
 	M0_INVARIANT_EX(m0_tlist_invariant(d, list));
 }
@@ -225,10 +226,14 @@ M0_INTERNAL bool m0_tlist_invariant(const struct m0_tl_descr *d,
 
 	if (list->t_magic != d->td_head_magic)
 		return false;
-	if ((head->ll_next == head) != (head->ll_prev == head))
+	if ((list->t_head.l_head == head) != (list->t_head.l_tail == head))
 		return false;
 
-	for (scan = head->ll_next; scan != head; scan = scan->ll_next) {
+	/* If list isn't completely loaded from STOB, do not scan. */
+	if (list->t_unsafe)
+		return true;
+
+	for (scan = list->t_head.l_head; scan != head; scan = scan->ll_next) {
 		if (scan->ll_next->ll_prev != scan ||
 		    scan->ll_prev->ll_next != scan)
 			return false;
diff --git a/lib/tlist.h b/lib/tlist.h
index 7282d36..59d4306 100644
--- a/lib/tlist.h
+++ b/lib/tlist.h
@@ -253,6 +253,8 @@ struct m0_tl {
 	uint64_t       t_magic;
 	/** Underlying m0_list. */
 	struct m0_list t_head;
+	/** Unsafe flag is set when not all nodes are present in memory. */
+	bool           t_unsafe;
 };
 
 /**
-- 
1.8.3.2

