From f0b7409f6f34d5ea2b5e248950a20c0400ab999b Mon Sep 17 00:00:00 2001
From: Alexander Gattin <alexander_gattin@xyratex.com>
Date: Wed, 29 May 2013 17:00:52 +0300
Subject: [PATCH 045/228] be/seg: use BE_SEG_HEADER_OFFSET

---
 be/seg.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/be/seg.c b/be/seg.c
index 56d4ce0..95077dd 100644
--- a/be/seg.c
+++ b/be/seg.c
@@ -35,7 +35,7 @@
  */
 
 #define BE_SEG_DEFAULT_ADDR   ((void *)0x0708000000000000)
-#define BE_SEG_DEFAULT_OFFSET (0ULL)
+#define BE_SEG_HEADER_OFFSET  (0ULL)
 
 /* "On-disk" header for segment, stored in STOB at zero offset */
 struct be_seg_hdr {
@@ -57,7 +57,7 @@ static void seg_io_prepare(struct m0_be_seg *seg, struct m0_stob_io *io)
 
 	io->si_stob.iv_vec.v_nr    = 1;
 	io->si_stob.iv_vec.v_count = count;
-	io->si_stob.iv_index       = BE_SEG_DEFAULT_OFFSET;
+	io->si_stob.iv_index       = BE_SEG_HEADER_OFFSET;
 }
 
 static void seg_header_prepare(struct m0_be_seg *seg, struct m0_stob_io *io,
@@ -142,7 +142,7 @@ static int stob_io_single_read(void *buf, m0_bcount_t bufsz,
 	size_t             pgsz;
 	m0_bcount_t        rdcnt[1];    /* sectors counts */
 	m0_bcount_t        rdoffs[1];   /* offsets */
-	void              *rdbufpk[1]; /* "packed" addresses */
+	void              *rdbufpk[1];  /* "packed" addresses */
 	struct m0_stob_io  io;
 	struct m0_clink    clink;
 	int                rc;
@@ -199,7 +199,8 @@ int m0_be_seg_open(struct m0_be_seg *seg)
 
 	/* Read segment header from storage. */
 	rc = stob_io_single_read(hdrbuf, sizeof(struct be_seg_hdr),
-				 seg->bs_stob, 0, st_block_shift);
+				 seg->bs_stob, BE_SEG_HEADER_OFFSET,
+				 st_block_shift);
 	if (rc == 0) {
 		seg_addr0 = hdrbuf->bh_addr;
 		seg_size  = hdrbuf->bh_size;
-- 
1.8.3.2

