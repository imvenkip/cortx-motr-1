From 5a772d3fbda79abc2258cda4d881d5d39244cfe6 Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Thu, 20 Jun 2013 19:52:37 +0300
Subject: [PATCH 188/228] be: fixed lock/unlock of op in m0_be_op_tick().

---
 be/be.c     | 5 +----
 be/tx_fom.c | 2 +-
 2 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/be/be.c b/be/be.c
index 9ab45ca..7b52825 100644
--- a/be/be.c
+++ b/be/be.c
@@ -123,11 +123,8 @@ M0_INTERNAL void m0_be_op_state_set(struct m0_be_op *op,
 M0_INTERNAL int m0_be_op_tick_ret(struct m0_be_op *op, struct m0_fom *fom,
 				  int next_state)
 {
-	m0_sm_group_lock(&op->bo_sm_grp);
-	if (M0_IN(op->bo_sm.sm_state, (M0_BOS_SUCCESS, M0_BOS_FAILURE))) {
-		m0_sm_group_unlock(&op->bo_sm_grp);
+	if (M0_IN(op->bo_sm.sm_state, (M0_BOS_SUCCESS, M0_BOS_FAILURE)))
 		return M0_FSO_AGAIN;
-	}
 
 	m0_sm_group_lock(&op->bo_sm_grp);
 	m0_fom_wait_on(fom, &op->bo_sm.sm_chan, &fom->fo_cb);
diff --git a/be/tx_fom.c b/be/tx_fom.c
index 55fa442..1b65c25 100644
--- a/be/tx_fom.c
+++ b/be/tx_fom.c
@@ -32,7 +32,7 @@
 #include "be/tx_service.h"
 #include "be/tx.h"
 
-#define FOM_IO_EMU 0
+#define FOM_IO_EMU 1
 #if FOM_IO_EMU /* XXX */
 #include "lib/thread.h"
 static struct m0_thread g_thread;
-- 
1.8.3.2

