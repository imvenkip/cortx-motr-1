From cb4ac4efd192bcbd83cbe3c616545d1dedd0534a Mon Sep 17 00:00:00 2001
From: Alexander Gattin <alexander_gattin@xyratex.com>
Date: Sun, 30 Jun 2013 18:15:26 +0300
Subject: [PATCH 224/228] be/tg: wake groups for log i/o via log_next_group().

---
 be/tx_group.c | 33 +++++++++++++++++++++------------
 1 file changed, 21 insertions(+), 12 deletions(-)

diff --git a/be/tx_group.c b/be/tx_group.c
index efe6c61..4eea961 100644
--- a/be/tx_group.c
+++ b/be/tx_group.c
@@ -207,6 +207,18 @@ static size_t tg_fom_home_locality(const struct m0_fom *fom)
 	return cfom2tg(fom)->tg_hdr.gh_id;
 }
 
+/* Must be called with fom lock held. */
+static void log_next_group(struct m0_be_tx_engine *eng)
+{
+	struct m0_be_tx_group *gr;
+	if (! tg_tlist_is_empty(&eng->te_tgs[M0_BGS_CLOSED]) &&
+	    tg_tlist_is_empty(&eng->te_tgs[M0_BGS_LOG])) {
+		gr = tg_tlist_head(&eng->te_tgs[M0_BGS_CLOSED]);
+		tg_state_set(gr, M0_BGS_LOG);
+		m0_fom_wakeup(&gr->tg_fom);
+	}
+}
+
 static int tg_fom_tick(struct m0_fom *fom)
 {
 	struct m0_be_tx_group  *gr    = fom2tg(fom);
@@ -224,18 +236,13 @@ static int tg_fom_tick(struct m0_fom *fom)
 		return M0_FSO_WAIT;
 
 	case M0_BGS_CLOSED:
-		/* All group's transactions must be in CLOSED state ATM. */
+		/* All group's transactions must be in CLOSED state,
+		 * and wakeup conditions as in log_next_group(). */
 		M0_PRE(m0_forall(i, ARRAY_SIZE(gr->tg_txs),
 				 (i == M0_BTS_CLOSED ||
-				  tg_tlist_is_empty(&gr->tg_txs[i]))));
-
-		/* If group isn't first in the CLOSED list or there are
-		 * unfinished LOG groups, wait. XXX: tg_wake_log() must
-		 * be implemented and called after a group leaves LOG/CLOSED
-		 * state or enters CLOSED state.*/
-		if (gr != tg_tlist_head(&eng->te_tgs[M0_BGS_CLOSED])
-		    || ! tg_tlist_is_empty(&eng->te_tgs[M0_BGS_LOG]))
-			return M0_FSO_WAIT;
+				  tg_tlist_is_empty(&gr->tg_txs[i]))) &&
+		       gr == tg_tlist_head(&eng->te_tgs[M0_BGS_CLOSED]) &&
+		       tg_tlist_is_empty(&eng->te_tgs[M0_BGS_LOG]));
 
 		/* TODO:XXX: start log i/o. */
 	        /* Switch group's transactions to LOG state. */
@@ -246,11 +253,12 @@ static int tg_fom_tick(struct m0_fom *fom)
 		return M0_FSO_WAIT;
 
 	case M0_BGS_LOG:
-		/* Log i/o has been completed, go further.*/
+		/* Log i/o has been completed, go further. */
 		tg_state_set(gr, M0_BGS_LOGGED);
 		m0_tl_for(tg, &gr->tg_txs[M0_BTS_CLOSED], tx) {
 			tx_state_set(tx, M0_BTS_LOGGED);
 		} m0_tl_endfor;
+		log_next_group(eng);
 		return M0_FSO_AGAIN;
 
 	case M0_BGS_LOGGED:
@@ -480,7 +488,8 @@ M0_INTERNAL void tx_group_close(struct m0_be_tx_group *gr)
 					 tx_group_close ? */
 	gr->tg_eng->te_log.lg_lsn += tg_log_size(gr);
 	tg_state_set(gr, M0_BGS_CLOSED);
-	/* TODO: launch log i/o */
+	log_next_group(gr->tg_eng);  /* If this group is first in queue, it
+				      *	will start log i/o. */
 	m0_mutex_unlock(&gr->tg_lock);
 }
 
-- 
1.8.3.2

