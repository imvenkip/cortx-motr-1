From ecc0bd0edc13dea886d7fcde8cbcf9417b6ae292 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Fri, 12 Jul 2013 21:39:51 +0300
Subject: [PATCH 06/14] lnet: extract thread_confine() from nlx_tm_ev_worker()

---
 net/lnet/lnet_tm.c | 31 ++++++++++++++++++-------------
 1 file changed, 18 insertions(+), 13 deletions(-)

diff --git a/net/lnet/lnet_tm.c b/net/lnet/lnet_tm.c
index 6486bdb..edbbdd0 100644
--- a/net/lnet/lnet_tm.c
+++ b/net/lnet/lnet_tm.c
@@ -73,6 +73,18 @@ nlx_tm_get_buffer_timeout_tick(const struct m0_net_transfer_mc *tm)
 	return m0_time(M0_NET_LNET_BUF_TIMEOUT_TICK_SECS, 0);
 }
 
+static int thread_confine(struct nlx_xo_transfer_mc *m)
+{
+	struct m0_thread_handle me;
+
+	if (m->xtm_processors.b_nr == 0)
+		return 0;
+
+	m0_thread_self(&me);
+	M0_ASSERT(m0_thread_handle_eq(&me, &m->xtm_ev_thread.t_h));
+	return m0_thread_confine(&m->xtm_ev_thread, &m->xtm_processors);
+}
+
 /**
    The entry point of the LNet transport event processing thread.
    It is spawned when the transfer machine starts.  It completes
@@ -87,10 +99,9 @@ static void nlx_tm_ev_worker(struct m0_net_transfer_mc *tm)
 	struct nlx_core_transfer_mc *ctp;
 	struct nlx_xo_domain        *dp;
 	struct nlx_core_domain      *cd;
-	struct m0_net_tm_event tmev     = {
-		.nte_type               = M0_NET_TEV_STATE_CHANGE,
-		.nte_tm                 = tm,
-		.nte_status             = 0
+	struct m0_net_tm_event       tmev = {
+		.nte_type = M0_NET_TEV_STATE_CHANGE,
+		.nte_tm   = tm
 	};
 	m0_time_t                    timeout;
 	m0_time_t                    last_stat_time;
@@ -98,10 +109,11 @@ static void nlx_tm_ev_worker(struct m0_net_transfer_mc *tm)
 	m0_time_t                    next_buffer_timeout;
 	m0_time_t                    buffer_timeout_tick;
 	m0_time_t                    now;
-	int                          rc = 0;
+	int                          rc;
 
 	m0_mutex_lock(&tm->ntm_mutex);
 	M0_PRE(nlx_tm_invariant(tm));
+
 	tp = tm->ntm_xprt_private;
 	ctp = &tp->xtm_core;
 	dp = tm->ntm_dom->nd_xprt_private;
@@ -109,14 +121,7 @@ static void nlx_tm_ev_worker(struct m0_net_transfer_mc *tm)
 
 	nlx_core_tm_set_debug(ctp, tp->_debug_);
 
-	if (tp->xtm_processors.b_nr != 0) {
-		struct m0_thread_handle me;
-
-		m0_thread_self(&me);
-		M0_ASSERT(m0_thread_handle_eq(&me, &tp->xtm_ev_thread.t_h));
-		rc = m0_thread_confine(&tp->xtm_ev_thread, &tp->xtm_processors);
-	}
-
+	rc = thread_confine(tp);
 	if (rc == 0)
 		rc = nlx_core_tm_start(cd, tm, ctp);
 	if (rc == 0) {
-- 
1.8.3.2

