From 29353f4955b273953d0895443bc6c3653f0fd22d Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Fri, 12 Jul 2013 12:03:27 +0300
Subject: [PATCH 01/14] net: trace m0_net_tm_{start,stop}(),
 m0_net_buffer_{add,del}()

---
 net/buf.c | 21 +++++++++++++++------
 net/tm.c  | 14 ++++++++------
 2 files changed, 23 insertions(+), 12 deletions(-)

diff --git a/net/buf.c b/net/buf.c
index 1dc8222..8de89bc 100644
--- a/net/buf.c
+++ b/net/buf.c
@@ -18,6 +18,9 @@
  * Original creation date: 04/05/2011
  */
 
+#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_NET
+#include "lib/trace.h"
+
 #include "lib/arith.h" /* max_check */
 #include "lib/assert.h"
 #include "lib/errno.h"
@@ -274,15 +277,20 @@ M0_INTERNAL int m0_net_buffer_add(struct m0_net_buffer *buf,
 				  struct m0_net_transfer_mc *tm)
 {
 	int rc;
+
+	M0_ENTRY();
 	M0_PRE(tm != NULL);
+
 	if (M0_FI_ENABLED("fake_error"))
-		return -EMSGSIZE;
+		M0_RETURN(-EMSGSIZE);
+
 	m0_mutex_lock(&tm->ntm_mutex);
 	rc = m0_net__buffer_add(buf, tm);
 	m0_mutex_unlock(&tm->ntm_mutex);
+
 	if (rc != 0)
 		NET_ADDB_FUNCFAIL(rc, BUF_ADD, &tm->ntm_addb_ctx);
-	return rc;
+	M0_RETURN(rc);
 }
 M0_EXPORTED(m0_net_buffer_add);
 
@@ -291,6 +299,7 @@ M0_INTERNAL void m0_net_buffer_del(struct m0_net_buffer *buf,
 {
 	struct m0_net_domain *dom;
 
+	M0_ENTRY();
 	M0_PRE(tm != NULL && tm->ntm_dom != NULL);
 	M0_PRE(buf != NULL);
 
@@ -303,7 +312,7 @@ M0_INTERNAL void m0_net_buffer_del(struct m0_net_buffer *buf,
 
 	if (!(buf->nb_flags & M0_NET_BUF_QUEUED)) {
 		/* completion race condition? no error */
-		goto m_err_exit;
+		goto out;
 	}
 
 	/* tell the transport to cancel */
@@ -313,10 +322,9 @@ M0_INTERNAL void m0_net_buffer_del(struct m0_net_buffer *buf,
 
 	M0_POST(m0_net__buffer_invariant(buf));
 	M0_POST(m0_net__tm_invariant(tm));
-
- m_err_exit:
+out:
 	m0_mutex_unlock(&tm->ntm_mutex);
-	return;
+	M0_LEAVE();
 }
 M0_EXPORTED(m0_net_buffer_del);
 
@@ -465,6 +473,7 @@ M0_INTERNAL void m0_net_buffer_event_post(const struct m0_net_buffer_event *ev)
 }
 
 /** @} end of net group */
+#undef M0_TRACE_SUBSYSTEM
 
 /*
  *  Local variables:
diff --git a/net/tm.c b/net/tm.c
index 8a28454..ef63d05 100644
--- a/net/tm.c
+++ b/net/tm.c
@@ -19,12 +19,13 @@
  * Original creation date: 04/07/2011
  */
 
+#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_NET
+#include "lib/trace.h"
+
 #include "lib/arith.h" /* M0_CNT_INC */
 #include "lib/assert.h"
 #include "lib/errno.h"
 #include "lib/misc.h"
-#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_NET
-#include "lib/trace.h"
 #include "lib/finject.h"
 #include "mero/magic.h"
 #include "net/net_internal.h"
@@ -280,6 +281,7 @@ M0_INTERNAL int m0_net_tm_start(struct m0_net_transfer_mc *tm, const char *addr)
 {
 	int rc;
 
+	M0_ENTRY();
 	M0_ASSERT(addr != NULL);
 	M0_PRE(tm != NULL);
 	m0_mutex_lock(&tm->ntm_mutex);
@@ -303,7 +305,7 @@ M0_INTERNAL int m0_net_tm_start(struct m0_net_transfer_mc *tm, const char *addr)
 	M0_POST(m0_net__tm_invariant(tm));
 	m0_mutex_unlock(&tm->ntm_mutex);
 	M0_ASSERT(rc <= 0);
-	return rc;
+	M0_RETURN(rc);
 }
 M0_EXPORTED(m0_net_tm_start);
 
@@ -312,6 +314,7 @@ M0_INTERNAL int m0_net_tm_stop(struct m0_net_transfer_mc *tm, bool abort)
 	int rc;
 	enum m0_net_tm_state oldstate;
 
+	M0_ENTRY("abort=%u", !!abort);
 	m0_mutex_lock(&tm->ntm_mutex);
 	M0_PRE(m0_net__tm_invariant(tm));
 	M0_PRE(tm->ntm_state == M0_NET_TM_INITIALIZED ||
@@ -330,7 +333,7 @@ M0_INTERNAL int m0_net_tm_stop(struct m0_net_transfer_mc *tm, bool abort)
 	M0_POST(m0_net__tm_invariant(tm));
 	m0_mutex_unlock(&tm->ntm_mutex);
 	M0_ASSERT(rc <= 0);
-	return rc;
+	M0_RETURN(rc);
 }
 M0_EXPORTED(m0_net_tm_stop);
 
@@ -585,9 +588,8 @@ M0_INTERNAL void m0_net_tm_pool_length_set(struct m0_net_transfer_mc *tm,
 }
 M0_EXPORTED(m0_net_tm_pool_length_set);
 
-#undef M0_TRACE_SUBSYSTEM
-
 /** @} end of net group */
+#undef M0_TRACE_SUBSYSTEM
 
 /*
  *  Local variables:
-- 
1.8.3.2

