From 769a57587960a134386a897a5b852009f39c6c59 Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Sun, 13 Jan 2013 04:50:33 +0200
Subject: [PATCH 63/71] added LOGD macro, used it as logging macro in net-test

---
 build_kernel_modules/Makefile.in |  9 ++++---
 net/test/Makefile.am             |  8 +++---
 net/test/commands.c              | 16 ++++-------
 net/test/console.c               | 21 +++++----------
 net/test/network.c               | 15 +----------
 net/test/node.c                  |  8 +++---
 net/test/node_bulk.c             | 56 +++++++++++++++++++--------------------
 net/test/node_helper.c           |  1 -
 net/test/node_ping.c             | 57 ++++++++++------------------------------
 net/test/ringbuf.c               |  6 ++---
 net/test/serialize.c             |  4 +--
 net/test/service.c               | 12 ---------
 net/test/ut/client_server.c      |  7 +++--
 net/test/ut/network.c            | 26 ++++++++----------
 14 files changed, 88 insertions(+), 158 deletions(-)

diff --git a/build_kernel_modules/Makefile.in b/build_kernel_modules/Makefile.in
index 331a59e..29babe0 100644
--- a/build_kernel_modules/Makefile.in
+++ b/build_kernel_modules/Makefile.in
@@ -144,10 +144,11 @@ net_test_SOURCES		:= commands.c console.c initfini.c network.c  \
 				   node_bulk.c node_helper.c node_ping.c      \
 				   node_stub.c node.c ringbuf.c serialize.c   \
 				   service.c slist.c stats.c str.c
-net_test_HEADERS		:= commands.h console.h initfini.h network.h  \
-				   node_bulk.h node_helper.h node_ping.h      \
-				   node_stub.h node.h ringbuf.h serialize.h   \
-				   service.h slist.h stats.h str.h
+net_test_HEADERS		:= commands.h console.h debug.h initfini.h    \
+				   network.h node_bulk.h node_helper.h	      \
+				   node_ping.h node_stub.h node.h ringbuf.h   \
+				   serialize.h service.h slist.h stats.h      \
+				   str.h
 
 net_test_ut_SOURCES		:= client_server.c commands.c main.c	      \
 				   network.c ringbuf.c serialize.c service.c  \
diff --git a/net/test/Makefile.am b/net/test/Makefile.am
index ec03784..3356d00 100644
--- a/net/test/Makefile.am
+++ b/net/test/Makefile.am
@@ -7,10 +7,10 @@ net_test_SRC			= commands.c console.c initfini.c network.c    \
 				  node_stub.c node.c ringbuf.c serialize.c     \
 				  service.c slist.c stats.c str.c 	       \
 				  user_space/stats_u.c
-net_test_HDR			= commands.h console.h initfini.h network.h    \
-				  node_bulk.h node_helper.h node_ping.h        \
-				  node_stub.h node.h ringbuf.h serialize.h     \
-				  service.h slist.h stats.h str.h 	       \
+net_test_HDR			= commands.h console.h debug.h initfini.h      \
+				  network.h node_bulk.h node_helper.h 	       \
+				  node_ping.h node_stub.h node.h ringbuf.h     \
+				  serialize.h service.h slist.h stats.h str.h  \
 				  user_space/stats_u.h
 
 libcolibri_net_test_la_SOURCES	= $(net_test_HDR) $(net_test_SRC)
diff --git a/net/test/commands.c b/net/test/commands.c
index 25e3080..4bfeffe 100644
--- a/net/test/commands.c
+++ b/net/test/commands.c
@@ -18,11 +18,6 @@
  * Original creation date: 05/05/2012
  */
 
-/** @todo remove */
-#ifndef __KERNEL__
-#include <stdio.h>		/* printf */
-#endif
-
 #include "lib/cdefs.h"		/* container_of */
 #include "lib/types.h"		/* c2_bcount_t */
 #include "lib/misc.h"		/* C2_SET0 */
@@ -35,13 +30,12 @@
 
 #include "net/test/commands.h"
 
-bool net_test_commands_debug = false;
+#ifdef NET_TEST_MODULE_NAME
+#undef NET_TEST_MODULE_NAME
+#endif
+#define NET_TEST_MODULE_NAME commands
+#include "net/test/debug.h"	/* LOGD */
 
-#define LOGD(...)						\
-	do {							\
-		if (net_test_commands_debug)			\
-			C2_LOG(C2_DEBUG, ##__VA_ARGS__);	\
-	} while (0)
 
 /**
    @defgroup NetTestCommandsInternals Commands
diff --git a/net/test/console.c b/net/test/console.c
index 6ff24f4..303a2ff 100644
--- a/net/test/console.c
+++ b/net/test/console.c
@@ -18,21 +18,6 @@
  * Original creation date: 09/03/2012
  */
 
-/** @todo remove */
-#ifndef __KERNEL__
-#include <stdio.h>		/* printf */
-#endif
-
-/** @todo debug only, remove it */
-#ifndef __KERNEL__
-/*
-#define LOGD(format, ...) printf(format, ##__VA_ARGS__)
-*/
-#define LOGD(format, ...) do {} while (0)
-#else
-#define LOGD(format, ...) do {} while (0)
-#endif
-
 #include "lib/arith.h"		/* min_check */
 #include "lib/memory.h"		/* C2_ALLOC_PTR */
 #include "lib/misc.h"		/* C2_SET0 */
@@ -40,6 +25,12 @@
 
 #include "net/test/console.h"
 
+#ifdef NET_TEST_MODULE_NAME
+#undef NET_TEST_MODULE_NAME
+#endif
+#define NET_TEST_MODULE_NAME console
+#include "net/test/debug.h"	/* LOGD */
+
 
 /**
    @defgroup NetTestConsoleInternals Test Console
diff --git a/net/test/network.c b/net/test/network.c
index df3a2a7..0201378 100644
--- a/net/test/network.c
+++ b/net/test/network.c
@@ -18,13 +18,6 @@
  * Original creation date: 03/22/2012
  */
 
-#ifdef __KERNEL__
-#include <linux/kernel.h>	/* snprintf() */
-#else
-#include <stdio.h>		/* snprintf() */
-#include <inttypes.h>		/* PRIu64 */
-#endif
-
 #include "lib/cdefs.h"		/* ergo */
 #include "lib/errno.h"		/* E2BIG */
 #include "lib/memory.h"		/* C2_ALLOC_ARR */
@@ -33,7 +26,7 @@
 
 #include "colibri/magic.h"	/* C2_NET_TEST_NETWORK_BD_MAGIC */
 
-#include "net/net.h"
+#include "net/net.h"		/* c2_net_buffer */
 #include "net/lnet/lnet.h"	/* c2_net_lnet_xprt */
 
 #include "net/test/network.h"
@@ -52,12 +45,6 @@
    @{
  */
 
-#if 0
-#ifndef __KERNEL__
-#define DEBUG_NET_TEST_NETWORK
-#endif
-#endif
-
 int c2_net_test_network_init(void)
 {
 	return c2_net_xprt_init(&c2_net_lnet_xprt);
diff --git a/net/test/node.c b/net/test/node.c
index b220e50..5fd8ca3 100644
--- a/net/test/node.c
+++ b/net/test/node.c
@@ -28,9 +28,11 @@
 #include "net/test/node_ping.h"	/* c2_net_test_node_ping_ops */
 #include "net/test/node_bulk.h"	/* c2_net_test_node_bulk_ops */
 
-/** @todo debug only, remove it */
-// #define LOGD(...) C2_LOG(C2_DEBUG, ##__VA_ARGS__)
-#define LOGD(format, ...) do {} while (0)
+#ifdef NET_TEST_MODULE_NAME
+#undef NET_TEST_MODULE_NAME
+#endif
+#define NET_TEST_MODULE_NAME node
+#include "net/test/debug.h"
 
 /**
    @page net-test Colibri Network Benchmark
diff --git a/net/test/node_bulk.c b/net/test/node_bulk.c
index 9b41e62..ba30c9b 100644
--- a/net/test/node_bulk.c
+++ b/net/test/node_bulk.c
@@ -22,7 +22,6 @@
 #include "lib/errno.h"			/* EALREADY */
 #include "lib/memory.h"			/* C2_ALLOC_PTR */
 #include "lib/cdefs.h"			/* ergo */
-#include "lib/trace.h"			/* C2_LOG */
 #include "lib/misc.h"			/* C2_IN */
 
 #include "colibri/magic.h"		/* C2_NET_TEST_BSB_MAGIC */
@@ -35,6 +34,12 @@
 
 #include "net/test/node_bulk.h"
 
+#ifdef NET_TEST_MODULE_NAME
+#undef NET_TEST_MODULE_NAME
+#endif
+#define NET_TEST_MODULE_NAME node_bulk
+#include "net/test/debug.h"		/* LOGD */
+
 /**
    @defgroup NetTestBulkNodeInternals Bulk Node
    @ingroup NetTestInternals
@@ -363,10 +368,8 @@ static void node_bulk_state_change(struct node_bulk_ctx *ctx,
 	C2_PRE(bs_index < ctx->nbc_bs_nr);
 	C2_PRE(ctx->nbc_bs != NULL);
 
-	/*
-	C2_LOG(C2_DEBUG, "state_change: role = %d, bs_index = %lu, state = %d",
-	       ctx->nbc_nh.ntnh_role, bs_index, state);
-	*/
+	LOGD("state_change: role = %d, bs_index = %lu, state = %d",
+	     ctx->nbc_nh.ntnh_role, bs_index, state);
 
 	role = ctx->nbc_nh.ntnh_role;
 	bs = &ctx->nbc_bs[bs_index];
@@ -695,7 +698,7 @@ static c2_bcount_t node_bulk_server_transfer_start(struct node_bulk_ctx *ctx,
 
 	no_unused_buf = c2_net_test_ringbuf_is_empty(&ctx->nbc_rb_bulk_unused);
 	if (no_unused_buf) {
-		C2_LOG(C2_DEBUG, "--- NO UNUSED BUFS");
+		LOGD("--- NO UNUSED BUFS");
 		sd_update(ctx, MT_TRANSFER, MS_FAILED, MD_BOTH);
 		return 0;
 	}
@@ -707,11 +710,9 @@ static c2_bcount_t node_bulk_server_transfer_start(struct node_bulk_ctx *ctx,
 	/* deserialize network buffer descriptors */
 	len = buf_desc_deserialize(ctx, buf_bulk_index, buf_ping_index, offset);
 	if (len == 0) {
-		C2_LOG(C2_DEBUG, "BADMSG: buf_bulk_index = %lu, "
-				 "buf_ping_index = %lu, "
-				 "offset = %lu",
-				 buf_bulk_index, buf_ping_index,
-				 (unsigned long) offset);
+		LOGD("BADMSG: buf_bulk_index = %lu, "
+		     "buf_ping_index = %lu, offset = %lu",
+		     buf_bulk_index, buf_ping_index, (unsigned long) offset);
 		/* ping buffer contains invalid data */
 		node_bulk_state_change(ctx, buf_bulk_index, TS_BADMSG);
 		return 0;
@@ -756,7 +757,7 @@ static void node_bulk_cb_server(struct node_bulk_ctx *ctx,
 			return;
 		nr = c2_net_test_network_bd_nr(&ctx->nbc_net, buf_index);
 		if (nr % 2 != 0) {
-			C2_LOG(C2_DEBUG, "MS_BAD: nr = %lu", nr);
+			LOGD("MS_BAD: nr = %lu", nr);
 			sd_update(ctx, MT_MSG, MS_BAD, MD_RECV);
 			return;
 		}
@@ -769,7 +770,7 @@ static void node_bulk_cb_server(struct node_bulk_ctx *ctx,
 		}
 	} else if (q == C2_NET_QT_ACTIVE_BULK_RECV) {
 		if (ev->nbe_status != 0) {
-			C2_LOG(C2_DEBUG, "--- active bulk recv FAILED!");
+			LOGD("--- active bulk recv FAILED!");
 			buf_desc_server_free(ctx, buf_index);
 			return;
 		}
@@ -783,7 +784,7 @@ static void node_bulk_cb_server(struct node_bulk_ctx *ctx,
 						C2_NET_QT_ACTIVE_BULK_SEND);
 		ctx->nbc_bs[buf_index].bsb_send.bse_func_rc = rc;
 		if (rc != 0) {
-			C2_LOG(C2_DEBUG, "--- active bulk send FAILED!");
+			LOGD("--- active bulk send FAILED!");
 			buf_desc_server_free(ctx, buf_index);
 			node_bulk_state_change(ctx, buf_index, TS_FAILED);
 			sd_update(ctx, MT_BULK, MS_FAILED, MD_SEND);
@@ -839,11 +840,9 @@ static void node_bulk_cb(struct c2_net_test_network_ctx *net_ctx,
 	bool			 buf_send;
 	bool			 buf_bulk;
 
-	/*
-	C2_LOG(C2_DEBUG, "node_bulk_cb: tm_addr = %s, buf_index = %u, q = %d"
-			 ", ev-nbe_status = %d",
-	       net_ctx->ntc_tm->ntm_ep->nep_addr, buf_index, q, ev->nbe_status);
-	*/
+	LOGD("node_bulk_cb: tm_addr = %s, buf_index = %u, q = %d"
+	     ", ev-nbe_status = %d",
+	     net_ctx->ntc_tm->ntm_ep->nep_addr, buf_index, q, ev->nbe_status);
 	C2_PRE(net_ctx != NULL);
 	role_client = ctx->nbc_nh.ntnh_role == C2_NET_TEST_ROLE_CLIENT;
 	C2_PRE(ergo(q == C2_NET_QT_MSG_RECV, !role_client));
@@ -856,12 +855,11 @@ static void node_bulk_cb(struct c2_net_test_network_ctx *net_ctx,
 		    buf_index < ctx->nbc_buf_ping_nr));
 
 	if (ev->nbe_status != 0 && ev->nbe_status != -ECANCELED) {
-		C2_LOG(C2_DEBUG, "--CALLBACK ERROR! errno = %d",
-		       ev->nbe_status);
-		C2_LOG(C2_DEBUG, "node_bulk_cb: tm_addr = %s, "
-				 "buf_index = %u, q = %d"
-				 ", ev-nbe_status = %d",
-	       net_ctx->ntc_tm->ntm_ep->nep_addr, buf_index, q, ev->nbe_status);
+		LOGD("--CALLBACK ERROR! errno = %d", ev->nbe_status);
+		LOGD("node_bulk_cb: tm_addr = %s, buf_index = %u, q = %d"
+		     ", ev-nbe_status = %d",
+		     net_ctx->ntc_tm->ntm_ep->nep_addr, buf_index, q,
+		     ev->nbe_status);
 	}
 
 	ctx->nbc_callback_executed = true;
@@ -989,7 +987,7 @@ static void client_process_unused_bulk(struct node_bulk_ctx *ctx)
 		/* Check stop conditions */
 		transfer_next = c2_net_test_nh_transfer_next(&ctx->nbc_nh);
 		/*
-		C2_LOG(C2_DEBUG, "client: transfer_next = %s",
+		LOGD("client: transfer_next = %s",
 		       transfer_next ? (char *) "true" : (char *) "false");
 		*/
 		if (!transfer_next)
@@ -997,7 +995,7 @@ static void client_process_unused_bulk(struct node_bulk_ctx *ctx)
 		/* Start next transfer */
 		bs_index = c2_net_test_ringbuf_pop(&ctx->nbc_rb_bulk_unused);
 		/*
-		C2_LOG(C2_DEBUG, "client: next transfer bs_index = %lu",
+		LOGD("client: next transfer bs_index = %lu",
 		       bs_index);
 		*/
 		client_transfer_start(ctx, bs_index);
@@ -1100,7 +1098,7 @@ take_msg:
 		len = client_bds_serialize2(&ctx->nbc_net, bs->bsb_index,
 					    msg_index, msg_offset);
 		/*
-		C2_LOG(C2_DEBUG, "msg_index = %lu, len = %lu, msg_offset = %lu",
+		LOGD("msg_index = %lu, len = %lu, msg_offset = %lu",
 		       (unsigned long ) msg_index, (unsigned long ) len,
 		       (unsigned long ) msg_offset);
 		*/
@@ -1150,7 +1148,7 @@ take_msg:
 						  msg_bs->bsp_index,
 						  ss->ssb_index);
 		if (rc != 0) {
-			C2_LOG(C2_DEBUG, "--- msg send FAILED!");
+			LOGD("--- msg send FAILED!");
 			sd_update(ctx, MT_MSG, MS_FAILED, MD_SEND);
 		}
 		/* Save rc for future analysis */
diff --git a/net/test/node_helper.c b/net/test/node_helper.c
index 24d8a57..b66332c 100644
--- a/net/test/node_helper.c
+++ b/net/test/node_helper.c
@@ -18,7 +18,6 @@
  * Original creation date: 11/07/2012
  */
 
-#include "lib/trace.h"			/* C2_LOG */
 #include "lib/misc.h"			/* C2_IN */
 
 #include "net/test/node_helper.h"
diff --git a/net/test/node_ping.c b/net/test/node_ping.c
index c2feb39..fc14e85 100644
--- a/net/test/node_ping.c
+++ b/net/test/node_ping.c
@@ -18,21 +18,6 @@
  * Original creation date: 09/03/2012
  */
 
-/** @todo remove */
-#ifndef __KERNEL__
-#include <stdio.h>		/* printf */
-#endif
-
-/** @todo debug only, remove it */
-#ifndef __KERNEL__
-/*
-#define LOGD(format, ...) printf(format, ##__VA_ARGS__)
-*/
-#define LOGD(format, ...) do {} while (0)
-#else
-#define LOGD(format, ...) do {} while (0)
-#endif
-
 #include "lib/memory.h"			/* C2_ALLOC_PTR */
 #include "lib/misc.h"			/* C2_SET0 */
 #include "lib/time.h"			/* c2_time_t */
@@ -48,6 +33,12 @@
 
 #include "net/test/node_ping.h"
 
+#ifdef NET_TEST_MODULE_NAME
+#undef NET_TEST_MODULE_NAME
+#endif
+#define NET_TEST_MODULE_NAME node_ping
+#include "net/test/debug.h"		/* LOGD */
+
 
 /**
    @defgroup NetTestPingNodeInternals Ping Node
@@ -279,8 +270,7 @@ static bool node_ping_timestamp_get(struct c2_net_test_network_ctx *net_ctx,
 static void node_ping_to_add(struct node_ping_ctx *ctx,
 			     size_t buf_index)
 {
-	LOGD(">> WAIT: >> %s: buf_index = %lu\n",
-	     __FUNCTION__, buf_index);
+	LOGD("buf_index = %lu", buf_index);
 	buf_state_tlist_add_tail(&ctx->npc_client->npcc_to,
 				 &ctx->npc_buf_state[buf_index]);
 }
@@ -288,8 +278,7 @@ static void node_ping_to_add(struct node_ping_ctx *ctx,
 static void node_ping_to_del(struct node_ping_ctx *ctx,
 			     size_t buf_index)
 {
-	LOGD(">> WAIT: >> %s: buf_index = %lu\n",
-	     __FUNCTION__, buf_index);
+	LOGD("buf_index = %lu", buf_index);
 	buf_state_tlist_del(&ctx->npc_buf_state[buf_index]);
 }
 
@@ -341,11 +330,8 @@ static void node_ping_buf_enqueue(struct node_ping_ctx *ctx,
 		bs->bs_errno = -EWOULDBLOCK;
 		return;
 	}
-	LOGD("node_ping_buf_enqueue:");
-	LOGD(", q = %d", q);
-	LOGD(", buf_index = %lu", buf_index);
-	LOGD(", ep_index = %lu", ep_index);
-	LOGD(", %s", ctx->npc_net.ntc_tm->ntm_ep->nep_addr);
+	LOGD("q = %d, buf_index = %lu, ep_index = %lu, %s",
+	     q, buf_index, ep_index, ctx->npc_net.ntc_tm->ntm_ep->nep_addr);
 	if (q == C2_NET_QT_MSG_SEND) {
 		LOGD(" => %s", (ep == NULL ?
 			    c2_net_test_network_ep(&ctx->npc_net, ep_index) :
@@ -353,7 +339,6 @@ static void node_ping_buf_enqueue(struct node_ping_ctx *ctx,
 	} else {
 		LOGD(" <= ");
 	}
-	LOGD("\n");
 	bs->bs_errno = (bs->bs_q = q) == C2_NET_QT_MSG_RECV ?
 		  c2_net_test_network_msg_recv(nctx, buf_index) : ep == NULL ?
 		  c2_net_test_network_msg_send(nctx, buf_index, ep_index) :
@@ -490,14 +475,13 @@ static void node_ping_msg_cb(struct c2_net_test_network_ctx *net_ctx,
 	ctx = node_ping_ctx_from_net_ctx(net_ctx);
 	bs = &ctx->npc_buf_state[buf_index];
 
-	LOGD("%s,      role = %d, buf_index = %u, nbe_status = %d, q = %d",
-	     __FUNCTION__, ctx->npc_nh.ntnh_role, buf_index, ev->nbe_status, q);
-	LOGD(", ev->nbe_length = %lu", ev->nbe_length);
+	LOGD("role = %d, buf_index = %u, nbe_status = %d, q = %d",
+	     ctx->npc_nh.ntnh_role, buf_index, ev->nbe_status, q);
+	LOGD(", ev->nbe_length = %lu", (long unsigned) ev->nbe_length);
 
 	if (q == C2_NET_QT_MSG_RECV && ev->nbe_status == 0)
 		LOGD(", ev->nbe_ep->nep_addr = %s", ev->nbe_ep->nep_addr);
 
-	LOGD("\n");
 
 	if (ev->nbe_status == -ECANCELED) {
 		c2_semaphore_up(&ctx->npc_buf_q_sem);
@@ -628,7 +612,7 @@ static void node_ping_worker(struct node_ping_ctx *ctx)
 			break;
 		buf_index = c2_net_test_ringbuf_pop(&ctx->npc_buf_rb);
 		bs = &ctx->npc_buf_state[buf_index];
-		LOGD("POP from ringbuf: %lu, role = %d\n",
+		LOGD("POP from ringbuf: %lu, role = %d",
 		     buf_index, ctx->npc_nh.ntnh_role);
 		/* update total/failed stats */
 		failed = bs->bs_errno != 0 || bs->bs_ev.nbe_status != 0;
@@ -815,8 +799,6 @@ static int node_ping_cmd_init(void *ctx_,
 	C2_PRE(cmd != NULL);
 	C2_PRE(reply != NULL);
 
-	LOGD("%s\n", __FUNCTION__);
-
 	icmd	    = &cmd->ntc_init;
 	role_client = icmd->ntci_role == C2_NET_TEST_ROLE_CLIENT;
 
@@ -882,8 +864,6 @@ static int node_ping_cmd_start(void *ctx_,
 	C2_PRE(cmd != NULL);
 	C2_PRE(reply != NULL);
 
-	LOGD("%s\n", __FUNCTION__);
-
 	sd = &ctx->npc_nh.ntnh_sd;
 	C2_SET0(sd);
 
@@ -922,8 +902,6 @@ static int node_ping_cmd_stop(void *ctx_,
 	C2_PRE(cmd != NULL);
 	C2_PRE(reply != NULL);
 
-	LOGD("%s\n", __FUNCTION__);
-
 	/* stop worker thread */
 	ctx->npc_buf_rb_done = true;
 	c2_semaphore_up(&ctx->npc_buf_rb_sem);
@@ -949,13 +927,6 @@ static int node_ping_cmd_status(void *ctx_,
 
 	c2_net_test_nh_cmd_status(&ctx->npc_nh, cmd, reply);
 
-	if (ctx->npc_nh.ntnh_role == C2_NET_TEST_ROLE_CLIENT) {
-		LOGD("ctx->npc_client->npcc_msg_rt = %lu\n",
-		     ctx->npc_client->npcc_msg_rt);
-		LOGD("ctx->npc_client->npcc_msg_sent = %lu\n",
-		     ctx->npc_client->npcc_msg_sent);
-	}
-
 	return 0;
 }
 
diff --git a/net/test/ringbuf.c b/net/test/ringbuf.c
index ead6d5d..d666096 100644
--- a/net/test/ringbuf.c
+++ b/net/test/ringbuf.c
@@ -18,9 +18,9 @@
  * Original creation date: 07/02/2012
  */
 
-#include "lib/errno.h"	/* ENOMEM */
-#include "lib/misc.h"	/* C2_SET0 */
-#include "lib/memory.h"	/* C2_ALLOC_ARR */
+#include "lib/errno.h"		/* ENOMEM */
+#include "lib/misc.h"		/* C2_SET0 */
+#include "lib/memory.h"		/* C2_ALLOC_ARR */
 
 #include "net/test/ringbuf.h"
 
diff --git a/net/test/serialize.c b/net/test/serialize.c
index a0452d8..1dcfa81 100644
--- a/net/test/serialize.c
+++ b/net/test/serialize.c
@@ -51,7 +51,7 @@ static void net_test_serialize_cpu_to_le(char *d, char *s, c2_bcount_t len)
 	} else if (len == 8) {
 		* (uint64_t *) d = c2_byteorder_cpu_to_le64(* (uint64_t *) s);
 	} else {
-		C2_IMPOSSIBLE("len isn't power of 2");
+		C2_IMPOSSIBLE("len isn't a power of 2");
 	}
 
 }
@@ -67,7 +67,7 @@ static void net_test_serialize_le_to_cpu(char *d, char *s, c2_bcount_t len)
 	} else if (len == 8) {
 		* (uint64_t *) d = c2_byteorder_le64_to_cpu(* (uint64_t *) s);
 	} else {
-		C2_IMPOSSIBLE("len isn't power of 2");
+		C2_IMPOSSIBLE("len isn't a power of 2");
 	}
 
 }
diff --git a/net/test/service.c b/net/test/service.c
index 8eeb78b..dde3376 100644
--- a/net/test/service.c
+++ b/net/test/service.c
@@ -18,18 +18,6 @@
  * Original creation date: 09/03/2012
  */
 
-/** @todo remove */
-#ifndef __KERNEL__
-#include <stdio.h>		/* printf */
-#endif
-
-/** @todo debug only, remove it */
-#ifndef __KERNEL__
-#define LOGD(format, ...) printf(format, ##__VA_ARGS__)
-#else
-#define LOGD(format, ...) do {} while (0)
-#endif
-
 #include "lib/memory.h"		/* C2_ALLOC_PTR */
 #include "lib/misc.h"		/* C2_SET0 */
 #include "lib/errno.h"		/* ENOENT */
diff --git a/net/test/ut/client_server.c b/net/test/ut/client_server.c
index 291b236..0fe6752 100644
--- a/net/test/ut/client_server.c
+++ b/net/test/ut/client_server.c
@@ -30,8 +30,11 @@
 #include "net/test/node.h"		/* c2_net_test_node_ctx */
 #include "net/test/console.h"		/* c2_net_test_console_ctx */
 
-// #define LOGD(...) LOGD(##__VA_ARGS__)
-#define LOGD(...) do {} while (0)
+#ifdef NET_TEST_MODULE_NAME
+#undef NET_TEST_MODULE_NAME
+#endif
+#define NET_TEST_MODULE_NAME ut_client_server
+#include "net/test/debug.h"
 
 enum {
 	NTCS_PID		  = C2_NET_LNET_PID,
diff --git a/net/test/ut/network.c b/net/test/ut/network.c
index c8950b3..bf2f48b 100644
--- a/net/test/ut/network.c
+++ b/net/test/ut/network.c
@@ -21,7 +21,6 @@
 #include "lib/ut.h"		/* C2_UT_ASSERT */
 #include "lib/semaphore.h"	/* c2_semaphore */
 #include "lib/memory.h"		/* c2_alloc */
-#include "lib/trace.h"		/* C2_LOG */
 #include "net/lnet/lnet.h"	/* c2_net_lnet_ifaces_get */
 
 #include "net/test/network.h"
@@ -36,7 +35,6 @@
 #include "lib/thread.h"			/* C2_THREAD_INIT */
 #include "lib/semaphore.h"		/* c2_semaphore_down */
 #include "lib/misc.h"			/* C2_SET0 */
-#include "lib/trace.h"			/* C2_LOG */
 
 #include "net/lnet/lnet.h"		/* C2_NET_LNET_PID */
 
@@ -53,7 +51,6 @@
 #include "lib/thread.h"			/* C2_THREAD_INIT */
 #include "lib/semaphore.h"		/* c2_semaphore_down */
 #include "lib/misc.h"			/* C2_SET0 */
-#include "lib/trace.h"			/* C2_LOG */
 
 #include "net/lnet/lnet.h"		/* C2_NET_LNET_PID */
 
@@ -61,8 +58,11 @@
 #include "net/test/node_ping.h"		/* c2_net_test_node_ping_ops */
 /* END COPY-PASTE FROM client_server.c */
 
-// #define LOGD(...) C2_LOG(C2_DEBUG, ##__VA_ARGS__)
-#define LOGD(...) do {} while (0)
+#ifdef NET_TEST_MODULE_NAME
+#undef NET_TEST_MODULE_NAME
+#endif
+#define NET_TEST_MODULE_NAME ut_network
+#include "net/test/debug.h"		/* LOGD */
 
 enum {
 	NET_TEST_PING_BUF_SIZE = 4096,
@@ -615,8 +615,6 @@ static c2_time_t timeout_send;
 static c2_time_t timeout_recv;
 static c2_time_t timeout_bulk;
 
-extern bool net_test_commands_debug;
-
 static char *addr_get(const char *nid, int tmid)
 {
 	char  addr[NTCS_NODE_ADDR_MAX];
@@ -821,11 +819,11 @@ static void status_data_add(struct c2_net_test_cmd_status_data *all_sd,
 	};
 	size_t i;
 
-	LOGD("new STATUS_DATA:\n");
-	LOGD("send total = %lu\n", cmd_sd->ntcsd_msg_nr_send.ntmn_total);
-	LOGD("recv total = %lu\n", cmd_sd->ntcsd_msg_nr_recv.ntmn_total);
-	LOGD("finished = %d\n", cmd_sd->ntcsd_finished);
-	LOGD("end of STATUS_DATA\n");
+	LOGD("new STATUS_DATA:");
+	LOGD("send total = %lu", cmd_sd->ntcsd_msg_nr_send.ntmn_total);
+	LOGD("recv total = %lu", cmd_sd->ntcsd_msg_nr_recv.ntmn_total);
+	LOGD("finished = %d", cmd_sd->ntcsd_finished);
+	LOGD("end of STATUS_DATA");
 	for (i = 0; i < ARRAY_SIZE(msg_nr); ++i)
 		c2_net_test_msg_nr_add(msg_nr[i].nr_all, msg_nr[i].nr_node);
 	for (i = 0; i < ARRAY_SIZE(stats); ++i)
@@ -986,7 +984,7 @@ reuse_cmd:
 
 done:
 	c2_free(cmd);
-	LOGD("console: rc = %d\n", rc);
+	LOGD("console: rc = %d", rc);
 
 	return success_nr;
 }
@@ -1011,7 +1009,6 @@ void c2_net_test_bug_ut(void)
 	size_t				bd_nr_max = 0;
 
 	kgdb_break();
-	// net_test_commands_debug = true;
 
 	C2_PRE(clients_nr <= NTCS_NODES_MAX);
 	C2_PRE(servers_nr <= NTCS_NODES_MAX);
@@ -1450,7 +1447,6 @@ void c2_net_test_bug2_ut(void)
 	size_t		  i;
 	int		  rc;
 
-	// net_test_commands_debug = true;
 	/* console is node #0 */
 	for (i = 0; i < ARRAY_SIZE(nodes); ++i) {
 		node = &nodes[i];
-- 
1.8.3.2

