From 3b6e2521389fbc86a5055f88746113906508b40a Mon Sep 17 00:00:00 2001
From: Mandar <mandar_sawant@xyratex.com>
Date: Mon, 21 Apr 2014 01:40:48 -0700
Subject: [PATCH]  - tls_key should not be delete since it is used for other
 threads for thread-specific data.  - Fix for recurrsive awkward context.

---
 lib/user_space/thread.h  | 2 +-
 lib/user_space/uthread.c | 7 +++----
 2 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/lib/user_space/thread.h b/lib/user_space/thread.h
index 898a34a..96e158f 100644
--- a/lib/user_space/thread.h
+++ b/lib/user_space/thread.h
@@ -52,7 +52,7 @@ struct m0_thread_tls {
 	/** The pointer returned by m0_get(). */
 	struct m0 *tls_m0_instance;
 	/** True iff the thread is in awkward context. */
-	bool       tls_is_awkward;
+	uint32_t   tls_awkward;
 	/** Stack context/environment, saved with setjmp(3). */
 	jmp_buf   *tls_jmp;
 };
diff --git a/lib/user_space/uthread.c b/lib/user_space/uthread.c
index e831676..b757457 100644
--- a/lib/user_space/uthread.c
+++ b/lib/user_space/uthread.c
@@ -171,7 +171,6 @@ M0_INTERNAL int m0_threads_once_init(void)
 	if (result == 0)
 		return result;
 
-	(void)pthread_key_delete(tls_key);
  err:
 	m0_free0(&m0_debugger_args[0]); /* harmless even if env_ptr == NULL */
 	return result;
@@ -195,17 +194,17 @@ M0_INTERNAL bool m0_thread_handle_eq(struct m0_thread_handle *h1,
 
 M0_INTERNAL void m0_enter_awkward(void)
 {
-	m0_thread_tls()->tls_is_awkward = true;
+	++m0_thread_tls()->tls_awkward;
 }
 
 M0_INTERNAL void m0_exit_awkward(void)
 {
-	m0_thread_tls()->tls_is_awkward = false;
+	--m0_thread_tls()->tls_awkward;
 }
 
 M0_INTERNAL bool m0_is_awkward(void)
 {
-	return m0_thread_tls()->tls_is_awkward;
+	return m0_thread_tls()->tls_awkward > 0;
 }
 
 /** @} end of thread group */
-- 
1.8.3.2

