From 1cfa80be85e2009fea0bf931f851fef4db4439f2 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Wed, 14 Aug 2013 03:14:58 +0530
Subject: [PATCH 2/2] conf/ut: stop using db5

WIP: Converted conf cannot be tested until converted cob is merged
into origin/be.db branch.
---
 conf/ut/confc.c       |  4 ++++
 conf/ut/rpc_helpers.c | 50 +++++++++++++++++++++++++++++++++++++++++++++-----
 conf/ut/rpc_helpers.h |  6 ++++++
 3 files changed, 55 insertions(+), 5 deletions(-)

diff --git a/conf/ut/confc.c b/conf/ut/confc.c
index bf0841c..8eb58ad 100644
--- a/conf/ut/confc.c
+++ b/conf/ut/confc.c
@@ -367,8 +367,12 @@ static void test_confc_net(void)
 	rc = service_start(&confd);
 	M0_UT_ASSERT(rc == 0);
 
+#if XXX_USE_DB5
 	rc = m0_ut_rpc_machine_start(&mach, g_xprt, CLIENT_ENDPOINT_ADDR,
 				     "ut_confc.db");
+#else
+	rc = m0_ut_rpc_machine_start(&mach, g_xprt, CLIENT_ENDPOINT_ADDR);
+#endif
 	M0_UT_ASSERT(rc == 0);
 
 	confc_test(SERVER_ENDPOINT_ADDR, &mach, NULL);
diff --git a/conf/ut/rpc_helpers.c b/conf/ut/rpc_helpers.c
index e2d0d4b..65145fd 100644
--- a/conf/ut/rpc_helpers.c
+++ b/conf/ut/rpc_helpers.c
@@ -18,7 +18,11 @@
  * Original creation date: 01-Dec-2012
  */
 
-#include "db/db.h"    /* m0_dbenv */
+#if XXX_USE_DB5
+#  include "db/db.h"    /* m0_dbenv */
+#else
+#  include "ut/be.h"    /* m0_ut_backend_init */
+#endif
 #include "cob/cob.h"  /* m0_cob_domain */
 #include "reqh/reqh.h"
 #include "rpc/rpc.h"
@@ -27,30 +31,54 @@ static struct m0_fol             g_fol;
 static struct m0_reqh            g_reqh;
 static struct m0_net_domain      g_net_dom;
 static struct m0_net_buffer_pool g_buf_pool;
-static struct m0_dbenv           g_dbenv;
 static struct m0_cob_domain      g_cob_dom;
+#if XXX_USE_DB5
+static struct m0_dbenv           g_dbenv;
+#else
+static struct m0_be_ut_backend   g_ut_be;
+static struct m0_be_ut_seg       g_ut_seg;
+#endif
 
+#if XXX_USE_DB5
 static int
 cob_init(struct m0_cob_domain *dom, uint32_t dom_id, const char *dbname)
 {
+	const struct m0_cob_domain_id cid = { .id = dom_id };
 	int rc;
 
 	rc = m0_dbenv_init(&g_dbenv, dbname, 0);
 	if (rc != 0)
 		return rc;
 
-	rc = m0_cob_domain_init(dom, &g_dbenv,
-				&(const struct m0_cob_domain_id){
-					.id = dom_id });
+	rc = m0_cob_domain_init(dom, &g_dbenv, &cid);
 	if (rc != 0)
 		m0_dbenv_fini(&g_dbenv);
 	return rc;
 }
+#else
+static int cob_init(struct m0_cob_domain *dom, uint32_t dom_id)
+{
+	const struct m0_cob_domain_id cid = { .id = dom_id };
+	int rc;
+
+	m0_ut_backend_init(&g_ut_be, &g_ut_seg);
+
+	rc = m0_cob_domain_init(dom, &g_ut_be.but_dom, &g_ut_seg.bus_seg, &cid,
+				&ut__txs_sm_group);
+	if (rc != 0)
+		m0_ut_backend_fini(&g_ut_be, &g_ut_seg);
+	return rc;
+}
+#endif /* XXX_USE_DB5 */
 
 static void cob_fini(struct m0_cob_domain *dom)
 {
 	m0_cob_domain_fini(dom);
+#if XXX_USE_DB5
 	m0_dbenv_fini(&g_dbenv);
+#else
+	m0_ut_backend_fini(&g_ut_be, &g_ut_seg);
+#endif
 }
 
 static int net_init(struct m0_net_xprt *xprt, struct m0_net_domain *dom)
@@ -78,9 +106,15 @@ static struct m0_net_xprt *net_xprt(const struct m0_rpc_machine *mach)
 	return mach->rm_tm.ntm_dom->nd_xprt;
 }
 
+#if XXX_USE_DB5
 M0_INTERNAL int m0_ut_rpc_machine_start(struct m0_rpc_machine *mach,
 					struct m0_net_xprt *xprt,
 					const char *ep_addr, const char *dbname)
+#else
+M0_INTERNAL int m0_ut_rpc_machine_start(struct m0_rpc_machine *mach,
+					struct m0_net_xprt *xprt,
+					const char *ep_addr)
+#endif
 {
 	enum {
 		NR_TMS = 1,
@@ -100,13 +134,19 @@ M0_INTERNAL int m0_ut_rpc_machine_start(struct m0_rpc_machine *mach,
 	if (rc != 0)
 		goto net;
 
+#if XXX_USE_DB5
 	rc = cob_init(&g_cob_dom, COB_DOM_ID, dbname);
+#else
+	rc = cob_init(&g_cob_dom, COB_DOM_ID);
+#endif
 	if (rc != 0)
 		goto buf_pool;
 
 	rc = M0_REQH_INIT(&g_reqh,
 			  .rhia_dtm     = (void*)1,
+#if XXX_USE_DB5
 			  .rhia_db      = &g_dbenv,
+#endif
 			  .rhia_mdstore = (void*)1,
 			  .rhia_fol     = &g_fol,
 			  .rhia_svc     = (void*)1);
diff --git a/conf/ut/rpc_helpers.h b/conf/ut/rpc_helpers.h
index 47e2296..9252199 100644
--- a/conf/ut/rpc_helpers.h
+++ b/conf/ut/rpc_helpers.h
@@ -25,10 +25,16 @@ struct m0_net_xprt;
 struct m0_rpc_machine;
 
 /** Initialises net and rpc layers, performs m0_rpc_machine_init(). */
+#if XXX_USE_DB5
 M0_INTERNAL int m0_ut_rpc_machine_start(struct m0_rpc_machine *mach,
 					struct m0_net_xprt *xprt,
 					const char *ep_addr,
 					const char *dbname);
+#else
+M0_INTERNAL int m0_ut_rpc_machine_start(struct m0_rpc_machine *mach,
+					struct m0_net_xprt *xprt,
+					const char *ep_addr);
+#endif
 
 /** Performs m0_rpc_machine_fini(), finalises rpc and net layers. */
 M0_INTERNAL void m0_ut_rpc_machine_stop(struct m0_rpc_machine *mach);
-- 
1.8.3.2

