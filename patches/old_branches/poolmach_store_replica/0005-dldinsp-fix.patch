From bdd6254e51086c3aa68e1715ff61bc2af0b86e27 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Fri, 3 May 2013 09:15:42 +0800
Subject: [PATCH 05/14] dldinsp fix.

---
 pool/pool.c | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/pool/pool.c b/pool/pool.c
index 60b6874..e2ce414 100644
--- a/pool/pool.c
+++ b/pool/pool.c
@@ -48,8 +48,8 @@
    Pool Machine state is stored on persistent storage. When system restarts,
    it will load its data from persistent storage and back to service.
 
-   Pool Machine state is replicated on multiple nodes. Master node (the first
-   node in a pool) is the master node. All other nodes are replica nodes. They
+   Pool Machine state is replicated on multiple nodes. The first node
+   in the pool is master node. All other nodes are replica nodes. They
    keep a cache of this pool machine state. These caches get updated by FOPs.
 
    <hr>
@@ -59,8 +59,8 @@
    Master Pool Machine node. The fist node in a pool stores the pool machine
    states on persistent storage.
 
-   Replica Pool Machine node. Other nodes in a pool cache pool machine states
-   from Master pool Machine node.
+   Replica Pool Machine node. Other nodes in a pool, keep caches of pool
+   machine states from Master pool machine node.
 
    <hr>
    @section pool_mach_store_replica-req Requirements
@@ -83,10 +83,10 @@
    <hr>
    @section pool_mach_store_replica-fspec Functional Specification
    Pool Machine states, including failure vectors, event lists, spare slots
-   usages, etc. will be stored in DB or RVM. Updates to these storage will be
+   usages, etc. are stored in DB or RVM. Updates to these storage will be
    protected by distributed transaction manager.
 
-   When any pool machine state is updated on master node, an unsolicated FOP
+   When any pool machine state is updated on master node, an unsolicited FOP
    (a one-may message) will be delivered to each replica node. When replica
    node gets this message, it should decode update event from the fop and
    update its pool machine state accordingly.
@@ -144,13 +144,13 @@
    in @ref poolmach.
    No new external interfaces are introduced by this feature. To implement
    the data store on persistent storage, DB or RVM interfaces will be used.
-   To send and handle pool machine updates fop, rpc/reqh interfaces will be
+   To send and handle pool machine update fop, rpc/reqh interfaces will be
    used.
 
    <hr>
    @section pool_mach_store_replica-conformance Conformance
    - @b I.DLD.P All pool machine states are stored on persistent storage, using
-                DB or RMV interfaces. These states data can be loaded when
+                DB or RVM interfaces. This states data can be loaded when
                 system re-starts.
    - @b I.DLD.T Updates to the persistent storage will be protected by
                 distributed transaction manager. This will insure the updates
-- 
1.8.3.2

