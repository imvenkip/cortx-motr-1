From f380fcbe8d0fd4f3a44602b8912737bfff30f4c6 Mon Sep 17 00:00:00 2001
From: Andriy Tkachuk <andriy_tkachuk@xyratex.com>
Date: Mon, 16 Dec 2013 23:38:30 +0200
Subject: [PATCH 7/7] stob/linux_adieu: use io_iocb_vector for code clarity

---
 stob/linux_adieu.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/stob/linux_adieu.c b/stob/linux_adieu.c
index bbc13a9..59a8c66 100644
--- a/stob/linux_adieu.c
+++ b/stob/linux_adieu.c
@@ -268,10 +268,10 @@ static int linux_stob_io_launch(struct m0_stob_io *io)
 		qev->iq_io = io;
 		m0_queue_link_init(&qev->iq_linkage);
 
-		iocb->u.c.buf = iov;
+		iocb->u.v.vec = iov;
 		iocb->aio_fildes = lstob->sl_fd;
-		iocb->u.c.nbytes = min32u(frags, IOV_MAX);
-		iocb->u.c.offset = off << LINUX_DOM_BSHIFT(ldom);
+		iocb->u.v.nr = min32u(frags, IOV_MAX);
+		iocb->u.v.offset = off << LINUX_DOM_BSHIFT(ldom);
 
 		switch (io->si_opcode) {
 		case SIO_READ:
@@ -284,7 +284,7 @@ static int linux_stob_io_launch(struct m0_stob_io *io)
 			M0_ASSERT(0);
 		}
 
-		for (i = 0; i < iocb->u.c.nbytes; ++i) {
+		for (i = 0; i < iocb->u.v.nr; ++i) {
 			void        *buf;
 			m0_bindex_t  off;
 
@@ -321,7 +321,7 @@ static int linux_stob_io_launch(struct m0_stob_io *io)
 		       (int)(qev - lio->si_qev), i, io->si_opcode,
 		       (unsigned long)off, (unsigned long)chunk_size);
 		if (result == 0) {
-			iocb->u.c.nbytes = i;
+			iocb->u.v.nr = i;
 			qev->iq_nbytes = chunk_size << LINUX_DOM_BSHIFT(ldom);
 
 			ioq_queue_lock(ldom);
@@ -475,10 +475,10 @@ static void ioq_complete(struct linux_domain *ldom, struct ioq_qev *qev,
 					(unsigned long)qev->iq_nbytes);
 	if (io->si_opcode == SIO_READ && res >= 0 && res < qev->iq_nbytes) {
 		/* fill the rest of the user buffer with zeroes. */
-		struct iovec *iov = iocb->u.c.buf;
+		const struct iovec *iov = iocb->u.v.vec;
 		int i;
 
-		for (i = 0; i < iocb->u.c.nbytes; ++i) {
+		for (i = 0; i < iocb->u.v.nr; ++i) {
 			if (iov->iov_len < res)
 				res -= iov->iov_len;
 			else if (res == 0)
-- 
1.8.3.2

