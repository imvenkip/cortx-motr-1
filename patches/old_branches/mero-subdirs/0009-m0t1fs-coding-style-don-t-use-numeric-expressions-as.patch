From 9e87eaa883b2a45eb634bda2792bf75bcd7acce9 Mon Sep 17 00:00:00 2001
From: Alexander Gattin <alexander_gattin@xyratex.com>
Date: Sun, 10 Feb 2013 00:00:52 +0200
Subject: [PATCH 09/22] m0t1fs/coding-style: don't use numeric expressions as
 booleans

---
 m0t1fs/linux_kernel/dir.c   | 2 +-
 m0t1fs/linux_kernel/inode.c | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/m0t1fs/linux_kernel/dir.c b/m0t1fs/linux_kernel/dir.c
index 90badb2..8ed381b 100644
--- a/m0t1fs/linux_kernel/dir.c
+++ b/m0t1fs/linux_kernel/dir.c
@@ -590,7 +590,7 @@ static int m0t1fs_rmdir(struct inode *dir, struct dentry *dentry)
 
 	M0_ENTRY();
 	rc = m0t1fs_unlink(dir, dentry);
-	if (!rc) {
+	if (rc == 0) {
 		inode_dec_link_count(dentry->d_inode);
 		drop_nlink(dir);
 	}
diff --git a/m0t1fs/linux_kernel/inode.c b/m0t1fs/linux_kernel/inode.c
index 827f73c..9450b45 100644
--- a/m0t1fs/linux_kernel/inode.c
+++ b/m0t1fs/linux_kernel/inode.c
@@ -337,7 +337,7 @@ M0_INTERNAL struct inode *m0t1fs_iget(struct super_block *sb,
 		return ERR_CAST(inode);
 	}
 	
-	if (inode->i_state & I_NEW) {
+	if ((inode->i_state & I_NEW) != 0) {
 		/* New inode, set its fields from @body */
 		err = m0t1fs_inode_read(inode, body);
 	} else if (!(inode->i_state & (I_FREEING | I_CLEAR))) {
@@ -346,7 +346,7 @@ M0_INTERNAL struct inode *m0t1fs_iget(struct super_block *sb,
 	}
 	if (err != 0)
 		goto out_err;
-	if (inode->i_state & I_NEW)
+	if ((inode->i_state & I_NEW) != 0)
 		unlock_new_inode(inode);
 	M0_LEAVE("inode: %p", inode);
 	return inode;
-- 
1.8.3.2

