From 0a8a9a5fd8a95c40d46c438dc42d30d5923b3da3 Mon Sep 17 00:00:00 2001
From: "jinshan.xiong" <jinshan.xiong@clusterstor.com>
Date: Thu, 29 Jul 2010 11:37:40 -0600
Subject: [PATCH 18/34] - replace IOBUF with BULK

---
 fop/fop.c            | 14 +++++++-------
 fop/fop.h            |  4 ++--
 fop/fop_format.c     |  8 ++++----
 fop/fop_format.h     |  2 +-
 fop/fop_format_c.c   |  2 +-
 fop/fop_format_def.h |  2 +-
 net/ksunrpc/kxdr.c   | 44 +++++++++++++++++++++-----------------------
 net/usunrpc/uxdr.c   |  2 +-
 stob/ut/io.ff        |  4 ++--
 9 files changed, 40 insertions(+), 42 deletions(-)

diff --git a/fop/fop.c b/fop/fop.c
index 8f150bc..8711fc7 100644
--- a/fop/fop.c
+++ b/fop/fop.c
@@ -234,22 +234,22 @@ struct c2_fop_field_type C2_FOP_TYPE_U64 = {
 };
 C2_EXPORTED(C2_FOP_TYPE_U64);
 
-struct c2_fop_memlayout atom_iobuf_memlayout = {
+struct c2_fop_memlayout atom_bulk_memlayout = {
 	.fm_uxdr   = (xdrproc_t)NULL,
 	.fm_sizeof = 0
 };
 
-struct c2_fop_field_type C2_FOP_TYPE_IOBUF = {
+struct c2_fop_field_type C2_FOP_TYPE_BULK = {
 	.fft_aggr = FFA_ATOM,
 	.fft_name = "c2_io_buf",
 	.fft_u = {
 		.u_atom = {
-			.a_type = FPF_IOBUF
+			.a_type = FPF_BULK
 		}
 	},
-	.fft_layout = &atom_iobuf_memlayout
+	.fft_layout = &atom_bulk_memlayout
 };
-EXPORT_SYMBOL(C2_FOP_TYPE_IOBUF);
+EXPORT_SYMBOL(C2_FOP_TYPE_BULK);
 
 
 int c2_fops_init(void)
@@ -261,13 +261,13 @@ int c2_fops_init(void)
 	c2_fop_field_type_prepare(&C2_FOP_TYPE_BYTE);
 	c2_fop_field_type_prepare(&C2_FOP_TYPE_U32);
 	c2_fop_field_type_prepare(&C2_FOP_TYPE_U64);
-	c2_fop_field_type_prepare(&C2_FOP_TYPE_IOBUF);
+	c2_fop_field_type_prepare(&C2_FOP_TYPE_BULK);
 	return 0;
 }
 
 void c2_fops_fini(void)
 {
-	c2_fop_field_type_unprepare(&C2_FOP_TYPE_IOBUF);
+	c2_fop_field_type_unprepare(&C2_FOP_TYPE_BULK);
 	c2_fop_field_type_unprepare(&C2_FOP_TYPE_U64);
 	c2_fop_field_type_unprepare(&C2_FOP_TYPE_U32);
 	c2_fop_field_type_unprepare(&C2_FOP_TYPE_BYTE);
diff --git a/fop/fop.h b/fop/fop.h
index 8a6e3e4..fcee07d 100644
--- a/fop/fop.h
+++ b/fop/fop.h
@@ -201,7 +201,7 @@ enum c2_fop_field_primitive_type {
 	FPF_BYTE,
 	FPF_U32,
 	FPF_U64,
-        FPF_IOBUF,
+        FPF_BULK,
 	FPF_NR
 };
 
@@ -238,7 +238,7 @@ extern struct c2_fop_field_type C2_FOP_TYPE_VOID;
 extern struct c2_fop_field_type C2_FOP_TYPE_BYTE;
 extern struct c2_fop_field_type C2_FOP_TYPE_U32;
 extern struct c2_fop_field_type C2_FOP_TYPE_U64;
-extern struct c2_fop_field_type C2_FOP_TYPE_IOBUF;
+extern struct c2_fop_field_type C2_FOP_TYPE_BULK;
 
 int c2_fop_fol_rec_add(struct c2_fop *fop, struct c2_fol *fol,
 		       struct c2_db_tx *tx);
diff --git a/fop/fop_format.c b/fop/fop_format.c
index f874a0c..1d9851f 100644
--- a/fop/fop_format.c
+++ b/fop/fop_format.c
@@ -302,14 +302,14 @@ const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_U64_tfmt = {
 };
 C2_EXPORTED(C2_FOP_TYPE_FORMAT_U64_tfmt);
 
-const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_IOBUF_tfmt = {
-	.ftf_out   = &C2_FOP_TYPE_IOBUF,
+const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_BULK_tfmt = {
+	.ftf_out   = &C2_FOP_TYPE_BULK,
 	.ftf_aggr  = FFA_ATOM,
 	.ftf_name  = "c2_io_buf",
-	.ftf_val   = FPF_IOBUF,
+	.ftf_val   = FPF_BULK,
 	.ftf_child = { [0] = { .c_name = NULL } }
 };
-EXPORT_SYMBOL(C2_FOP_TYPE_FORMAT_IOBUF_tfmt);
+EXPORT_SYMBOL(C2_FOP_TYPE_FORMAT_BULK_tfmt);
 
 
 /** @} end of fop group */
diff --git a/fop/fop_format.h b/fop/fop_format.h
index a9a0944..b3f9da3 100644
--- a/fop/fop_format.h
+++ b/fop/fop_format.h
@@ -93,7 +93,7 @@ extern const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_VOID_tfmt;
 extern const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_BYTE_tfmt;
 extern const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_U32_tfmt;
 extern const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_U64_tfmt;
-extern const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_IOBUF_tfmt;
+extern const struct c2_fop_type_format C2_FOP_TYPE_FORMAT_BULK_tfmt;
 
 #define __paste(x) x ## _tfmt
 #ifndef __layout
diff --git a/fop/fop_format_c.c b/fop/fop_format_c.c
index db7dd35..45346ef 100644
--- a/fop/fop_format_c.c
+++ b/fop/fop_format_c.c
@@ -71,7 +71,7 @@ static const char *atom_name[] = {
 	[FPF_BYTE] = "char",
 	[FPF_U32]  = "uint32_t",
 	[FPF_U64]  = "uint64_t",
-        [FPF_IOBUF] = "struct c2_io_buf"
+        [FPF_BULK] = "struct c2_io_buf"
 };
 
 static void type_prefix(const char *name, char *buf)
diff --git a/fop/fop_format_def.h b/fop/fop_format_def.h
index 1a8b296..e941069 100644
--- a/fop/fop_format_def.h
+++ b/fop/fop_format_def.h
@@ -23,7 +23,7 @@
 #define U64 C2_FOP_TYPE_FORMAT_U64
 #define BYTE C2_FOP_TYPE_FORMAT_BYTE
 #define VOID C2_FOP_TYPE_FORMAT_VOID
-#define IOBUF C2_FOP_TYPE_FORMAT_IOBUF
+#define BULK C2_FOP_TYPE_FORMAT_BULK
 
 #define RECORD FFA_RECORD
 #define UNION FFA_UNION
diff --git a/net/ksunrpc/kxdr.c b/net/ksunrpc/kxdr.c
index 598e18e..cb2ab3d 100644
--- a/net/ksunrpc/kxdr.c
+++ b/net/ksunrpc/kxdr.c
@@ -260,27 +260,25 @@ static int kxdr_typedef(struct kxdr_ctx *ctx, void *obj)
 	return ftype_subxdr(ctx, obj, 0, 0);
 }
 
-static int kxdr_iobuf_enc(struct kxdr_ctx *ctx, void *obj)
+static int kxdr_bulk_enc(struct kxdr_ctx *ctx, void *obj)
 {
         int result;
         struct c2_io_buf *dbuf = obj;
-        int (*encode_u32)(struct kxdr_ctx *, void *);
 
-        encode_u32 = atom_kxdr[ctx->kc_what][FPF_U32];
-        result = encode_u32(ctx, &dbuf->cib_align);
+	result = atom_kxdr[ctx->kc_what][FPF_U32](ctx, &dbuf->cib_align);
         if (result)
                 return result;
 
-        result = encode_u32(ctx, &dbuf->cib_count);
+	result = atom_kxdr[ctx->kc_what][FPF_U32](ctx, &dbuf->cib_count);
         if (result)
                 return result;
 
         xdr_write_pages(ctx->kc_xdr, dbuf->cib_pages, dbuf->cib_pgoff,
                         dbuf->cib_npages);
-       return 0;
+        return 0;
 }
 
-static int kxdr_iobuf_dec(struct kxdr_ctx *ctx, void *obj)
+static int kxdr_bulk_dec(struct kxdr_ctx *ctx, void *obj)
 {
         struct c2_io_buf *dbuf = obj;
 	int      result;
@@ -297,7 +295,7 @@ static int kxdr_iobuf_dec(struct kxdr_ctx *ctx, void *obj)
         return 0;
 }
 
-static int kxdr_iobuf_rep(struct kxdr_ctx *ctx, void *obj)
+static int kxdr_bulk_rep(struct kxdr_ctx *ctx, void *obj)
 {
         struct c2_io_buf *dbuf = obj;
         struct rpc_auth *auth;
@@ -320,25 +318,25 @@ static int kxdr_atom_rep(struct kxdr_ctx *ctx, void *obj)
 
 static int (*atom_kxdr[KNR][FPF_NR])(struct kxdr_ctx *ctx, void *obj) = {
 	[KENC] = {
-		[FPF_VOID]  = (void *)&c2_kvoid_encode,
-		[FPF_BYTE]  = NULL,
-		[FPF_U32]   = (void *)&c2_ku32_encode,
-		[FPF_U64]   = (void *)&c2_ku64_encode,
-                [FPF_IOBUF] = (void *)&kxdr_iobuf_enc
+		[FPF_VOID] = (void *)&c2_kvoid_encode,
+		[FPF_BYTE] = NULL,
+		[FPF_U32]  = (void *)&c2_ku32_encode,
+		[FPF_U64]  = (void *)&c2_ku64_encode,
+                [FPF_BULK] = (void *)&kxdr_bulk_enc
 	},
 	[KDEC] = {
-		[FPF_VOID]  = (void *)&c2_kvoid_decode,
-		[FPF_BYTE]  = NULL,
-		[FPF_U32]   = (void *)&c2_ku32_decode,
-		[FPF_U64]   = (void *)&c2_ku64_decode,
-                [FPF_IOBUF] = (void *)&kxdr_iobuf_dec
+		[FPF_VOID] = (void *)&c2_kvoid_decode,
+		[FPF_BYTE] = NULL,
+		[FPF_U32]  = (void *)&c2_ku32_decode,
+		[FPF_U64]  = (void *)&c2_ku64_decode,
+                [FPF_BULK] = (void *)&kxdr_bulk_dec
 	},
         [KREP] = {
-		[FPF_VOID]  = (void *)&kxdr_atom_rep,
-		[FPF_BYTE]  = (void *)&kxdr_atom_rep,
-		[FPF_U32]   = (void *)&kxdr_atom_rep,
-		[FPF_U64]   = (void *)&kxdr_atom_rep,
-                [FPF_IOBUF] = (void *)&kxdr_iobuf_rep
+		[FPF_VOID] = (void *)&kxdr_atom_rep,
+		[FPF_BYTE] = (void *)&kxdr_atom_rep,
+		[FPF_U32]  = (void *)&kxdr_atom_rep,
+		[FPF_U64]  = (void *)&kxdr_atom_rep,
+                [FPF_BULK] = (void *)&kxdr_bulk_rep
         }
 };
 
diff --git a/net/usunrpc/uxdr.c b/net/usunrpc/uxdr.c
index e4b37be..8e069ef 100644
--- a/net/usunrpc/uxdr.c
+++ b/net/usunrpc/uxdr.c
@@ -54,7 +54,7 @@ static const xdrproc_t atom_xdr[FPF_NR] = {
 	[FPF_BYTE] = NULL,
 	[FPF_U32]  = (xdrproc_t)&xdr_uint32_t,
 	[FPF_U64]  = (xdrproc_t)&xdr_uint64_t,
-        [FPF_IOBUF] = (xdrproc_t)&c2_xdr_io_buf
+        [FPF_BULK] = (xdrproc_t)&c2_xdr_io_buf
 };
 
 static xdrproc_t ftype_field_xdr(const struct c2_fop_field_type *ftype,
diff --git a/stob/ut/io.ff b/stob/ut/io.ff
index e718181..faebcca 100644
--- a/stob/ut/io.ff
+++ b/stob/ut/io.ff
@@ -26,7 +26,7 @@ DEF(c2_io_vec, SEQUENCE,
 DEF(c2_io_write, RECORD,
     _(siw_object, c2_fop_fid),
     _(siw_offset, U64),
-    _(siw_buf, IOBUF));
+    _(siw_buf, BULK));
 
 DEF(c2_io_write_rep, RECORD,
     _(siwr_rc, U32),
@@ -38,7 +38,7 @@ DEF(c2_io_read, RECORD,
 
 DEF(c2_io_read_rep, RECORD,
     _(sirr_rc, U32),
-    _(sirr_buf, IOBUF));
+    _(sirr_buf, BULK));
 
 DEF(c2_io_create, RECORD,
     _(sic_object, c2_fop_fid));
-- 
1.8.3.2

