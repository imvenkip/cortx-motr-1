From 4e45815443b68e1699c73f0b361b06d6f7a42b95 Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Thu, 31 Jan 2013 15:54:34 +0200
Subject: [PATCH 20/99] added kernel module, fixed net-test scripts

---
 Makefile.am                        |   8 +--
 build_kernel_modules/m0netperfd.ko |   1 -
 configure.ac                       |   9 +--
 mero/init.c                        |   4 ++
 net/test/.gitignore                |   4 +-
 net/test/linux_kernel/Makefile.in  |   8 ++-
 net/test/linux_kernel/node_k.c     | 109 +++++++------------------------------
 net/test/m0netperf.sh.in           |  22 --------
 net/test/m0netperfd.sh.in          |  22 --------
 net/test/m0nettest.sh.in           |  25 +++++++++
 net/test/m0nettestd.sh.in          |  25 +++++++++
 net/test/node.c                    |  40 ++++++++++++++
 net/test/node.h                    |   8 +++
 net/test/st/run-1x1.sh             |   1 +
 net/test/st/st-config.sh.in        |   9 ++-
 net/test/st/st.sh                  |   0
 net/test/test-user.sh.in           |  10 ++--
 net/test/test.sh                   |   2 +-
 net/test/user_space/.gitignore     |   4 +-
 net/test/user_space/Makefile.sub   |   4 +-
 net/test/user_space/console_u.c    |   2 +-
 net/test/user_space/node_u.c       |  13 ++++-
 utils/m0netperf                    |   1 -
 utils/m0netperfd                   |   1 -
 utils/m0nettest                    |   1 +
 utils/m0nettestd                   |   1 +
 26 files changed, 169 insertions(+), 165 deletions(-)
 delete mode 120000 build_kernel_modules/m0netperfd.ko
 delete mode 100755 net/test/m0netperf.sh.in
 delete mode 100755 net/test/m0netperfd.sh.in
 create mode 100755 net/test/m0nettest.sh.in
 create mode 100755 net/test/m0nettestd.sh.in
 mode change 100644 => 100755 net/test/st/st.sh
 delete mode 120000 utils/m0netperf
 delete mode 120000 utils/m0netperfd
 create mode 120000 utils/m0nettest
 create mode 120000 utils/m0nettestd

diff --git a/Makefile.am b/Makefile.am
index 0611516..3c29300 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -423,12 +423,12 @@ include $(top_srcdir)/net/lnet/st/Makefile.sub
 # net/test
 #
 
-noinst_PROGRAMS                     += net/test/user_space/m0netperf
-net_test_user_space_m0netperf_LDADD  = $(top_builddir)/mero/libmero.la \
+noinst_PROGRAMS                     += net/test/user_space/m0nettest
+net_test_user_space_m0nettest_LDADD  = $(top_builddir)/mero/libmero.la \
                                        $(top_builddir)/net/test/libmero-net-test.la
 
-noinst_PROGRAMS                      += net/test/user_space/m0netperfd
-net_test_user_space_m0netperfd_LDADD  = $(top_builddir)/mero/libmero.la \
+noinst_PROGRAMS                      += net/test/user_space/m0nettestd
+net_test_user_space_m0nettestd_LDADD  = $(top_builddir)/mero/libmero.la \
                                         $(top_builddir)/net/test/libmero-net-test.la
 
 include $(top_srcdir)/net/test/user_space/Makefile.sub
diff --git a/build_kernel_modules/m0netperfd.ko b/build_kernel_modules/m0netperfd.ko
deleted file mode 120000
index 2080708..0000000
--- a/build_kernel_modules/m0netperfd.ko
+++ /dev/null
@@ -1 +0,0 @@
-../net/test/linux_kernel/m0netperfd.ko
\ No newline at end of file
diff --git a/configure.ac b/configure.ac
index 46fd4a6..614e34f 100644
--- a/configure.ac
+++ b/configure.ac
@@ -544,10 +544,11 @@ AC_CONFIG_FILES([mero.spec])
 AC_CONFIG_FILES([addb/dump/m0addbdump.sh], [chmod +x addb/dump/m0addbdump.sh])
 AC_CONFIG_FILES([m0t1fs/linux_kernel/st/common.sh],
                 [chmod +x m0t1fs/linux_kernel/st/common.sh])
-AC_CONFIG_FILES([net/test/m0netperf.sh], [chmod + net/test/m0netperf.sh])
-AC_CONFIG_FILES([net/test/m0netperfd.sh], [chmod + net/test/m0netperfd.sh])
-AC_CONFIG_FILES([net/test/test-user.sh], [chmod + net/test/test-user.sh])
-AC_CONFIG_FILES([net/test/st/st-config.sh], [chmod + net/test/st/st-config.sh])
+AC_CONFIG_FILES([net/test/m0nettest.sh], [chmod +x net/test/m0nettest.sh])
+AC_CONFIG_FILES([net/test/m0nettestd.sh], [chmod +x net/test/m0nettestd.sh])
+AC_CONFIG_FILES([net/test/test-user.sh], [chmod +x net/test/test-user.sh])
+AC_CONFIG_FILES([net/test/st/st-config.sh], [chmod +x net/test/st/st-config.sh])
+AC_CONFIG_FILES([net/test/demo/demo-config.sh], [chmod +x net/test/demo/demo-config.sh])
 AC_CONFIG_FILES([utils/ut.sh], [chmod +x utils/ut.sh])
 AC_CONFIG_FILES([utils/linux_kernel/ut.sh], [chmod +x utils/linux_kernel/ut.sh])
 
diff --git a/mero/init.c b/mero/init.c
index 67390b5..5a18621 100644
--- a/mero/init.c
+++ b/mero/init.c
@@ -51,6 +51,7 @@
 #ifdef __KERNEL__
 #  include "m0t1fs/linux_kernel/m0t1fs.h"
 #  include "build_kernel_modules/dummy_init_fini.h"
+#  include "net/test/initfini.h"	/* m0_net_test_init */
 #else
 #  include "conf/confd.h"       /* m0_confd_register */
 #  include "conf/addb.h"        /* m0_conf_addb_init */
@@ -108,6 +109,9 @@ struct init_fini_call subsystem[] = {
 	   type for network descriptors. */
 	{ &m0_fops_init,        &m0_fops_fini,        "fop" },
 	{ &m0_net_init,         &m0_net_fini,         "net" },
+#ifdef __KERNEL__
+	{ &m0_net_test_init,    &m0_net_test_fini,    "net-test" },
+#endif
 	{ &m0_reqhs_init,       &m0_reqhs_fini,       "reqhs" },
 	{ &m0_rpc_init,         &m0_rpc_fini,         "rpc" },
 	/* fom generic must be after rpc, because it initialises rpc item
diff --git a/net/test/.gitignore b/net/test/.gitignore
index 2c659e1..bbd1011 100644
--- a/net/test/.gitignore
+++ b/net/test/.gitignore
@@ -1,3 +1,3 @@
-m0netperf.sh
-m0netperfd.sh
+m0nettest.sh
+m0nettestd.sh
 test-user.sh
diff --git a/net/test/linux_kernel/Makefile.in b/net/test/linux_kernel/Makefile.in
index 304c3d2..410f912 100644
--- a/net/test/linux_kernel/Makefile.in
+++ b/net/test/linux_kernel/Makefile.in
@@ -1,13 +1,15 @@
-NET_TEST_SRCDIR	:= @SRCDIR@/net/test/linux_kernel
-NET_TEST	:= m0netperfd
+NET_TEST_SRCDIR	:= @ABS_SRCDIR@/net/test/linux_kernel
+NET_TEST	:= m0nettestd
 
 shared_src	:=
 kernel_src	:= node_k.c
 
 obj-m		:= $(NET_TEST).o
 $(NET_TEST)-y	:= $(shared_src:.c=.o) $(kernel_src:.c=.o)
+orig        	:= $(shared_src:%=../%)
 
-EXTRA_CFLAGS = -DHAVE_CONFIG_H -I@SRCDIR@ @KCFLAGS@
+EXTRA_CFLAGS 	= -DHAVE_CONFIG_H -I@top_srcdir@ \
+		  @M0_KCPPFLAGS@ @M0_KCFLAGS@ @KCFLAGS@
 
 prepare:
 	true
diff --git a/net/test/linux_kernel/node_k.c b/net/test/linux_kernel/node_k.c
index 376ac7d..b5fb8d0 100644
--- a/net/test/linux_kernel/node_k.c
+++ b/net/test/linux_kernel/node_k.c
@@ -18,116 +18,47 @@
  * Original creation date: 4/10/2012
  */
 
-/** @todo proper kernel module init */
-/* node_config_k.h */
-#if 0
-#include "net/test/node_config.h"
-
-/*
-   Set m0_net_test_node_config structure according to kernel module parameters.
- */
-int m0_net_test_node_config_init(struct m0_net_test_node_config *cfg);
-
-/**
-   Finalize m0_net_test_node_config structure (free memory etc.)
- */
-void m0_net_test_node_config_fini(struct m0_net_test_node_config *cfg);
-#endif
-
-/* node_config_k.c */
-#if 0
-#include <linux/module.h>
-#include <linux/kernel.h>
-
-#include "net/test/linux_kernel/node_config_k.h"
-
-static char *node_role	      = NULL;
-static char *test_type	      = NULL;
-static long  count	      = M0_NET_TEST_CONFIG_COUNT_DEFAULT;
-static long  size	      = M0_NET_TEST_CONFIG_SIZE_DEFAULT;
-static char *console	      = M0_NET_TEST_CONFIG_CONSOLE_DEFAULT;
-static char *target[M0_NET_TEST_CONFIG_TARGETS_MAX];
-static int   target_nr        = 0;
-
-module_param(node_role, charp, S_IRUGO);
-MODULE_PARM_DESC(node_role, "node role: can be client or server");
-
-module_param(test_type, charp, S_IRUGO);
-MODULE_PARM_DESC(test_type, "test type: can be ping or bulk");
-
-module_param(count, long, S_IRUGO);
-MODULE_PARM_DESC(count,
-		"number of test messages which need to be send to test server");
-
-module_param(size, long, S_IRUGO);
-MODULE_PARM_DESC(size, "bulk test message size");
-
-module_param(console, charp, S_IRUGO);
-MODULE_PARM_DESC(console, "console address");
-
-module_param_array(target, charp, &target_nr, S_IRUGO);
-MODULE_PARM_DESC(target, "test targets");
-
-int m0_net_test_node_config_init(struct m0_net_test_node_config *cfg)
-{
-	int i;
-
-	/** @todo remove it. debug only */
-	printk(KERN_INFO "node_role = %s\n",  node_role);
-	printk(KERN_INFO "test_type = %s\n",  test_type);
-	printk(KERN_INFO "count     = %ld\n", count);
-	printk(KERN_INFO "size      = %ld\n", size);
-	printk(KERN_INFO "console   = %s\n",  console);
-	printk(KERN_INFO "target    = \n");
-
-	for (i = 0; i < target_nr; ++i)
-		printk(KERN_INFO "%s\n", target[i]);
-	printk(KERN_INFO "end of target\n");
-
-	/** @todo implement */
-
-	return -ENOSYS;
-}
-
-void m0_net_test_node_config_fini(struct m0_net_test_node_config *cfg)
-{
-}
-#endif
-
-#if 0
 #include <linux/module.h>
 #include <linux/kernel.h>
 #include <linux/init.h>
 
-#include "net/test/node_main.h"
-#include "net/test/linux_kernel/node_config_k.h"
+#include "net/test/node.h"
 
 MODULE_AUTHOR("Xyratex International");
 MODULE_DESCRIPTION("Mero Network Benchmark Module");
 MODULE_LICENSE("proprietary");
 
-static struct m0_net_test_node_config node_config;
+static char	    *addr = NULL;
+static char	    *addr_console = NULL;
+static unsigned long timeout = 3;
+
+module_param(addr, charp, S_IRUGO);
+MODULE_PARM_DESC(node_role, "endpoint address for node commands");
+
+module_param(addr_console, charp, S_IRUGO);
+MODULE_PARM_DESC(node_role, "endpoint address for console commands");
+
+module_param(timeout, ulong, S_IRUGO);
+MODULE_PARM_DESC(timeout, "command send timeout, seconds");
 
 static int __init m0_net_test_module_init(void)
 {
-	int rc;
-
-	rc = m0_net_test_node_config_init(&node_config);
-	if (rc == 0)
-		rc = m0_net_test_init(&node_config);
+	struct m0_net_test_node_cfg cfg = {
+		.ntnc_addr	   = addr,
+		.ntnc_addr_console = addr_console,
+		.ntnc_send_timeout = M0_MKTIME(timeout, 0),
+	};
 
-	return rc;
+	return m0_net_test_node_module_initfini(&cfg);
 }
 
 static void __exit m0_net_test_module_fini(void)
 {
-	m0_net_test_fini();
-	m0_net_test_node_config_fini(&node_config);
+	m0_net_test_node_module_initfini(NULL);
 }
 
 module_init(m0_net_test_module_init)
 module_exit(m0_net_test_module_fini)
-#endif
 
 /*
  *  Local variables:
diff --git a/net/test/m0netperf.sh.in b/net/test/m0netperf.sh.in
deleted file mode 100755
index f48338d..0000000
--- a/net/test/m0netperf.sh.in
+++ /dev/null
@@ -1,22 +0,0 @@
-#! /bin/sh
-
-# Small wrapper to run net-test console, which depends on m0mero module
-
-if [ "$(id -u)" -ne 0 ]; then
-    echo "Must be run as root"
-    exit 1
-fi
-
-. @SRCDIR@/m0t1fs/linux_kernel/st/common.sh
-
-unload_all() {
-    modunload
-    modunload_galois
-}
-trap unload_all EXIT
-
-modprobe_lnet
-modload_galois
-modload || exit $?
-
-@SRCDIR@/net/test/user_space/m0netperf "$@"
diff --git a/net/test/m0netperfd.sh.in b/net/test/m0netperfd.sh.in
deleted file mode 100755
index a4f1842..0000000
--- a/net/test/m0netperfd.sh.in
+++ /dev/null
@@ -1,22 +0,0 @@
-#! /bin/sh
-
-# Small wrapper to run net-test console, which depends on m0mero module
-
-if [ "$(id -u)" -ne 0 ]; then
-    echo "Must be run as root"
-    exit 1
-fi
-
-. @SRCDIR@/m0t1fs/linux_kernel/st/common.sh
-
-unload_all() {
-    modunload
-    modunload_galois
-}
-trap unload_all EXIT
-
-modprobe_lnet
-modload_galois
-modload || exit $?
-
-@SRCDIR@/net/test/user_space/ntn "$@"
diff --git a/net/test/m0nettest.sh.in b/net/test/m0nettest.sh.in
new file mode 100755
index 0000000..cb33022
--- /dev/null
+++ b/net/test/m0nettest.sh.in
@@ -0,0 +1,25 @@
+#! /bin/sh
+
+# Small wrapper to run net-test console, which depends on m0mero module
+
+if [ "$(id -u)" -ne 0 ]; then
+    echo "Must be run as root"
+    exit 1
+fi
+
+# Assign a node uuid for the user space UT (addb/ut/addb_ut.c)
+NODE_UUID="abcdef01-2345-6789-0123-456789ABCDEF"
+
+. @ABS_SRCDIR@/m0t1fs/linux_kernel/st/common.sh
+
+unload_all() {
+    modunload
+    modunload_galois
+}
+trap unload_all EXIT
+
+modprobe_lnet
+modload_galois
+modload || exit $?
+
+@ABS_SRCDIR@/net/test/user_space/m0nettest "$@"
diff --git a/net/test/m0nettestd.sh.in b/net/test/m0nettestd.sh.in
new file mode 100755
index 0000000..f85cc5d
--- /dev/null
+++ b/net/test/m0nettestd.sh.in
@@ -0,0 +1,25 @@
+#! /bin/sh
+
+# Small wrapper to run net-test console, which depends on m0mero module
+
+if [ "$(id -u)" -ne 0 ]; then
+    echo "Must be run as root"
+    exit 1
+fi
+
+# Assign a node uuid for the user space UT (addb/ut/addb_ut.c)
+NODE_UUID="abcdef01-2345-6789-0123-456789ABCDEF"
+
+. @ABS_SRCDIR@/m0t1fs/linux_kernel/st/common.sh
+
+unload_all() {
+    modunload
+    modunload_galois
+}
+trap unload_all EXIT
+
+modprobe_lnet
+modload_galois
+modload || exit $?
+
+@ABS_SRCDIR@/net/test/user_space/m0nettestd "$@"
diff --git a/net/test/node.c b/net/test/node.c
index 83df2f3..ea48f5f 100644
--- a/net/test/node.c
+++ b/net/test/node.c
@@ -934,6 +934,46 @@ void m0_net_test_node_stop(struct m0_net_test_node_ctx *ctx)
 	m0_thread_fini(&ctx->ntnc_thread);
 }
 
+static struct m0_net_test_node_ctx *m0_net_test_node_module_ctx = NULL;
+
+int m0_net_test_node_module_initfini(struct m0_net_test_node_cfg *cfg)
+{
+	int rc = 0;
+
+	if (cfg == NULL)
+		goto fini;
+	if (cfg == NULL || cfg->ntnc_addr == NULL ||
+	    cfg->ntnc_addr_console == NULL ||
+	    cfg->ntnc_send_timeout == 0) {
+		rc = -EINVAL;
+		goto fail;
+	}
+
+	M0_ALLOC_PTR(m0_net_test_node_module_ctx);
+	if (m0_net_test_node_module_ctx == NULL) {
+		rc = -ENOMEM;
+		goto fail;
+	}
+	rc = m0_net_test_node_init(m0_net_test_node_module_ctx, cfg);
+	if (rc != 0)
+		goto free_ctx;
+	rc = m0_net_test_node_start(m0_net_test_node_module_ctx);
+	if (rc != 0)
+		goto fini_node;
+
+	goto success;
+fini:
+	m0_net_test_node_stop(m0_net_test_node_module_ctx);
+fini_node:
+	m0_net_test_node_fini(m0_net_test_node_module_ctx);
+free_ctx:
+	m0_free(m0_net_test_node_module_ctx);
+fail:
+success:
+	return rc;
+}
+M0_EXPORTED(m0_net_test_node_module_initfini);
+
 /**
    @} end of NetTestNodeInternals group
  */
diff --git a/net/test/node.h b/net/test/node.h
index 7f11445..8677f56 100644
--- a/net/test/node.h
+++ b/net/test/node.h
@@ -206,6 +206,7 @@ struct m0_net_test_node_ctx {
 	/**
 	   Exit flag for the node thread.
 	   Node thread will check this flag and will terminate if it is set.
+	   @todo make it atomic
 	 */
 	bool			       ntnc_exit_flag;
 	/** Error code. Set in node thread if something goes wrong. */
@@ -254,6 +255,13 @@ int m0_net_test_node_start(struct m0_net_test_node_ctx *ctx);
 void m0_net_test_node_stop(struct m0_net_test_node_ctx *ctx);
 
 /**
+   Helper for kernel module node.
+   This function is M0_EXPORTED, so it can be called from m0nettest.ko.
+   @param cfg node configuration. Call with NULL value to finalize.
+ */
+int m0_net_test_node_module_initfini(struct m0_net_test_node_cfg *cfg);
+
+/**
    @} end of NetTestNodeDFS group
  */
 
diff --git a/net/test/st/run-1x1.sh b/net/test/st/run-1x1.sh
index 7f07620..37e9e3d 100644
--- a/net/test/st/run-1x1.sh
+++ b/net/test/st/run-1x1.sh
@@ -33,6 +33,7 @@ unload_all() {
 	eval_kill_pid "PID_CONSOLE"
 	for pid in $KILL_PID; do
 		kill $pid > /dev/null 2>&1 || true
+		wait $pid > /dev/null 2>&1 || true
 	done
 	modunload
 	modunload_galois
diff --git a/net/test/st/st-config.sh.in b/net/test/st/st-config.sh.in
index 55a3243..1f31802 100644
--- a/net/test/st/st-config.sh.in
+++ b/net/test/st/st-config.sh.in
@@ -1,9 +1,12 @@
 #!/bin/sh
 
+# Assign a node uuid for the user space UT (addb/ut/addb_ut.c)
+NODE_UUID="abcdef01-2345-6789-0123-456789ABCDEF"
+
 # Path to binaries
-NTN=@SRCDIR@/net/test/user_space/ntn
-NTC=@SRCDIR@/net/test/user_space/ntc
-ST_COMMON=@SRCDIR@/m0t1fs/linux_kernel/st/common.sh
+NTN=@ABS_SRCDIR@/net/test/user_space/m0nettestd
+NTC=@ABS_SRCDIR@/net/test/user_space/m0nettest
+ST_COMMON=@ABS_SRCDIR@/m0t1fs/linux_kernel/st/common.sh
 
 # Time to wait for node loading.
 # Timeout is used here because there is no way to check for node readiness
diff --git a/net/test/st/st.sh b/net/test/st/st.sh
old mode 100644
new mode 100755
diff --git a/net/test/test-user.sh.in b/net/test/test-user.sh.in
index fbf542b..8a0adec 100755
--- a/net/test/test-user.sh.in
+++ b/net/test/test-user.sh.in
@@ -29,7 +29,7 @@ if [ $1 != "console" -a $1 != "server" -a $1 != "client" ]; then
 	exit
 fi
 
-. @SRCDIR@/m0t1fs/linux_kernel/st/common.sh
+. @ABS_SRCDIR@/m0t1fs/linux_kernel/st/common.sh
 
 unload_all() {
     modunload
@@ -42,7 +42,7 @@ modload_galois
 modload || exit $?
 
 JOB_IDS=
-SCRIPT=@SRCDIR@/net/test/test-user.sh
+SCRIPT=@ABS_SRCDIR@/net/test/test-user.sh
 
 PID=12345
 PORTAL=42
@@ -62,7 +62,7 @@ job_id_add() {
 }
 
 run_console() {
-	@SRCDIR@/net/test/user_space/m0netperf \
+	@ABS_SRCDIR@/net/test/user_space/m0nettest \
 		-t $TEST_TYPE \
 		-n $MSG_NR \
 		-s $MSG_SIZE \
@@ -78,14 +78,14 @@ run_console() {
 }
 
 run_server() {
-	@SRCDIR@/net/test/user_space/m0netperfd \
+	@ABS_SRCDIR@/net/test/user_space/m0nettestd \
 		-a "$SERVER_IF:$PID:$PORTAL:200" \
 		-c "$CONSOLE_IF:$PID:$PORTAL:100" &
 	job_id_add
 }
 
 run_client() {
-	@SRCDIR@/net/test/user_space/m0netperfd \
+	@ABS_SRCDIR@/net/test/user_space/m0nettestd \
 		-a "$CLIENT_IF:$PID:$PORTAL:300" \
 		-c "$CONSOLE_IF:$PID:$PORTAL:101" &
 	job_id_add
diff --git a/net/test/test.sh b/net/test/test.sh
index 29f68221..6f239d9 100755
--- a/net/test/test.sh
+++ b/net/test/test.sh
@@ -16,7 +16,7 @@ fi
 . m0t1fs/linux_kernel/st/common.sh
 
 MODLIST="build_kernel_modules/m0mero.ko"
-MODMAIN="net/test/linux_kernel/m0netperfd.ko"
+MODMAIN="net/test/linux_kernel/m0nettestd.ko"
 
 log='/var/log/kern'
 if [ ! -e "$log" ]; then
diff --git a/net/test/user_space/.gitignore b/net/test/user_space/.gitignore
index 65c0aa7..53884e2 100644
--- a/net/test/user_space/.gitignore
+++ b/net/test/user_space/.gitignore
@@ -1,2 +1,2 @@
-m0netperf
-m0netperfd
+m0nettest
+m0nettestd
diff --git a/net/test/user_space/Makefile.sub b/net/test/user_space/Makefile.sub
index 405fd5a..6d599f4 100644
--- a/net/test/user_space/Makefile.sub
+++ b/net/test/user_space/Makefile.sub
@@ -1,7 +1,7 @@
-net_test_user_space_m0netperf_SOURCES  = net/test/user_space/common_u.c \
+net_test_user_space_m0nettest_SOURCES  = net/test/user_space/common_u.c \
 					 net/test/user_space/common_u.h \
 					 net/test/user_space/console_u.c
 
-net_test_user_space_m0netperfd_SOURCES  = net/test/user_space/common_u.c \
+net_test_user_space_m0nettestd_SOURCES  = net/test/user_space/common_u.c \
 					  net/test/user_space/common_u.h \
 					  net/test/user_space/node_u.c
diff --git a/net/test/user_space/console_u.c b/net/test/user_space/console_u.c
index d8cb198..a136d06 100644
--- a/net/test/user_space/console_u.c
+++ b/net/test/user_space/console_u.c
@@ -271,7 +271,7 @@ static int configure(int argc, char *argv[],
 			cfg->ntcc_##name = m0_net_test_u_str_copy(str);	\
 		}))
 
-	M0_GETOPTS("m0netperf", argc, argv,
+	M0_GETOPTS("m0nettest", argc, argv,
 		ASCIIZ_ARG(addr_console4servers),
 		ASCIIZ_ARG(addr_console4clients),
 		SLIST_ARG(servers),
diff --git a/net/test/user_space/node_u.c b/net/test/user_space/node_u.c
index ef57847..3f7c6dc 100644
--- a/net/test/user_space/node_u.c
+++ b/net/test/user_space/node_u.c
@@ -34,7 +34,16 @@
 
 /**
    @page net-test-fspec-cli-node-user Test node command line pamameters
-   @todo write
+   $ net/test/m0nettestd.sh -?
+   Usage: m0nettestd options...
+
+   where valid options are
+
+	 -a     string: Test node commands endpoint
+	 -c     string: Test console commands endpoint
+	 -v           : Verbose output
+	 -l           : List available LNET interfaces
+	 -?           : display this help and exit
  */
 
 /**
@@ -70,7 +79,7 @@ static int configure(int argc, char *argv[], struct m0_net_test_node_cfg *cfg)
 {
 	bool list_if = false;
 
-	M0_GETOPTS("ntn", argc, argv,
+	M0_GETOPTS("m0nettestd", argc, argv,
 		M0_STRINGARG('a', "Test node commands endpoint",
 		LAMBDA(void, (const char *addr) {
 			cfg->ntnc_addr = m0_net_test_u_str_copy(addr);
diff --git a/utils/m0netperf b/utils/m0netperf
deleted file mode 120000
index 6bb58b3..0000000
--- a/utils/m0netperf
+++ /dev/null
@@ -1 +0,0 @@
-../net/test/user_space/m0netperf
\ No newline at end of file
diff --git a/utils/m0netperfd b/utils/m0netperfd
deleted file mode 120000
index b1ba8cd..0000000
--- a/utils/m0netperfd
+++ /dev/null
@@ -1 +0,0 @@
-../net/test/user_space/m0netperfd
\ No newline at end of file
diff --git a/utils/m0nettest b/utils/m0nettest
new file mode 120000
index 0000000..3f85e47
--- /dev/null
+++ b/utils/m0nettest
@@ -0,0 +1 @@
+../net/test/user_space/m0nettest
\ No newline at end of file
diff --git a/utils/m0nettestd b/utils/m0nettestd
new file mode 120000
index 0000000..0d3983b
--- /dev/null
+++ b/utils/m0nettestd
@@ -0,0 +1 @@
+../net/test/user_space/m0nettestd
\ No newline at end of file
-- 
1.8.3.2

