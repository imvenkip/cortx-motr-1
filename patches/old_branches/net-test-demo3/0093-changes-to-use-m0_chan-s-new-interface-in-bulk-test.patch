From 2e3ff51966d1104b2c814d546c8726b38d4705ec Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Tue, 5 Mar 2013 03:05:19 +0200
Subject: [PATCH 93/99] changes to use m0_chan's new interface in bulk test

---
 net/lnet/lnet_tm.c   |  7 ++++++-
 net/test/node_bulk.c | 25 ++++++++++++++++---------
 2 files changed, 22 insertions(+), 10 deletions(-)

diff --git a/net/lnet/lnet_tm.c b/net/lnet/lnet_tm.c
index bf6ff8a..a7ec445 100644
--- a/net/lnet/lnet_tm.c
+++ b/net/lnet/lnet_tm.c
@@ -209,7 +209,12 @@ static void nlx_tm_ev_worker(struct m0_net_transfer_mc *tm)
 				rc = nlx_core_buf_event_wait(cd, ctp, timeout);
 				m0_mutex_lock(&tm->ntm_mutex);
 				if (rc == 0 && tp->xtm_ev_chan != NULL) {
-					m0_chan_signal(tp->xtm_ev_chan);
+					if (tp->xtm_ev_chan == &tm->ntm_chan) {
+						m0_chan_signal(tp->xtm_ev_chan);
+					} else {
+						m0_chan_signal_lock(
+							tp->xtm_ev_chan);
+					}
 					tp->xtm_ev_chan = NULL;
 				}
 			}
diff --git a/net/test/node_bulk.c b/net/test/node_bulk.c
index bcf89e0..3468b2f 100644
--- a/net/test/node_bulk.c
+++ b/net/test/node_bulk.c
@@ -262,6 +262,8 @@ struct node_bulk_ctx {
 	 * STOP command will send signal to this channel.
 	 */
 	struct m0_chan			   nbc_stop_chan;
+	/** Mutex for node_bulk_ctx.nbc_stop_chan */
+	struct m0_mutex			   nbc_stop_chan_mutex;
 	/**
 	 * Clink for bulk testing inner loop.
 	 * This clink is head for clink group, consists of this clink
@@ -1242,6 +1244,7 @@ static void node_bulk_worker(struct node_bulk_ctx *ctx)
 {
 	struct m0_clink	tm_clink;
 	struct m0_chan	tm_chan;
+	struct m0_mutex tm_chan_mutex;
 	bool		pending;
 	bool		running;
 
@@ -1255,8 +1258,9 @@ static void node_bulk_worker(struct node_bulk_ctx *ctx)
 	 * Init wait channel and clink.
 	 * Transfer machine will signal to this channel.
 	 */
-	m0_chan_init(&tm_chan);
-	m0_clink_add(&tm_chan, &tm_clink);
+	m0_mutex_init(&tm_chan_mutex);
+	m0_chan_init(&tm_chan, &tm_chan_mutex);
+	m0_clink_add_lock(&tm_chan, &tm_clink);
 	/* main loop */
 	running = true;
 	while (running || !node_bulk_bufs_unused_all(ctx)) {
@@ -1300,9 +1304,10 @@ static void node_bulk_worker(struct node_bulk_ctx *ctx)
 	}
 	/* transfer machine should't signal to tm_chan */
 	m0_net_buffer_event_notify(ctx->nbc_net.ntc_tm, NULL);
-	m0_clink_del(&tm_clink);
+	m0_clink_del_lock(&tm_clink);
 	m0_clink_fini(&tm_clink);
-	m0_chan_fini(&tm_chan);
+	m0_chan_fini_lock(&tm_chan);
+	m0_mutex_fini(&tm_chan_mutex);
 }
 
 static int node_bulk_test_init_fini(struct node_bulk_ctx *ctx,
@@ -1404,16 +1409,18 @@ static int node_bulk_test_init_fini(struct node_bulk_ctx *ctx,
 	rc = m0_net_test_network_ep_add_slist(&ctx->nbc_net, &icmd->ntci_ep);
 	if (rc != 0)
 		goto fini;
-	m0_chan_init(&ctx->nbc_stop_chan);
+	m0_mutex_init(&ctx->nbc_stop_chan_mutex);
+	m0_chan_init(&ctx->nbc_stop_chan, &ctx->nbc_stop_chan_mutex);
 	m0_clink_init(&ctx->nbc_stop_clink, NULL);
-	m0_clink_add(&ctx->nbc_stop_chan, &ctx->nbc_stop_clink);
+	m0_clink_add_lock(&ctx->nbc_stop_chan, &ctx->nbc_stop_clink);
 	goto success;
 fini:
 	icmd = NULL;
 	rc = 0;
-	m0_clink_del(&ctx->nbc_stop_clink);
+	m0_clink_del_lock(&ctx->nbc_stop_clink);
 	m0_clink_fini(&ctx->nbc_stop_clink);
-	m0_chan_fini(&ctx->nbc_stop_chan);
+	m0_chan_fini_lock(&ctx->nbc_stop_chan);
+	m0_mutex_fini(&ctx->nbc_stop_chan_mutex);
 	m0_net_test_network_ctx_fini(&ctx->nbc_net);
 free_rb_bulk_final:
 	m0_net_test_ringbuf_fini(&ctx->nbc_rb_bulk_final);
@@ -1600,7 +1607,7 @@ static int node_bulk_cmd_stop(void *ctx_,
 	}
 	/* stop worker thread */
 	m0_atomic64_set(&ctx->nbc_stop_flag, 1);
-	m0_chan_signal(&ctx->nbc_stop_chan);
+	m0_chan_signal_lock(&ctx->nbc_stop_chan);
 	rc = m0_thread_join(&ctx->nbc_thread);
 	M0_ASSERT(rc == 0);
 	m0_thread_fini(&ctx->nbc_thread);
-- 
1.8.3.2

