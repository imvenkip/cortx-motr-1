From 5665f6de2dad3fc50c7670a7f342ddb5ef69926f Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Tue, 30 Apr 2013 01:10:24 +0300
Subject: [PATCH 5/6] fixes for r/1353 first round inspection comments

---
 lib/linux_kernel/ktime.c |  5 +++--
 lib/timer.c              | 14 +++++++-------
 lib/user_space/timer.h   |  4 ++--
 lib/user_space/utime.c   |  6 ++++--
 4 files changed, 16 insertions(+), 13 deletions(-)

diff --git a/lib/linux_kernel/ktime.c b/lib/linux_kernel/ktime.c
index 116ca87..7cf8564 100644
--- a/lib/linux_kernel/ktime.c
+++ b/lib/linux_kernel/ktime.c
@@ -55,10 +55,11 @@ int m0_nanosleep(const m0_time_t req, m0_time_t *rem)
 		.tv_nsec = m0_time_nanoseconds(req)
 	};
 	unsigned long	tj = timespec_to_jiffies(&ts);
-	/* this may use schedule_timeout_interruptible() to capture signals */
-	unsigned long	remtj = schedule_timeout_uninterruptible(tj);
+	unsigned long	remtj;
 	struct timespec remts;
 
+	/* this may use schedule_timeout_interruptible() to capture signals */
+	remtj = schedule_timeout_uninterruptible(tj);
 	M0_ASSERT(remtj >= 0);
 	if (rem != NULL) {
 		jiffies_to_timespec(remtj, &remts);
diff --git a/lib/timer.c b/lib/timer.c
index fdd036f..b43f7fa 100644
--- a/lib/timer.c
+++ b/lib/timer.c
@@ -68,7 +68,7 @@ enum timer_func {
 
 static const m0_time_t zero_time = M0_MKTIME(0, 0);
 /** Clock source for M0_TIMER_HARD. @see timer_posix_set() */
-static int	       M0_CLOCK_SOURCE_TIMER = -1;
+static int	       clock_source_timer = -1;
 
 /**
    Typed list of m0_timer_tid structures.
@@ -185,7 +185,7 @@ static int timer_posix_init(struct m0_timer *timer)
 	se.sigev_signo = TIMER_SIGNO;
 	se._sigev_un._tid = timer->t_tid;
 	se.sigev_value.sival_ptr = timer;
-	rc = timer_create(M0_CLOCK_SOURCE_TIMER, &se, &ptimer);
+	rc = timer_create(clock_source_timer, &se, &ptimer);
 	/* preserve timer->t_ptimer if timer_create() isn't succeeded */
 	if (rc == 0)
 		timer->t_ptimer = ptimer;
@@ -562,21 +562,21 @@ M0_INTERNAL bool m0_timer_is_started(const struct m0_timer *timer)
 /**
    Init data structures for hard timer
  */
-M0_INTERNAL int m0_timers_init()
+M0_INTERNAL int m0_timers_init(void)
 {
 	timer_sigaction(TIMER_SIGNO, timer_sighandler);
 
 	switch (M0_CLOCK_SOURCE) {
 	case M0_CLOCK_SOURCE_GTOD:
-		M0_CLOCK_SOURCE_TIMER = CLOCK_REALTIME;
+		clock_source_timer = CLOCK_REALTIME;
 		break;
 	case M0_CLOCK_SOURCE_REALTIME_MONOTONIC:
-		M0_CLOCK_SOURCE_TIMER = CLOCK_MONOTONIC;
+		clock_source_timer = CLOCK_MONOTONIC;
 		break;
 	case M0_CLOCK_SOURCE_REALTIME:
 	case M0_CLOCK_SOURCE_MONOTONIC:
 	case M0_CLOCK_SOURCE_MONOTONIC_RAW:
-		M0_CLOCK_SOURCE_TIMER = M0_CLOCK_SOURCE;
+		clock_source_timer = M0_CLOCK_SOURCE;
 		break;
 	default:
 		M0_IMPOSSIBLE("Invalid clock source for timer");
@@ -584,7 +584,7 @@ M0_INTERNAL int m0_timers_init()
 	return 0;
 }
 
-M0_INTERNAL void m0_timers_fini()
+M0_INTERNAL void m0_timers_fini(void)
 {
 }
 
diff --git a/lib/user_space/timer.h b/lib/user_space/timer.h
index d9e8019..5c83a77 100644
--- a/lib/user_space/timer.h
+++ b/lib/user_space/timer.h
@@ -118,8 +118,8 @@ struct m0_timer {
 	timer_t t_ptimer;
 };
 
-M0_INTERNAL int m0_timers_init();
-M0_INTERNAL void m0_timers_fini();
+M0_INTERNAL int m0_timers_init(void);
+M0_INTERNAL void m0_timers_fini(void);
 
 /** @} end of timer group */
 
diff --git a/lib/user_space/utime.c b/lib/user_space/utime.c
index fb36c6b..920b9c0 100644
--- a/lib/user_space/utime.c
+++ b/lib/user_space/utime.c
@@ -47,8 +47,9 @@ m0_time_t		 m0_time_monotonic_offset;
 static m0_time_t clock_gettime_wrapper(clockid_t clock_id)
 {
 	struct timespec tp;
-	int		rc = clock_gettime(clock_id, &tp);
+	int		rc;
 
+	rc = clock_gettime(clock_id, &tp);
 	/** clock_gettime() can fail iff clock_id is invalid */
 	M0_ASSERT(rc == 0);
 	return M0_MKTIME(tp.tv_sec, tp.tv_nsec);
@@ -146,8 +147,9 @@ int m0_nanosleep(const m0_time_t req, m0_time_t *rem)
 		.tv_nsec = m0_time_nanoseconds(req)
 	};
 	struct timespec remts;
-	int		rc = nanosleep(&reqts, &remts);
+	int		rc;
 
+	rc = nanosleep(&reqts, &remts);
 	if (rem != NULL)
 		*rem = rc != 0 ? m0_time(remts.tv_sec, remts.tv_nsec) : 0;
 	return rc;
-- 
1.8.3.2

