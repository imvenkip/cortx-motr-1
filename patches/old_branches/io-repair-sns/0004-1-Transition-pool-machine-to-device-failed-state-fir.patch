From d6dac1c4138c8e75e91895826a25e5fd62d6005b Mon Sep 17 00:00:00 2001
From: Mandar Sawant <mandar_sawant@xyratex.com>
Date: Wed, 19 Dec 2012 15:49:16 +0530
Subject: [PATCH 04/10] 1) Transition pool machine to device failed state
 first. 2) replace 0@lo with real endpoint address in repair_cli.c 3) Couple
 of hacks for testing.

---
 sns/repair/cm.c            | 5 +++++
 sns/repair/st/repair_cli.c | 3 ++-
 stob/cache.c               | 6 +++---
 stob/stob.c                | 2 +-
 4 files changed, 11 insertions(+), 5 deletions(-)

diff --git a/sns/repair/cm.c b/sns/repair/cm.c
index acf61d6..3244fba 100644
--- a/sns/repair/cm.c
+++ b/sns/repair/cm.c
@@ -445,6 +445,11 @@ static int cm_start(struct m0_cm *cm)
 	 */
 	if (bufs_nr == 0)
 		return -ENOMEM;
+	rc = pm_event_setup_and_post(cm->cm_pm, M0_POOL_DEVICE,
+				     rcm->rc_fdata,
+				     M0_PNDS_FAILED);
+	if (rc != 0)
+		return rc;
 	rc = m0_sns_repair_iter_init(rcm);
 	if (rc == 0) {
 		m0_cm_sw_fill(cm);
diff --git a/sns/repair/st/repair_cli.c b/sns/repair/st/repair_cli.c
index c8a90da..f6fee47 100644
--- a/sns/repair/st/repair_cli.c
+++ b/sns/repair/st/repair_cli.c
@@ -54,7 +54,8 @@ struct m0_dbenv          cl_dbenv;
 struct m0_cob_domain     cl_cdom;
 struct m0_rpc_client_ctx cl_ctx;
 
-const char *cl_ep_addr = "0@lo:12345:34:2";
+//const char *cl_ep_addr = "0@lo:12345:34:2";
+const char *cl_ep_addr = "192.168.147.128@tcp:12345:33:102";
 char *srv_ep_addr;
 const char *dbname = "sr_cdb";
 static int cl_cdom_id = 10001;
diff --git a/stob/cache.c b/stob/cache.c
index 864b728..7b4a276 100644
--- a/stob/cache.c
+++ b/stob/cache.c
@@ -100,13 +100,13 @@ M0_INTERNAL int m0_stob_cache_find(struct m0_stob_cache *cache,
 			M0_ASSERT(obj != NULL);
 			m0_rwlock_write_lock(&dom->sd_guard);
 			ghost = m0_stob_cacheable_lookup(cache, id);
-			if (ghost == NULL)
+			if (ghost == NULL) {
 				cache_tlist_add(&cache->ch_head, obj);
-			else {
+				m0_stob_get(&obj->ca_stob);
+			} else {
 				obj->ca_stob.so_op->sop_fini(&obj->ca_stob);
 				obj = ghost;
 			}
-			//m0_stob_get(&obj->ca_stob);
 			m0_rwlock_write_unlock(&dom->sd_guard);
 		}
 	}
diff --git a/stob/stob.c b/stob/stob.c
index 16dff1c..2c81b47 100644
--- a/stob/stob.c
+++ b/stob/stob.c
@@ -95,7 +95,7 @@ M0_INTERNAL int m0_stob_find(struct m0_stob_domain *dom,
 M0_INTERNAL void m0_stob_init(struct m0_stob *obj, const struct m0_stob_id *id,
 			      struct m0_stob_domain *dom)
 {
-	m0_atomic64_set(&obj->so_ref, 1);
+	m0_atomic64_set(&obj->so_ref, 0);
 	obj->so_state = CSS_UNKNOWN;
 	obj->so_id = *id;
 	obj->so_domain = dom;
-- 
1.8.3.2

