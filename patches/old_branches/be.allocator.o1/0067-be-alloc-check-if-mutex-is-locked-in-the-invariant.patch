From d092aa66e175541609c96a66081bd68bf8e35732 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Wed, 15 Jan 2014 00:59:49 +0200
Subject: [PATCH 67/96] be/alloc: check if mutex is locked in the invariant

---
 be/alloc.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/be/alloc.c b/be/alloc.c
index 9a8f311..3b41dcb 100644
--- a/be/alloc.c
+++ b/be/alloc.c
@@ -499,7 +499,8 @@ M0_INTERNAL void m0_be_allocator_fini(struct m0_be_allocator *a)
 
 M0_INTERNAL bool m0_be_allocator__invariant(const struct m0_be_allocator *a)
 {
-	return m0_tl_forall(chunks_all, iter, &a->ba_chunks.bl_list,
+	return m0_mutex_is_locked(&a->ba_lock) &&
+	       m0_tl_forall(chunks_all, iter, &a->ba_chunks.bl_list,
 			    be_alloc_chunk_invariant(a, iter));
 }
 
-- 
1.8.3.2

