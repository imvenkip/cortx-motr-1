From dd10b2265e757dd0958285adb1c302c76cccb6d2 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Tue, 14 Jan 2014 18:32:49 +0200
Subject: [PATCH 52/96] be/fl: s/m0_tlist_for/m0_tl_for/

---
 be/fl.c | 11 +++++------
 1 file changed, 5 insertions(+), 6 deletions(-)

diff --git a/be/fl.c b/be/fl.c
index 0d10aab..5fe222e 100644
--- a/be/fl.c
+++ b/be/fl.c
@@ -124,14 +124,13 @@ M0_INTERNAL bool m0_be_fl__invariant(struct m0_be_fl *fl)
 	struct be_alloc_chunk *chunk;
 	int		       i;
 
-	/* check if each bfs_list contains chunks with appropriate size */
+	/* check if each bfl_free contains chunks with appropriate size */
 	for (i = 0; i < ARRAY_SIZE(fl->bfl_free); ++i) {
-		m0_tlist_for(&chunks_free_tl,
-			     &be_fl_list(fl, i)->bl_list, chunk) {
+		m0_tl_for(chunks_free, &be_fl_list(fl, i)->bl_list, chunk) {
 			if (_0C(m0_be_fl_index_round_down_chunk(fl,
 								chunk) != i))
 				return false;
-		} m0_tlist_endfor;
+		} m0_tl_endfor;
 	}
 	return true;
 }
@@ -201,7 +200,7 @@ M0_INTERNAL struct be_alloc_chunk *m0_be_fl_pick(struct m0_be_fl *fl,
 	if (index == M0_BE_FL_NR && chunk != NULL) {
 		chunk = NULL;
 		i = 0;
-		m0_tlist_for(&chunks_free_tl, &flist->bl_list, iter) {
+		m0_tl_for(chunks_free, &flist->bl_list, iter) {
 			if (iter->bac_size > size &&
 			    ergo(chunk != NULL,
 				 chunk->bac_size > iter->bac_size)) {
@@ -210,7 +209,7 @@ M0_INTERNAL struct be_alloc_chunk *m0_be_fl_pick(struct m0_be_fl *fl,
 			++i;
 			if (i >= M0_BE_FL_PICK_SCAN_LIMIT && chunk != NULL)
 				break;
-		} m0_tlist_endfor;
+		} m0_tl_endfor;
 	}
 	M0_POST(ergo(chunk != NULL, chunk->bac_size >= size));
 	return chunk;
-- 
1.8.3.2

