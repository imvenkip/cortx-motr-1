From 2ff093b51de5aa29262dd81b4cf08dde4d844783 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Sun, 16 Feb 2014 19:03:36 +0200
Subject: [PATCH 82/96] be/seg: allocator() can take const pointer

---
 be/linux_kernel/stubs.c | 3 ++-
 be/seg.c                | 3 ++-
 be/seg.h                | 3 ++-
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/be/linux_kernel/stubs.c b/be/linux_kernel/stubs.c
index 9c6c6b8..bd4ca5f 100644
--- a/be/linux_kernel/stubs.c
+++ b/be/linux_kernel/stubs.c
@@ -104,7 +104,8 @@ m0_be_op_state_set(struct m0_be_op *op, enum m0_be_op_state state)
 	op->bo_sm.sm_state = state;
 }
 
-M0_INTERNAL struct m0_be_allocator *m0_be_seg_allocator(struct m0_be_seg *seg)
+M0_INTERNAL struct m0_be_allocator *m0_be_seg_allocator(
+						const struct m0_be_seg *seg)
 {
 	return NULL;
 }
diff --git a/be/seg.c b/be/seg.c
index 8a3fd98..d3612b9 100644
--- a/be/seg.c
+++ b/be/seg.c
@@ -188,7 +188,8 @@ M0_INTERNAL m0_bcount_t m0_be_seg_reserved(struct m0_be_seg *seg)
 	return seg->bs_reserved;
 }
 
-M0_INTERNAL struct m0_be_allocator *m0_be_seg_allocator(struct m0_be_seg *seg)
+M0_INTERNAL struct m0_be_allocator *m0_be_seg_allocator(
+						const struct m0_be_seg *seg)
 {
 	return &(((struct m0_be_seg_hdr *)
 		 (seg->bs_addr + M0_BE_SEG_HEADER_OFFSET))->bh_allocator);
diff --git a/be/seg.h b/be/seg.h
index 84c90db..7e82e4c 100644
--- a/be/seg.h
+++ b/be/seg.h
@@ -87,7 +87,8 @@ M0_INTERNAL m0_bindex_t m0_be_seg_offset(const struct m0_be_seg *seg,
 
 /** XXX @todo s/bs_reserved/m0_be_seg_reserved/ everywhere */
 M0_INTERNAL m0_bcount_t m0_be_seg_reserved(struct m0_be_seg *seg);
-M0_INTERNAL struct m0_be_allocator *m0_be_seg_allocator(struct m0_be_seg *seg);
+M0_INTERNAL struct m0_be_allocator *m0_be_seg_allocator(
+						const struct m0_be_seg *seg);
 /** XXX @todo add m0_be_seg_dictinary() */
 
 struct m0_be_reg {
-- 
1.8.3.2

