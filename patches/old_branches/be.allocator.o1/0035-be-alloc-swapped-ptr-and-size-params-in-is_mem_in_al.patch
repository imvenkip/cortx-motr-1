From e92ee9884542f4a31ac1d17269fccdcaaf0ac4c4 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Thu, 9 Jan 2014 05:12:40 +0200
Subject: [PATCH 35/96] be/alloc: swapped ptr and size params in
 is_mem_in_allocator

---
 be/alloc.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/be/alloc.c b/be/alloc.c
index 4a6d2de..6f48d0f 100644
--- a/be/alloc.c
+++ b/be/alloc.c
@@ -509,7 +509,7 @@ static void be_alloc_size_capture(struct m0_be_allocator *a,
 }
 
 static bool be_alloc_is_mem_in_allocator(struct m0_be_allocator *a,
-					 m0_bcount_t size, const void *ptr)
+					 const void *ptr, m0_bcount_t size)
 {
 	return ptr >= a->ba_addr &&
 	       ptr + size <= a->ba_addr + a->ba_size;
@@ -518,7 +518,7 @@ static bool be_alloc_is_mem_in_allocator(struct m0_be_allocator *a,
 static bool be_alloc_is_chunk_in_allocator(struct m0_be_allocator *a,
 					   const struct be_alloc_chunk *c)
 {
-	return be_alloc_is_mem_in_allocator(a, sizeof *c + c->bac_size, c);
+	return be_alloc_is_mem_in_allocator(a, c, sizeof *c + c->bac_size);
 }
 
 static bool be_alloc_chunk_is_not_overlapping(const struct be_alloc_chunk *a,
@@ -1073,7 +1073,7 @@ M0_INTERNAL void m0_be_free_aligned(struct m0_be_allocator *a,
 	bool		       chunks_were_merged;
 
 	M0_PRE_EX(m0_be_allocator__invariant(a));
-	M0_PRE(ergo(ptr != NULL, be_alloc_is_mem_in_allocator(a, 1, ptr)));
+	M0_PRE(ergo(ptr != NULL, be_alloc_is_mem_in_allocator(a, ptr, 1)));
 
 	m0_be_op_state_set(op, M0_BOS_ACTIVE);
 
-- 
1.8.3.2

