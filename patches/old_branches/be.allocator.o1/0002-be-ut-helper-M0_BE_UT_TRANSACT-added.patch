From 79740cd4c4258fa5ac5cbb98857cd58fe8aed746 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Thu, 14 Nov 2013 23:38:21 +0200
Subject: [PATCH 02/96] be/ut/helper: M0_BE_UT_TRANSACT() added

---
 be/ut/helper.h | 33 +++++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)

diff --git a/be/ut/helper.h b/be/ut/helper.h
index a311019..1029c6c 100644
--- a/be/ut/helper.h
+++ b/be/ut/helper.h
@@ -180,6 +180,39 @@ M0_INTERNAL int m0_be_ut__seg_dict_create(struct m0_be_seg   *seg,
 M0_INTERNAL int m0_be_ut__seg_dict_destroy(struct m0_be_seg   *seg,
 					   struct m0_sm_group *grp);
 
+/**
+ * @todo document
+ * If __ut_seg set to non-NULL value then
+ * m0_be_ut_txc will be used to check capturing.
+ */
+#define M0_BE_UT_TRANSACT(__ut_be, __ut_seg,				\
+			  __tx, __cred, __credit_func, __action_func)	\
+	do {								\
+		struct m0_be_tx_credit __cred = {};			\
+		struct m0_be_ut_txc    __tc   = {};			\
+		struct m0_be_tx        __tx   = {};			\
+		int                    __rc;				\
+									\
+		m0_be_ut_tx_init(&__tx, (__ut_be));			\
+		__credit_func;						\
+		m0_be_tx_prep(&__tx, &__cred);				\
+		__rc = m0_be_tx_open_sync(&__tx);			\
+		M0_ASSERT_INFO(__rc == 0, "__rc = %d", __rc);		\
+		if (__rc == 0) {					\
+			if (__ut_seg != NULL) {				\
+				m0_be_ut_txc_init(&__tc);		\
+				m0_be_ut_txc_start(&__tc, &__tx,	\
+						   &(__ut_seg)->bus_seg);\
+			}						\
+			__action_func;					\
+			if (__ut_seg != NULL) {				\
+				m0_be_ut_txc_check(&__tc, &__tx);	\
+				m0_be_ut_txc_fini(&__tc);		\
+			}						\
+			m0_be_tx_close_sync(&__tx);			\
+		}							\
+		m0_be_tx_fini(&__tx);					\
+	} while (0)
 
 #endif /* __MERO_BE_UT_HELPER_H__ */
 
-- 
1.8.3.2

