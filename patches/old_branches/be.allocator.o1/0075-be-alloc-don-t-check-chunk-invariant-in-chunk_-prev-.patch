From bacb7ddeac5f8dcb05cd91691ff59dbd8be394a7 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Sun, 16 Feb 2014 17:01:36 +0200
Subject: [PATCH 75/96] be/alloc: don't check chunk invariant in
 chunk_{prev,next}

---
 be/alloc.c | 22 ++++++++++------------
 1 file changed, 10 insertions(+), 12 deletions(-)

diff --git a/be/alloc.c b/be/alloc.c
index a20a077..8e0e43a 100644
--- a/be/alloc.c
+++ b/be/alloc.c
@@ -278,24 +278,22 @@ static struct be_alloc_chunk *be_alloc_chunk_addr(void *ptr)
 	return container_of(ptr, struct be_alloc_chunk, bac_mem);
 }
 
-static struct be_alloc_chunk *be_alloc_chunk_prev(struct m0_be_allocator *a,
-						  struct be_alloc_chunk *c)
+static struct be_alloc_chunk *
+be_alloc_chunk_prev(const struct m0_be_allocator *a,
+		    const struct be_alloc_chunk *c)
 {
-	struct be_alloc_chunk *r;
+	M0_PRE(m0_mutex_is_locked(&a->ba_lock));
 
-	r = chunks_all_tlist_prev(&a->ba_chunks.bl_list, c);
-	M0_ASSERT(ergo(r != NULL, be_alloc_chunk_invariant(a, r)));
-	return r;
+	return chunks_all_tlist_prev(&a->ba_chunks.bl_list, c);
 }
 
-static struct be_alloc_chunk *be_alloc_chunk_next(struct m0_be_allocator *a,
-						  struct be_alloc_chunk *c)
+static struct be_alloc_chunk *
+be_alloc_chunk_next(const struct m0_be_allocator *a,
+		    const struct be_alloc_chunk *c)
 {
-	struct be_alloc_chunk *r;
+	M0_PRE(m0_mutex_is_locked(&a->ba_lock));
 
-	r = chunks_all_tlist_next(&a->ba_chunks.bl_list, c);
-	M0_ASSERT_EX(ergo(r != NULL, be_alloc_chunk_invariant(a, r)));
-	return r;
+	return chunks_all_tlist_next(&a->ba_chunks.bl_list, c);
 }
 
 static void be_alloc_chunk_mark_free(struct m0_be_allocator *a,
-- 
1.8.3.2

