From d8173f93cf7158a656ceb936fc423446179be4f9 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Wed, 15 Jan 2014 01:47:01 +0200
Subject: [PATCH 71/96] be/ut/alloc: made static function from macro

---
 be/ut/alloc.c | 46 ++++++++++++++++++++++++----------------------
 1 file changed, 24 insertions(+), 22 deletions(-)

diff --git a/be/ut/alloc.c b/be/ut/alloc.c
index 6ec8a9d..8cf9e72 100644
--- a/be/ut/alloc.c
+++ b/be/ut/alloc.c
@@ -188,6 +188,21 @@ M0_INTERNAL void m0_be_ut_alloc_concurrent(void)
 	be_ut_alloc_mt(BE_UT_ALLOC_THR_NR);
 }
 
+static void be_ut_alloc_credit_log(struct m0_be_allocator  *a,
+				   enum m0_be_allocator_op  optype,
+				   const char		   *optype_str,
+				   m0_bcount_t		    size,
+				   unsigned		    shift)
+{
+	struct m0_be_tx_credit cred = {};
+
+	m0_be_allocator_credit(a, optype, size, shift, &cred);
+	M0_LOG(M0_INFO,
+	       "m0_be_allocator_credit(): "
+	       "optype = %d (%s), size = %lu, shift = %d, credit = "BETXCR_F,
+	       optype, optype_str, size, shift, BETXCR_P(&cred));
+}
+
 M0_INTERNAL void m0_be_ut_alloc_info(void)
 {
 	struct m0_be_allocator *a;
@@ -200,30 +215,17 @@ M0_INTERNAL void m0_be_ut_alloc_info(void)
 	m0_be_ut_seg_allocator_init(&ut_seg, &be_ut_alloc_backend);
 	a = ut_seg.bus_allocator;
 
-#define ALLOCATOR_CREDIT_LOG(__a, __optype, __size, __shift)		       \
-	do {								       \
-		struct m0_be_tx_credit cred = {};			       \
-									       \
-		m0_be_allocator_credit(__a, __optype, __size, __shift, &cred); \
-		M0_LOG(M0_INFO,						       \
-		       "m0_be_allocator_credit(): "			       \
-		       "optype = %d (%s), size = %lu, shift = %d, "	       \
-		       "credit = " BETXCR_F,				       \
-		       __optype, (char *) #__optype, (unsigned long) __size,   \
-		       __shift,	BETXCR_P(&cred));			       \
-	} while (0)
-
-	ALLOCATOR_CREDIT_LOG(a, M0_BAO_CREATE, 0, 0);
-	ALLOCATOR_CREDIT_LOG(a, M0_BAO_DESTROY, 0, 0);
-	ALLOCATOR_CREDIT_LOG(a, M0_BAO_FREE, 0, 0);
-	ALLOCATOR_CREDIT_LOG(a, M0_BAO_FREE_ALIGNED, 0, 0);
+	be_ut_alloc_credit_log(a, M0_BAO_CREATE,       "create", 0, 0);
+	be_ut_alloc_credit_log(a, M0_BAO_DESTROY,      "destroy", 0, 0);
+	be_ut_alloc_credit_log(a, M0_BAO_FREE,	       "free", 0, 0);
+	be_ut_alloc_credit_log(a, M0_BAO_FREE_ALIGNED, "free_aligned", 0, 0);
 
 	for (size = 1; size <= 0x1000; size *= 4)
-		ALLOCATOR_CREDIT_LOG(a, M0_BAO_ALLOC, size, 0);
-	for (shift = 0; shift <= 12; shift += 1)
-		ALLOCATOR_CREDIT_LOG(a, M0_BAO_ALLOC_ALIGNED, 0x100, shift);
-
-#undef ALLOCATOR_CREDIT_LOG
+		be_ut_alloc_credit_log(a, M0_BAO_ALLOC, "alloc", size, 0);
+	for (shift = 0; shift <= 12; shift += 1) {
+		be_ut_alloc_credit_log(a, M0_BAO_ALLOC_ALIGNED, "alloc_aligned",
+				       0x100, shift);
+	}
 
 	m0_be_ut_seg_allocator_fini(&ut_seg, &be_ut_alloc_backend);
 	m0_be_ut_seg_fini(&ut_seg);
-- 
1.8.3.2

