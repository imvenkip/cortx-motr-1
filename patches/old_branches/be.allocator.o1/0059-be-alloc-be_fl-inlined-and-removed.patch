From 787a5271b927c3b3a0d4735db8ea85bd897c2b9d Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Tue, 14 Jan 2014 23:34:34 +0200
Subject: [PATCH 59/96] be/alloc: be_fl() inlined and removed

---
 be/alloc.c | 37 ++++++++++++++++---------------------
 1 file changed, 16 insertions(+), 21 deletions(-)

diff --git a/be/alloc.c b/be/alloc.c
index e0cc5df..b6b82ad 100644
--- a/be/alloc.c
+++ b/be/alloc.c
@@ -175,11 +175,6 @@ static struct m0_be_list *be_alloc_list_chunks(struct m0_be_allocator *a)
 	return &a->ba_chunks;
 }
 
-static struct m0_be_fl *be_fl(struct m0_be_allocator *a)
-{
-	return &a->ba_fl;
-}
-
 static void be_alloc_chunk_capture(struct m0_be_allocator *a,
 				   struct m0_be_tx *tx,
 				   struct be_alloc_chunk *c)
@@ -280,7 +275,7 @@ static void be_alloc_chunk_del_fini(struct m0_be_allocator *a,
 {
 	M0_PRE(be_alloc_chunk_invariant(a, c));
 
-	m0_be_fl_del(be_fl(a), tx, c);
+	m0_be_fl_del(&a->ba_fl, tx, c);
 
 	M0_BE_OP_SYNC(op, m0_be_list_del(be_alloc_list_chunks(a), &op, tx, c));
 	M0_BE_OP_SYNC(op, m0_be_tlink_destroy(c, tx, &op,
@@ -318,7 +313,7 @@ static void be_alloc_chunk_mark_free(struct m0_be_allocator *a,
 {
 	M0_PRE(be_alloc_chunk_invariant(a, c));
 	M0_PRE(!c->bac_free);
-	m0_be_fl_add(be_fl(a), tx, c);
+	m0_be_fl_add(&a->ba_fl, tx, c);
 	c->bac_free = true;
 	be_alloc_free_flag_capture(a, tx, c);
 	M0_POST(c->bac_free);
@@ -358,7 +353,7 @@ be_alloc_chunk_add_after(struct m0_be_allocator *a,
 		M0_BE_OP_SYNC(op, m0_be_list_add(chunks, &op, tx, new));
 	}
 	if (free) {
-		m0_be_fl_add(be_fl(a), tx, new);
+		m0_be_fl_add(&a->ba_fl, tx, new);
 	}
 	M0_POST(be_alloc_chunk_invariant(a, new));
 	M0_PRE(ergo(c != NULL, be_alloc_chunk_invariant(a, c)));
@@ -402,7 +397,7 @@ be_alloc_chunk_split(struct m0_be_allocator *a,
 		if (prev != NULL) {
 			/* XXX refactor next if as func */
 			if (prev->bac_free) {
-				m0_be_fl_resize(be_fl(a), tx, prev,
+				m0_be_fl_resize(&a->ba_fl, tx, prev,
 						prev->bac_size + chunk0_size);
 			} else {
 				prev->bac_size += chunk0_size;
@@ -480,7 +475,7 @@ static bool be_alloc_chunk_trymerge(struct m0_be_allocator *a,
 	if (x != NULL && y != NULL && x->bac_free && y->bac_free) {
 		y_size_total = sizeof(*y) + y->bac_size;
 		be_alloc_chunk_del_fini(a, tx, y);
-		m0_be_fl_resize(be_fl(a), tx, x, x->bac_size + y_size_total);
+		m0_be_fl_resize(&a->ba_fl, tx, x, x->bac_size + y_size_total);
 		be_alloc_size_capture(a, tx, x);
 		chunks_were_merged = true;
 	}
@@ -497,7 +492,7 @@ M0_INTERNAL int m0_be_allocator_init(struct m0_be_allocator *a,
 
 	a->ba_seg = seg;
 	m0_be_list_init(be_alloc_list_chunks(a), seg);
-	m0_be_fl_init(be_fl(a), seg);
+	m0_be_fl_init(&a->ba_fl, seg);
 
 	/* XXX temporary solution to make capturing checkers pass */
 	m0_be_reg__write(&M0_BE_REG_PTR(a->ba_seg, a));	/* XXX */
@@ -507,7 +502,7 @@ M0_INTERNAL int m0_be_allocator_init(struct m0_be_allocator *a,
 
 M0_INTERNAL void m0_be_allocator_fini(struct m0_be_allocator *a)
 {
-	m0_be_fl_fini(be_fl(a));
+	m0_be_fl_fini(&a->ba_fl);
 	m0_be_list_fini(be_alloc_list_chunks(a));
 	m0_mutex_fini(&a->ba_lock);
 
@@ -546,7 +541,7 @@ M0_INTERNAL int m0_be_allocator_create(struct m0_be_allocator *a,
 	};
 	M0_BE_OP_SYNC(op, m0_be_list_create(be_alloc_list_chunks(a), tx, &op,
 					    seg, &chunks_all_tl));
-	m0_be_fl_create(be_fl(a), tx, seg);
+	m0_be_fl_create(&a->ba_fl, tx, seg);
 	/* init main chunk */
 	c = be_alloc_chunk_add_after(a, tx, NULL, 0, free_space, true);
 	M0_ASSERT(c != NULL);
@@ -573,7 +568,7 @@ M0_INTERNAL void m0_be_allocator_destroy(struct m0_be_allocator *a,
 
 	be_alloc_chunk_del_fini(a, tx, c);
 
-	m0_be_fl_destroy(be_fl(a), tx);
+	m0_be_fl_destroy(&a->ba_fl, tx);
 	M0_BE_OP_SYNC(op, m0_be_list_destroy(be_alloc_list_chunks(a), tx, &op));
 
 	a->ba_size = 0;
@@ -623,22 +618,22 @@ M0_INTERNAL void m0_be_allocator_credit(struct m0_be_allocator *a,
 	tmp = M0_BE_TX_CREDIT(0, 0);
 	m0_be_list_credit(chunks, M0_BLO_TLINK_CREATE, 1, &tmp);
 	m0_be_tx_credit_add(&tmp, &chunk_credit);
-	m0_be_fl_credit(be_fl(a), M0_BFL_ADD, &tmp);
+	m0_be_fl_credit(&a->ba_fl, M0_BFL_ADD, &tmp);
 	m0_be_list_credit(chunks, M0_BLO_INSERT,       1, &tmp);
 	chunk_add_after_credit = tmp;
 
 	tmp = M0_BE_TX_CREDIT(0, 0);
 	m0_be_list_credit(chunks, M0_BLO_DELETE,	1, &tmp);
 	m0_be_list_credit(chunks, M0_BLO_TLINK_DESTROY, 1, &tmp);
-	m0_be_fl_credit(be_fl(a), M0_BFL_DEL, &tmp);
+	m0_be_fl_credit(&a->ba_fl, M0_BFL_DEL, &tmp);
 	chunk_del_fini_credit = tmp;
 
 	m0_be_tx_credit_add(&chunk_trymerge_credit, &chunk_del_fini_credit);
-	m0_be_fl_credit(be_fl(a), M0_BFL_RESIZE, &chunk_trymerge_credit);
+	m0_be_fl_credit(&a->ba_fl, M0_BFL_RESIZE, &chunk_trymerge_credit);
 	m0_be_tx_credit_add(&chunk_trymerge_credit, &cred_chunk_size);
 
 	m0_be_tx_credit_add(&cred_split, &chunk_del_fini_credit);
-	m0_be_fl_credit(be_fl(a), M0_BFL_RESIZE, &cred_split);
+	m0_be_fl_credit(&a->ba_fl, M0_BFL_RESIZE, &cred_split);
 	m0_be_tx_credit_mac(&cred_split, &cred_chunk_size, 2);
 	m0_be_tx_credit_mac(&cred_split, &chunk_add_after_credit, 3);
 
@@ -647,12 +642,12 @@ M0_INTERNAL void m0_be_allocator_credit(struct m0_be_allocator *a,
 	switch (optype) {
 		case M0_BAO_CREATE:
 			m0_be_tx_credit_mac(accum, &cred_list_create, 2);
-			m0_be_fl_credit(be_fl(a), M0_BFL_CREATE, accum);
+			m0_be_fl_credit(&a->ba_fl, M0_BFL_CREATE, accum);
 			m0_be_tx_credit_add(accum, &chunk_add_after_credit);
 			m0_be_tx_credit_add(accum, &cred_allocator);
 			break;
 		case M0_BAO_DESTROY:
-			m0_be_fl_credit(be_fl(a), M0_BFL_DESTROY, accum);
+			m0_be_fl_credit(&a->ba_fl, M0_BFL_DESTROY, accum);
 			m0_be_tx_credit_add(accum, &chunk_del_fini_credit);
 			m0_be_tx_credit_mac(accum, &cred_list_destroy, 2);
 			m0_be_tx_credit_add(accum, &cred_allocator);
@@ -702,7 +697,7 @@ M0_INTERNAL void m0_be_alloc_aligned(struct m0_be_allocator *a,
 	/* algorithm starts here */
 	aligned_size = shift == M0_BE_ALLOC_SHIFT_MIN ? size :
 		       size * 2 + (1U << shift);
-	c = m0_be_fl_pick(be_fl(a), aligned_size);
+	c = m0_be_fl_pick(&a->ba_fl, aligned_size);
 	if (c != NULL) {
 		c = be_alloc_chunk_trysplit(a, tx, c, size, shift);
 		M0_ASSERT(c != NULL);
-- 
1.8.3.2

