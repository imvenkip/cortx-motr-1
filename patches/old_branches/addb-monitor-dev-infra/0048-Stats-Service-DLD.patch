From ef6e28fdc2aa2035ff773d6f9a32495a465fde54 Mon Sep 17 00:00:00 2001
From: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
Date: Thu, 20 Jun 2013 17:21:37 +0530
Subject: [PATCH 048/107]  - Stats Service DLD

---
 addb/stats_srv.c  | 186 ++++++++++++++++++++++++++++++++++++++++++++++++++++++
 addb/stats_srv.h  | 102 ++++++++++++++++++++++++++++++
 extra-libs/galois |   2 +-
 3 files changed, 289 insertions(+), 1 deletion(-)
 create mode 100644 addb/stats_srv.c
 create mode 100644 addb/stats_srv.h

diff --git a/addb/stats_srv.c b/addb/stats_srv.c
new file mode 100644
index 0000000..9179a1c
--- /dev/null
+++ b/addb/stats_srv.c
@@ -0,0 +1,186 @@
+/* -*- C -*- */
+/*
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
+ *
+ * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
+ * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
+ * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
+ * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
+ * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
+ * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
+ * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
+ *
+ * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
+ * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
+ * http://www.xyratex.com/contact
+ *
+ * Original author: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
+ * Original creation date: 06/14/2013
+ */
+
+/**
+   @page DLD-stats-svc  Stats Service
+
+   - @ref DLD-stats-svc-ovw
+   - @ref DLD-stats-svc-def
+   - @ref DLD-stats-svc-req
+   - @ref DLD-stats-svc-fspecs
+   - @ref DLD-stats-svc-lspecs
+      - @ref DLD-stats-svc-lspec-state
+      - @ref DLD-stats-svc-lspec-thread
+      - @ref DLD-stats-svc-lspec-service-registration
+      - @ref DLD-stats-svc-lspec-numa
+      - @ref DLD-stats-svc-lspec-depends
+      - @ref DLD-stats-svc-lspec-conformance
+   - @ref DLD-stats-svc-ut
+   - @ref DLD-stats-svc-it
+   - @ref DLD-stats-svc-st
+   - @ref DLD-stats-svc-O
+   - @ref DLD-stats-svc-ref
+
+   <hr>
+   @section DLD-stats-svc-ovw Overview
+   This design relates to stats service. Stats service provides the follwoing
+   functionality:
+   - Updates of in-memory stats objects on requests from mero nodes
+   - Provides stats information from in-memroy stats objects to cluster
+     administrations utilities/console on their query.
+
+   <hr>
+   @section DLD-stats-svc-def Definitions
+   - <b>Stats Service</b> Stats service which processes mero statistics
+     update/query requests.
+   - <b>Stats Object</b> Stats in-memory object which represents a statitics
+     matrix.
+   - <b>Stats Update<b> Stats update request which updates Stats object values.
+   - <b>Stats Query<b> Stats query request which returns latest updated
+     stats objects values.
+
+   <hr>
+   @section DLD-stats-svc-req Requirements
+   - <b>r.stats-service.in-memory-objects</b> Maintains in-memory statistic
+     objects up to date from stats update got from mero nodes.
+   - <b>r.stats-service.update</b> It updates Stats Objects values.
+   - <b>r.stats-service.query</b> It returns Stats Object values to mero
+      monitoring console, utilities etc.
+
+   <hr>
+   @section DLD-stats-svc-lspecs Logical Specification
+   @subsection DLD-stats-svc-lspec-state State Transitions
+
+   @subsection DLD-stats-svc-lspec-thread Threading and Concurrency Model
+
+   @subsection DLD-stats-svc-lspec-service-registration Service Registration
+
+   @subsection DLD-stats-svc-lspec-numa NUMA optimizations
+
+   @subsection DLD-stats-svc-lspec-depends Dependencies
+
+   @subsection DLD-stats-svc-lspec-conformance Conformance
+
+   <hr>
+   @section DLD-stats-svc-ut Unit Tests
+
+   <hr>
+   @section DLD-stats-svc-it Integration Test
+
+   <hr>
+   @section DLD-stats-svc-st System Test
+
+   <hr>
+   @section DLD-stats-svc-O Analysis
+
+   <hr>
+   @section DLD-stats-svc-ref References
+ */
+
+M0_TL_DESCR_DEFINE(stats, "statistic objects", M0_INTERNAL, struct m0_stats,
+		   s_linkage, s_magic, M0_STATS_MAGIC, M0_STATS_HEAD_MAGIC);
+M0_TL_DEFINE(stats, M0_INTERNAL, struct m0_stats);
+
+static const struct m0_bob_type stats_svc_bob = {
+	.bt_name         = "stats svc",
+	.bt_magix_offset = M0_MAGIX_OFFSET(struct stats_svc, ss_magic),
+	.bt_magix        = M0_STATS_SVC_MAGIC,
+	.bt_check        = NULL
+};
+
+M0_BOB_DEFINE(static, &stats_svc_bob, stats_svc);
+
+/*
+ * Stats Service
+ */
+
+/**
+ * The rso_start methos to start Stats service.
+ */
+static int stats_svc_rso_start(struct m0_reqh_service *service)
+{
+}
+
+/**
+ * The rso_stop method to stop Stats service.
+ */
+static int stats_svc_rso_stop(struct m0_reqh_service *service)
+{
+}
+
+/**
+ * The rso_fini method to finalize the Stats service.
+ */
+static void stats_svc_rso_fini(struct m0_reqh_service)
+{
+}
+
+static const struct m0_reqh_service_ops stats_svc_ops = {
+	.rso_start = stats_svc_rso_start,
+	.rso_stop  = stats_svc_rso_stop,
+	.rso_fini  = stats_svc_rso_stop
+};
+
+/*
+ * Stats Service Type
+ */
+
+static int stats_svc_rsto_service_allocate(struct m0_reqh_service      **srv,
+					   struct m0_reqh_service_type   stype,
+					   struct m0_reqh_context       *rctx)
+{
+}
+
+static struct m0_reqh_service_type_ops stats_service_type_ops = {
+	.rsto_service_allocate = stats_svc_rsto_service_allocate,
+};
+
+M0_REQH_SERVICE_TYPE_DEFINE(m0_stats_svc_type, &stats_service_type_ops,
+			    M0_STATS_SVC_NAME, &m0_addb_ct_stats_svc);
+
+/*
+ * Public interfaces
+ */
+
+/**
+ * It register Stats service.
+ */
+M0_INTERNAL int m0_stats_svc_register(void)
+{
+	return m0_reqh_service_type_register(&m0_stats_svc_type);
+}
+
+/**
+ * Deregister Stats service
+ */
+M0_INTERNAL int m0_stats_svc_unregister(void)
+{
+	return m0_reqh_service_type_unregister(&m0_stats_svc_type);
+}
+
+/*
+ *  Local variables:
+ *  c-indentation-style: "K&R"
+ *  c-basic-offset: 8
+ *  tab-width: 8
+ *  fill-column: 80
+ *  scroll-step: 1
+ *  End:
+ */
diff --git a/addb/stats_srv.h b/addb/stats_srv.h
new file mode 100644
index 0000000..c11ceb8
--- /dev/null
+++ b/addb/stats_srv.h
@@ -0,0 +1,102 @@
+/* -*- C -*- */
+/*
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
+ *
+ * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
+ * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
+ * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
+ * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
+ * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
+ * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
+ * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
+ *
+ * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
+ * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
+ * http://www.xyratex.com/contact
+ *
+ * Original author: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
+ * Original creation date: 06/14/2013
+ */
+
+#pragma once
+
+#ifndef __MERO_ADDB_STATS_SVC_H__
+#define __MERO_ADDB_STATS_SVC_H__
+#ifndef __KERNEL__
+
+#include "reqh/reqh.h"
+#include "reqh/reqh_service.h"
+
+/**
+   @defgtoup stats_svc Stats Service Internal Interfaces
+   @{
+
+   @section DLD-stats-svc-fspecs Functioanl Specification
+   The primari data structures involved are:
+   - m0_mon_stats
+   - stats_svc
+   - stats_update_fom
+   - stats_query_fom
+
+   The interfaces involved are:
+*/
+
+#define M0_STATS_SVC_NAME "stats"
+extern struct m0_reqh_service_type m0_stats_svc_type;
+
+/**
+ * In-memory representation of Statistic information
+ * @todo This should goto mon.h
+ */
+struct m0_stats {
+	uint64_t            s_magic;
+	char		   *s_name;
+	/** Linkage to global stats objects */
+	struct m0_tlink    *s_linkage;
+	/** ADDB records which represent statitics */
+	struct m0_addb_rec *s_data;
+};
+
+/**
+ * Stats request handler service.
+ */
+struct stats_svc {
+	uint64_t	       ss_magic;
+	/** List of m0_stats in-momory objects */
+	struct m0_tl           ss_stats;
+	/** Embedded request handler service object. */
+	struct m0_reqh_service ss_reqhs;
+};
+
+/**
+ * Stats update request FOM
+ */
+struct stats_update_fom {
+	uint64_t      suf_magic;
+	struct m0_fom suf_fom;
+};
+
+/**
+ * Stats query FOM
+ */
+struct stats_query_fom {
+	uint64_t      sqf_magic;
+	struct m0_fom sqf_fom;
+};
+
+M0_INTERNAL int m0_stats_svc_register(void);
+M0_INTERNAL int m0_stats_svc_unregister(void);
+
+/** @} end group stats_service */
+
+#endif /* __KERNEL__ */
+#endif /* __MERO_ADDB_STATS_SVC_H_ */
+/*
+ *  Local variables:
+ *  c-indentation-style: "K&R"
+ *  c-basic-offset: 8
+ *  tab-width: 8
+ *  fill-column: 80
+ *  scroll-step: 1
+ *  End:
+ */
diff --git a/extra-libs/galois b/extra-libs/galois
index 10ccbd0..3230956 160000
--- a/extra-libs/galois
+++ b/extra-libs/galois
@@ -1 +1 @@
-Subproject commit 10ccbd0ca55db92909fda817ee1065d914736440
+Subproject commit 32309568c1977a934d9aab96552392417ca9dd21
-- 
1.8.3.2

