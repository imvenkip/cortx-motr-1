From 19dcffc8477737f49b5b34f70d488b760d3aaa90 Mon Sep 17 00:00:00 2001
From: Mandar Sawant <mandar_sawant@xyratex.com>
Date: Wed, 12 Mar 2014 15:46:47 +0530
Subject: [PATCH 8/8] be.conv.confx, - Code align.

---
 conf/db.c | 37 ++++++++++++++++++-------------------
 1 file changed, 18 insertions(+), 19 deletions(-)

diff --git a/conf/db.c b/conf/db.c
index 8ea7eee..1b20182 100644
--- a/conf/db.c
+++ b/conf/db.c
@@ -40,28 +40,28 @@
  * configuration object struct confx_ctx::cc_confx.
  */
 struct confx_ctx {
-        void                *cc_ptr;
-        m0_bcount_t          cc_total;
-        m0_bcount_t          cc_used;
-        struct m0_xcode_ctx  cc_xctx;
-        struct m0_confx      cc_confx;
+	void                *cc_ptr;
+	m0_bcount_t          cc_total;
+	m0_bcount_t          cc_used;
+	struct m0_xcode_ctx  cc_xctx;
+	struct m0_confx      cc_confx;
 };
 
 static void *confdb_obj_alloc(struct m0_xcode_cursor *ctx, size_t nob)
 {
-        struct confx_ctx *cctx;
-        char             *addr;
+	struct confx_ctx *cctx;
+	char             *addr;
 
-        cctx = container_of(container_of(ctx, struct m0_xcode_ctx, xcx_it),
-                            struct confx_ctx, cc_xctx);
+	cctx = container_of(container_of(ctx, struct m0_xcode_ctx, xcx_it),
+			    struct confx_ctx, cc_xctx);
 
-        M0_PRE(cctx->cc_ptr != NULL);
-        M0_PRE(cctx->cc_used + nob <= cctx->cc_total);
+	M0_PRE(cctx->cc_ptr != NULL);
+	M0_PRE(cctx->cc_used + nob <= cctx->cc_total);
 
-        addr = (char *)cctx->cc_ptr + cctx->cc_used;
-        cctx->cc_used += nob;
+	addr = (char *)cctx->cc_ptr + cctx->cc_used;
+	cctx->cc_used += nob;
 
-        return addr;
+	return addr;
 }
 
 M0_INTERNAL int m0_confdb_free(struct m0_confx *enc, struct m0_be_seg *seg,
@@ -125,9 +125,9 @@ static int confdb_alloc(struct confx_ctx *cctx, struct m0_be_seg *seg,
 M0_INTERNAL int m0_confx_to_db(struct m0_confx *conf, struct m0_be_seg *seg,
 			       struct m0_be_tx *tx, struct m0_confx **out)
 {
-        struct confx_ctx       *cctx = NULL;
+	struct confx_ctx       *cctx = NULL;
 	struct m0_xcode_ctx    *dctx;
-        struct m0_xcode_ctx     ctx;
+	struct m0_xcode_ctx     ctx;
 	int                     rc = 0;
 	int                     result;
 
@@ -151,10 +151,9 @@ M0_INTERNAL int m0_confx_to_db(struct m0_confx *conf, struct m0_be_seg *seg,
 		M0_SET0(dctx);
 		M0_SET0(&ctx);
 		m0_xcode_ctx_init(dctx, &M0_XCODE_OBJ(m0_confx_xc,
-				  &cctx->cc_confx));
+						      &cctx->cc_confx));
 		dctx->xcx_alloc = confdb_obj_alloc;
-		m0_xcode_ctx_init(&ctx, &M0_XCODE_OBJ(m0_confx_xc,
-						      *out));
+		m0_xcode_ctx_init(&ctx, &M0_XCODE_OBJ(m0_confx_xc, *out));
 		rc = m0_xcode_dup(dctx, &ctx);
 		if (rc == 0)
 			*out = &cctx->cc_confx;
-- 
1.8.3.2

