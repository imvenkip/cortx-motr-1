From b10d4069413dc5c8a087e7a3daaa642f99ca6280 Mon Sep 17 00:00:00 2001
From: Amit Jambure <Amit_Jambure@xyratex.com>
Date: Thu, 23 May 2013 17:16:01 +0530
Subject: [PATCH 8/9] rpc: RPC does not maintain any persistent state anymore.
 Fix UT failures.

---
 reqh/ut/reqh_fom_ut.c | 2 +-
 rpc/session_foms.c    | 2 +-
 rpc/ut/rcv_session.c  | 6 ------
 3 files changed, 2 insertions(+), 8 deletions(-)

diff --git a/reqh/ut/reqh_fom_ut.c b/reqh/ut/reqh_fom_ut.c
index a26a33d..16a5332 100644
--- a/reqh/ut/reqh_fom_ut.c
+++ b/reqh/ut/reqh_fom_ut.c
@@ -223,7 +223,6 @@ static int server_init(const char             *stob_path,
         /* Init mdstore without reading root cob. */
         rc = m0_mdstore_init(&srv_mdstore, &srv_cob_dom_id, &srv_db, 0);
         M0_UT_ASSERT(rc == 0);
-        m0_mdstore_fini(&srv_mdstore);
 
 	rc = m0_db_tx_init(&tx, &srv_db, 0);
 	M0_UT_ASSERT(rc == 0);
@@ -236,6 +235,7 @@ static int server_init(const char             *stob_path,
 	/* Comit and finalize old mdstore. */
 	m0_db_tx_commit(&tx);
 
+        m0_mdstore_fini(&srv_mdstore);
         /* Init new mdstore with open root flag. */
         rc = m0_mdstore_init(&srv_mdstore, &srv_cob_dom_id, &srv_db, 1);
         M0_UT_ASSERT(rc == 0);
diff --git a/rpc/session_foms.c b/rpc/session_foms.c
index 3240f19..18c5871 100644
--- a/rpc/session_foms.c
+++ b/rpc/session_foms.c
@@ -391,12 +391,12 @@ M0_INTERNAL int m0_rpc_fom_session_establish_tick(struct m0_fom *fom)
 		} while (session->s_session_id <= SESSION_ID_MIN ||
 			 session->s_session_id >  SESSION_ID_MAX);
 		session_state_set(session, M0_RPC_SESSION_IDLE);
+		reply->rser_session_id = session->s_session_id;
 	}
 	m0_rpc_machine_unlock(machine);
 
 out:
 	reply->rser_sender_id  = request->rse_sender_id;
-	reply->rser_session_id = session->s_session_id;
 	reply->rser_rc         = rc;
 
 	if (rc != 0) {
diff --git a/rpc/ut/rcv_session.c b/rpc/ut/rcv_session.c
index c362c03..dc2fb12 100644
--- a/rpc/ut/rcv_session.c
+++ b/rpc/ut/rcv_session.c
@@ -74,8 +74,6 @@ static void test_conn_establish(void)
 	struct fp fps1[] = {
 		{"session_gen_fom_create",         "reply_fop_alloc_failed"},
 		{"m0_rpc_fom_conn_establish_tick", "conn-alloc-failed"     },
-		{"m0_db_tx_init",                  "failed"                },
-		{"m0_rpc_slot_cob_create",         "failed"                },
 	};
 	struct fp fps2[] = {
 		{"rpc_chan_get",        "fake_error"   },
@@ -134,8 +132,6 @@ static void test_session_establish(void)
 								   -ETIMEDOUT},
 		{"m0_rpc_fom_session_establish_tick",
 		                           "session-alloc-failed", -ENOMEM},
-		{"m0_db_tx_init",          "failed",               -EINVAL},
-		{"m0_rpc_slot_cob_create", "failed",               -EINVAL},
 	};
 	rc = m0_net_end_point_create(&ep, &machine->rm_tm, remote_addr);
 	M0_UT_ASSERT(rc == 0);
@@ -182,7 +178,6 @@ static void test_session_terminate(void)
 	struct fp fps[] = {
 		{"session_gen_fom_create", "reply_fop_alloc_failed",
 							-ETIMEDOUT},
-		{"m0_db_tx_init",          "failed",    -EINVAL},
 	};
 	rc = m0_net_end_point_create(&ep, &machine->rm_tm, remote_addr);
 	M0_UT_ASSERT(rc == 0);
@@ -236,7 +231,6 @@ static void test_conn_terminate(void)
 	struct fp fps[] = {
 		{"session_gen_fom_create", "reply_fop_alloc_failed",
 							-ETIMEDOUT},
-		{"m0_db_tx_init",          "failed",    -EINVAL},
 	};
 
 	rc = m0_net_end_point_create(&ep, &machine->rm_tm, remote_addr);
-- 
1.8.3.2

