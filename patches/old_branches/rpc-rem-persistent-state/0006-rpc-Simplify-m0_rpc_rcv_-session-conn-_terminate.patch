From b2eb0a75ec4dd70f806206b43e71a6dadd54f4e2 Mon Sep 17 00:00:00 2001
From: Amit Jambure <Amit_Jambure@xyratex.com>
Date: Thu, 23 May 2013 15:41:41 +0530
Subject: [PATCH 6/9] rpc: Simplify m0_rpc_rcv_[session|conn]_terminate.

---
 rpc/conn.c    | 13 ++-----------
 rpc/session.c | 15 +++------------
 2 files changed, 5 insertions(+), 23 deletions(-)

diff --git a/rpc/conn.c b/rpc/conn.c
index 330180d..f949469 100644
--- a/rpc/conn.c
+++ b/rpc/conn.c
@@ -891,30 +891,21 @@ M0_INTERNAL void m0_rpc_conn_cleanup_all_sessions(struct m0_rpc_conn *conn)
 
 M0_INTERNAL int m0_rpc_rcv_conn_terminate(struct m0_rpc_conn *conn)
 {
-	struct m0_rpc_machine *machine;
-
 	M0_ENTRY("conn: %p", conn);
-	M0_PRE(conn != NULL);
-
-	machine = conn->c_rpc_machine;
-	M0_ASSERT(m0_rpc_machine_is_locked(machine));
 
+	M0_ASSERT(m0_rpc_machine_is_locked(conn->c_rpc_machine));
 	M0_ASSERT(m0_rpc_conn_invariant(conn));
 	M0_ASSERT(conn_state(conn) == M0_RPC_CONN_ACTIVE);
 	M0_ASSERT(m0_rpc_conn_is_rcv(conn));
 
 	if (conn->c_nr_sessions > 1)
 		m0_rpc_conn_cleanup_all_sessions(conn);
-
 	deregister_all_item_sources(conn);
-
-	conn_state_set(conn, M0_RPC_CONN_TERMINATING);
 	conn_state_set(conn, M0_RPC_CONN_TERMINATED);
+
 	M0_ASSERT(m0_rpc_conn_invariant(conn));
-	M0_POST(conn_state(conn) == M0_RPC_CONN_TERMINATED);
 	/* In-core state will be cleaned up by
 	   m0_rpc_conn_terminate_reply_sent() */
-	M0_ASSERT(m0_rpc_machine_is_locked(machine));
 	M0_RETURN(0);
 }
 
diff --git a/rpc/session.c b/rpc/session.c
index 48deb6f..7905bc9 100644
--- a/rpc/session.c
+++ b/rpc/session.c
@@ -131,6 +131,7 @@ static struct m0_sm_state_descr session_states[] = {
 	[M0_RPC_SESSION_IDLE] = {
 		.sd_name      = "Idle",
 		.sd_allowed   = M0_BITS(M0_RPC_SESSION_TERMINATING,
+					M0_RPC_SESSION_TERMINATED,
 					M0_RPC_SESSION_BUSY,
 					M0_RPC_SESSION_FAILED)
 	},
@@ -1027,28 +1028,18 @@ static void rcv_reply_consume(struct m0_rpc_item *req,
 
 M0_INTERNAL int m0_rpc_rcv_session_terminate(struct m0_rpc_session *session)
 {
-	struct m0_rpc_machine *machine;
-	struct m0_rpc_conn    *conn;
-
 	M0_ENTRY("session: %p", session);
-	M0_PRE(session != NULL);
-
-	conn    = session->s_conn;
-	machine = conn->c_rpc_machine;
-
-	M0_PRE(m0_rpc_machine_is_locked(machine));
 
+	M0_PRE(session != NULL);
+	M0_PRE(m0_rpc_machine_is_locked(session->s_conn->c_rpc_machine));
 	M0_ASSERT(m0_rpc_session_invariant(session));
 	M0_PRE(session_state(session) == M0_RPC_SESSION_IDLE);
 
-	session_state_set(session, M0_RPC_SESSION_TERMINATING);
 	/* For receiver side session, no slots are on ready_slots list
 	   since all reply items are bound items. */
 	session_state_set(session, M0_RPC_SESSION_TERMINATED);
 
 	M0_ASSERT(m0_rpc_session_invariant(session));
-	M0_ASSERT(m0_rpc_machine_is_locked(machine));
-
 	M0_RETURN(0);
 }
 
-- 
1.8.3.2

