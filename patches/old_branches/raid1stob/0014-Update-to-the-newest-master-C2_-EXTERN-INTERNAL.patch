From 891bf5c130a4ac591b53d8fac6b7f3d6e03f1fba Mon Sep 17 00:00:00 2001
From: Nikita Danilov <nikita_danilov@xyratex.com>
Date: Tue, 20 Nov 2012 21:52:23 +0400
Subject: [PATCH 14/15] Update to the newest master (C2_{EXTERN,INTERNAL}).

---
 lib/assert.c             |  2 +-
 lib/user_space/uthread.c |  2 +-
 stob/Makefile.sub        |  2 --
 stob/cache.c             | 31 ++++++++++++++++---------------
 stob/cache.h             | 32 ++++++++++++++++----------------
 5 files changed, 34 insertions(+), 35 deletions(-)

diff --git a/lib/assert.c b/lib/assert.c
index e0424e1..ac4d51f 100644
--- a/lib/assert.c
+++ b/lib/assert.c
@@ -43,7 +43,7 @@ enum {
 	BACKTRACE_DEPTH_MAX = 256
 };
 
-extern char *c2_debugger_args[4];
+C2_EXTERN char *c2_debugger_args[4];
 
 /**
    Simple user space panic function: issue diagnostics to the stderr, flush the
diff --git a/lib/user_space/uthread.c b/lib/user_space/uthread.c
index 564f1f7..e8f8007 100644
--- a/lib/user_space/uthread.c
+++ b/lib/user_space/uthread.c
@@ -144,7 +144,7 @@ C2_INTERNAL int c2_thread_confine(struct c2_thread *q,
 	return -pthread_setaffinity_np(q->t_h.h_id, sizeof cpuset, &cpuset);
 }
 
-char *c2_debugger_args[4] = {
+C2_INTERNAL char *c2_debugger_args[4] = {
 	NULL, /* debugger name */
 	NULL, /* our binary name */
 	NULL, /* our process id */
diff --git a/stob/Makefile.sub b/stob/Makefile.sub
index 365440a..c187760 100644
--- a/stob/Makefile.sub
+++ b/stob/Makefile.sub
@@ -3,7 +3,6 @@ nobase_colibri_include_HEADERS += stob/ad.h \
                                   stob/linux_getevents.h \
                                   stob/linux.h \
                                   stob/linux_internal.h \
-                                  stob/mirror.h \
                                   stob/stob.h \
                                   stob/stob_id.h
 
@@ -12,6 +11,5 @@ colibri_libcolibri_la_SOURCES  += \
                                   stob/cache.c \
                                   stob/linux.c \
                                   stob/linux_adieu.c \
-                                  stob/mirror.c \
                                   stob/stob.c \
                                   stob/stob_id.c
diff --git a/stob/cache.c b/stob/cache.c
index e20870c..1509ef7 100644
--- a/stob/cache.c
+++ b/stob/cache.c
@@ -33,26 +33,26 @@ C2_TL_DESCR_DEFINE(cache, "cacheable stobs", static, struct c2_stob_cacheable,
 
 C2_TL_DEFINE(cache, static, struct c2_stob_cacheable);
 
-void c2_stob_cacheable_init(struct c2_stob_cacheable *obj,
-			    const struct c2_stob_id *id,
-			    struct c2_stob_domain *dom)
+C2_INTERNAL void c2_stob_cacheable_init(struct c2_stob_cacheable *obj,
+					const struct c2_stob_id *id,
+					struct c2_stob_domain *dom)
 {
 	c2_stob_init(&obj->ca_stob, id, dom);
 	cache_tlink_init(obj);
 }
 
-void c2_stob_cacheable_fini(struct c2_stob_cacheable *obj)
+C2_INTERNAL void c2_stob_cacheable_fini(struct c2_stob_cacheable *obj)
 {
 	cache_tlink_del_fini(obj);
 	c2_stob_fini(&obj->ca_stob);
 }
 
-void c2_stob_cache_init(struct c2_stob_cache *cache)
+C2_INTERNAL void c2_stob_cache_init(struct c2_stob_cache *cache)
 {
 	cache_tlist_init(&cache->ch_head);
 }
 
-void c2_stob_cache_fini(struct c2_stob_cache *cache)
+C2_INTERNAL void c2_stob_cache_fini(struct c2_stob_cache *cache)
 {
 	struct c2_stob_cacheable *obj;
 
@@ -62,8 +62,9 @@ void c2_stob_cache_fini(struct c2_stob_cache *cache)
 	cache_tlist_fini(&cache->ch_head);
 }
 
-struct c2_stob_cacheable *c2_stob_cacheable_lookup(struct c2_stob_cache *cache,
-						   const struct c2_stob_id *id)
+C2_INTERNAL struct c2_stob_cacheable *
+c2_stob_cacheable_lookup(struct c2_stob_cache *cache,
+			 const struct c2_stob_id *id)
 {
 	struct c2_stob_cacheable *obj;
 
@@ -76,13 +77,13 @@ struct c2_stob_cacheable *c2_stob_cacheable_lookup(struct c2_stob_cache *cache,
 	return obj;
 }
 
-int c2_stob_cache_find(struct c2_stob_cache *cache,
-		       struct c2_stob_domain *dom,
-		       const struct c2_stob_id *id,
-		       int (*init)(struct c2_stob_domain *,
-				   const struct c2_stob_id *,
-				   struct c2_stob_cacheable **),
-		       struct c2_stob_cacheable **out)
+C2_INTERNAL int c2_stob_cache_find(struct c2_stob_cache *cache,
+				   struct c2_stob_domain *dom,
+				   const struct c2_stob_id *id,
+				   int (*init)(struct c2_stob_domain *,
+					       const struct c2_stob_id *,
+					       struct c2_stob_cacheable **),
+				   struct c2_stob_cacheable **out)
 {
 	struct c2_stob_cacheable *obj;
 	struct c2_stob_cacheable *ghost;
diff --git a/stob/cache.h b/stob/cache.h
index d90b3b6..80f229b 100644
--- a/stob/cache.h
+++ b/stob/cache.h
@@ -47,17 +47,18 @@ struct c2_stob_cache {
 	struct c2_tl ch_head;
 };
 
-void c2_stob_cacheable_init(struct c2_stob_cacheable *obj,
-			    const struct c2_stob_id *id,
-			    struct c2_stob_domain *dom);
-void c2_stob_cacheable_fini(struct c2_stob_cacheable *obj);
+C2_INTERNAL void c2_stob_cacheable_init(struct c2_stob_cacheable *obj,
+					const struct c2_stob_id *id,
+					struct c2_stob_domain *dom);
+C2_INTERNAL void c2_stob_cacheable_fini(struct c2_stob_cacheable *obj);
 
-void c2_stob_cache_init(struct c2_stob_cache *cache);
-void c2_stob_cache_fini(struct c2_stob_cache *cache);
+C2_INTERNAL void c2_stob_cache_init(struct c2_stob_cache *cache);
+C2_INTERNAL void c2_stob_cache_fini(struct c2_stob_cache *cache);
 
 /** Searches for the object with a given identifier in the cache. */
-struct c2_stob_cacheable *c2_stob_cacheable_lookup(struct c2_stob_cache *cache,
-						   const struct c2_stob_id *id);
+C2_INTERNAL struct c2_stob_cacheable *
+c2_stob_cacheable_lookup(struct c2_stob_cache *cache,
+			 const struct c2_stob_id *id);
 
 /**
  * Searches for the object with a given identifier in the cache, creates one if
@@ -66,14 +67,13 @@ struct c2_stob_cacheable *c2_stob_cacheable_lookup(struct c2_stob_cache *cache,
  *
  * Domain read-write lock is used for synchronisation.
  */
-int c2_stob_cache_find(struct c2_stob_cache *cache,
-		       struct c2_stob_domain *dom,
-		       const struct c2_stob_id *id,
-		       int (*init)(struct c2_stob_domain *,
-				   const struct c2_stob_id *,
-				   struct c2_stob_cacheable **),
-		       struct c2_stob_cacheable **out);
-
+C2_INTERNAL int c2_stob_cache_find(struct c2_stob_cache *cache,
+				   struct c2_stob_domain *dom,
+				   const struct c2_stob_id *id,
+				   int (*init)(struct c2_stob_domain *,
+					       const struct c2_stob_id *,
+					       struct c2_stob_cacheable **),
+				   struct c2_stob_cacheable **out);
 
 /** @} end group stobcache */
 
-- 
1.8.3.2

