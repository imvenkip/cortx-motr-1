From d5c567089dc0cc431df1d64ca32057548ce4ade6 Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Thu, 29 Nov 2012 10:49:30 +0200
Subject: [PATCH 41/58] LogD 1517: misleading name:
 s/c2_net_test_serialize_len_total/net_test_accumulate_len/

---
 net/test/commands.c  | 14 +++++++-------
 net/test/network.c   |  8 ++++----
 net/test/node.h      |  8 ++++----
 net/test/node_bulk.c |  8 ++++----
 net/test/serialize.c |  2 +-
 net/test/serialize.h | 18 +++++++++---------
 net/test/slist.c     |  8 ++++----
 net/test/stats.c     |  4 ++--
 net/test/str.c       |  4 ++--
 9 files changed, 37 insertions(+), 37 deletions(-)

diff --git a/net/test/commands.c b/net/test/commands.c
index 0516fce..1baaa7e 100644
--- a/net/test/commands.c
+++ b/net/test/commands.c
@@ -123,18 +123,18 @@ cmd_status_data_serialize(enum c2_net_test_serialize_op op,
 	len = c2_net_test_serialize(op, sd,
 				    USE_TYPE_DESCR(c2_net_test_cmd_status_data),
 				    bv, offset);
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 
 	for (i = 0; i < ARRAY_SIZE(msg_nr) && len_total != 0; ++i) {
 		len = c2_net_test_serialize(op, (void *) msg_nr[i],
 					    USE_TYPE_DESCR(c2_net_test_msg_nr),
 					    bv, offset + len_total);
-		len_total = c2_net_test_serialize_len_total(len_total, len);
+		len_total = net_test_accumulate_len(len_total, len);
 	}
 	for (i = 0; i < ARRAY_SIZE(stats) && len_total != 0; ++i) {
 		len = c2_net_test_stats_serialize(op, (void *) stats[i], bv,
 						  offset + len_total);
-		len_total = c2_net_test_serialize_len_total(len_total, len);
+		len_total = net_test_accumulate_len(len_total, len);
 	}
 	return len_total;
 }
@@ -163,7 +163,7 @@ static int cmd_serialize(enum c2_net_test_serialize_op op,
 				    bv, offset);
 	if (len == 0)
 		return -EINVAL;
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 
 	switch (cmd->ntc_type) {
 	case C2_NET_TEST_CMD_INIT:
@@ -172,13 +172,13 @@ static int cmd_serialize(enum c2_net_test_serialize_op op,
 					bv, offset + len_total);
 		if (len == 0)
 			break;
-		len_total = c2_net_test_serialize_len_total(len_total, len);
+		len_total = net_test_accumulate_len(len_total, len);
 
 		len = c2_net_test_str_serialize(op, &cmd->ntc_init.ntci_tm_ep,
 						bv, offset + len_total);
 		if (len == 0)
 			break;
-		len_total = c2_net_test_serialize_len_total(len_total, len);
+		len_total = net_test_accumulate_len(len_total, len);
 
 		len = c2_net_test_slist_serialize(op, &cmd->ntc_init.ntci_ep,
 						  bv, offset + len_total);
@@ -202,7 +202,7 @@ static int cmd_serialize(enum c2_net_test_serialize_op op,
 		return -ENOSYS;
 	};
 
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 	return len_total == 0 ? -EINVAL : 0;
 }
 
diff --git a/net/test/network.c b/net/test/network.c
index 5b7d550..73f43a7 100644
--- a/net/test/network.c
+++ b/net/test/network.c
@@ -597,7 +597,7 @@ static c2_bcount_t network_bd_serialize(enum c2_net_test_serialize_op op,
 				    bv, bv_offset);
 	if (len == 0)
 		return 0;
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 
 	/* optimizing memory allocation */
 	if (op == C2_NET_TEST_DESERIALIZE &&
@@ -615,7 +615,7 @@ static c2_bcount_t network_bd_serialize(enum c2_net_test_serialize_op op,
 	len = c2_net_test_serialize_data(op, buf->nb_desc.nbd_data,
 					 buf->nb_desc.nbd_len, true,
 					 bv, bv_offset + len_total);
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 	return len_total;
 }
 
@@ -690,12 +690,12 @@ c2_net_test_network_bd_serialize(enum c2_net_test_serialize_op op,
 		len = network_bds_serialize(op, &nr, bv);
 		if (len == 0)
 			return 0;
-		len_total = c2_net_test_serialize_len_total(0, len);
+		len_total = net_test_accumulate_len(0, len);
 	} else {
 		len_total = 0;
 	}
 	len = network_bd_serialize(op, buf, bv, offset + len_total);
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 	/* increase number of descriptors for 'serialize' operation */
 	if (len_total != 0 && op == C2_NET_TEST_SERIALIZE) {
 		nr = c2_net_test_network_bd_nr_get(ctx, buf_ping_index);
diff --git a/net/test/node.h b/net/test/node.h
index 3cc5681..ea727cd 100644
--- a/net/test/node.h
+++ b/net/test/node.h
@@ -124,21 +124,21 @@
 	len = serialize_first_part(...);
 	if (len == 0)
 		return 0;
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 	len = serialize_second_part(...);
 	if (len == 0)
 		return 0;
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 	...
 	for (i = 0; i < number_of_items && len_total != 0; ++i) {
 		len = serialize_item(i, ...);
-		len_total = c2_net_test_serialize_len_total(len_total, len);
+		len_total = net_test_accumulate_len(len_total, len);
 	}
 	if (len_total == 0)
 		return 0;
 	...
 	len = serialize_last_part(...);
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 	return len_total;
    @endcode
 
diff --git a/net/test/node_bulk.c b/net/test/node_bulk.c
index 5d22317..40a3b89 100644
--- a/net/test/node_bulk.c
+++ b/net/test/node_bulk.c
@@ -647,7 +647,7 @@ static c2_bcount_t buf_desc_deserialize(struct node_bulk_ctx *ctx,
 					       buf_ping_index, offset);
 	if (len == 0)
 		return 0;
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 
 	/*
 	 * buf->nb_desc = zero descriptor
@@ -664,7 +664,7 @@ static c2_bcount_t buf_desc_deserialize(struct node_bulk_ctx *ctx,
 		buf_desc_free(ctx, buf_bulk_index);
 		return 0;
 	}
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 
 	/*
 	 * buf->nb_desc = descriptor for active bulk receiving
@@ -1004,7 +1004,7 @@ static c2_bcount_t client_bds_serialize2(struct c2_net_test_network_ctx *net,
 					       msg_buf_index, offset);
 	if (len == 0)
 		return 0;
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 
 	len = c2_net_test_network_bd_serialize(C2_NET_TEST_SERIALIZE,
 					       net, bsb_index * 2 + 1,
@@ -1024,7 +1024,7 @@ static c2_bcount_t client_bds_serialize2(struct c2_net_test_network_ctx *net,
 		--nr;
 		c2_net_test_network_bd_nr_set(net, msg_buf_index, nr);
 	}
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 	return len_total;
 }
 
diff --git a/net/test/serialize.c b/net/test/serialize.c
index 3377d17..17e4d4f 100644
--- a/net/test/serialize.c
+++ b/net/test/serialize.c
@@ -198,7 +198,7 @@ c2_bcount_t c2_net_test_serialize(enum c2_net_test_serialize_op op,
 					      d_i->ntd_plain_data,
 					      bv, bv_offset + len_total,
 					      bv_length);
-		len_total = c2_net_test_serialize_len_total(len_total, len);
+		len_total = net_test_accumulate_len(len_total, len);
 		if (len_total == 0)
 			break;
 	}
diff --git a/net/test/serialize.h b/net/test/serialize.h
index 74e0d4f..a6a89bc 100644
--- a/net/test/serialize.h
+++ b/net/test/serialize.h
@@ -110,17 +110,17 @@ c2_bcount_t c2_net_test_serialize(enum c2_net_test_serialize_op op,
 /**
    Get new len_total value after serializing part of data.
    @see @ref net-test-fspec-usecases-serialize
-   @param len_total Total serialized length before serializing current
-		    part of data.
-   @param len Length of serialized current part of data.
-	      0 means serializing failed.
-   @return 0 if len == 0
-	   len_total + len otherwise.
+   @param accumulator Total serialized length before serializing current
+		      part of data.
+   @param addend Length of serialized current part of data.
+		 0 means serializing failed.
+   @return 0 if addend == 0
+	   accumulator + addend otherwise.
  */
-static inline c2_bcount_t c2_net_test_serialize_len_total(c2_bcount_t len_total,
-							  c2_bcount_t len)
+static inline c2_bcount_t net_test_accumulate_len(c2_bcount_t accumulator,
+						  c2_bcount_t addend)
 {
-	return len == 0 ? 0 : len_total + len;
+	return addend == 0 ? 0 : accumulator + addend;
 }
 
 /**
diff --git a/net/test/slist.c b/net/test/slist.c
index 81f4047..7a3a0f8 100644
--- a/net/test/slist.c
+++ b/net/test/slist.c
@@ -171,12 +171,12 @@ static c2_bcount_t slist_encode(struct c2_net_test_slist *slist,
 				    USE_TYPE_DESCR(slist_params), bv, offset);
 	if (len == 0 || slist->ntsl_nr == 0)
 		return len;
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 
 	len = c2_net_test_serialize_data(C2_NET_TEST_SERIALIZE, slist->ntsl_str,
 					 sp.sp_len, true,
 					 bv, offset + len_total);
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 	return len_total;
 }
 
@@ -196,7 +196,7 @@ static c2_bcount_t slist_decode(struct c2_net_test_slist *slist,
 				    bv, offset);
 	if (len == 0 || sp.sp_magic != SLIST_SERIALIZE_MAGIC)
 		return 0;
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 
 	C2_SET0(slist);
 	slist->ntsl_nr = sp.sp_nr;
@@ -213,7 +213,7 @@ static c2_bcount_t slist_decode(struct c2_net_test_slist *slist,
 					 bv, offset + len_total);
 	if (len == 0)
 		goto failed;
-	len_total = c2_net_test_serialize_len_total(len_total, len);
+	len_total = net_test_accumulate_len(len_total, len);
 
 	slist->ntsl_list[0] = slist->ntsl_str;
 	/* additional check if received string doesn't contains '\0' */
diff --git a/net/test/stats.c b/net/test/stats.c
index 0037067..b9c6422 100644
--- a/net/test/stats.c
+++ b/net/test/stats.c
@@ -144,12 +144,12 @@ c2_bcount_t c2_net_test_stats_serialize(enum c2_net_test_serialize_op op,
 	len = c2_net_test_serialize(op, stats,
 				    USE_TYPE_DESCR(c2_net_test_stats),
 				    bv, bv_offset);
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 	for (i = 0; i < ARRAY_SIZE(pv128) && len_total != 0; ++i) {
 		len = c2_net_test_serialize(op, pv128[i],
 					    USE_TYPE_DESCR(c2_uint128),
 					    bv, bv_offset + len_total);
-		len_total = c2_net_test_serialize_len_total(len_total, len);
+		len_total = net_test_accumulate_len(len_total, len);
 	}
 	return len_total;
 }
diff --git a/net/test/str.c b/net/test/str.c
index 2be811f..ee3eaf4 100644
--- a/net/test/str.c
+++ b/net/test/str.c
@@ -67,7 +67,7 @@ c2_bcount_t c2_net_test_str_serialize(enum c2_net_test_serialize_op op,
 	len = c2_net_test_serialize(op, &str_len,
 				    USE_TYPE_DESCR(net_test_str_len),
 				    bv, bv_offset);
-	len_total = c2_net_test_serialize_len_total(0, len);
+	len_total = net_test_accumulate_len(0, len);
 	if (len_total != 0) {
 		if (op == C2_NET_TEST_DESERIALIZE) {
 			if (str_len.ntsl_magic != C2_NET_TEST_STR_MAGIC)
@@ -79,7 +79,7 @@ c2_bcount_t c2_net_test_str_serialize(enum c2_net_test_serialize_op op,
 		len = c2_net_test_serialize_data(op, *str, str_len.ntsl_len,
 						 true,
 						 bv, bv_offset + len_total);
-		len_total = c2_net_test_serialize_len_total(len_total, len);
+		len_total = net_test_accumulate_len(len_total, len);
 	};
 
 	return len_total;
-- 
1.8.3.2

