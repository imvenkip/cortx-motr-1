From 63606523c2c76329b078397d3fe5c7a544dfda44 Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Fri, 30 Nov 2012 06:01:00 +0200
Subject: [PATCH 50/58] LogD 1526: rewrote c2_net_test_network_bd_nr*() API

---
 net/test/network.c    | 76 ++++++++++++++++++++++++++-------------------------
 net/test/network.h    | 13 +++++----
 net/test/node.h       |  2 +-
 net/test/node_bulk.c  |  7 ++---
 net/test/ut/network.c |  6 ++--
 5 files changed, 52 insertions(+), 52 deletions(-)

diff --git a/net/test/network.c b/net/test/network.c
index c88a5cc..036b7a6 100644
--- a/net/test/network.c
+++ b/net/test/network.c
@@ -561,7 +561,7 @@ struct net_test_network_bds_header {
 	/** C2_NET_TEST_NETWORK_BDS_MAGIC */
 	uint64_t ntnbh_magic;
 	/** Number of buffer descriptors in ping buffer */
-	size_t	 ntnbh_nr;
+	uint64_t ntnbh_nr;
 };
 
 /** net_test_network_bds_header_descr */
@@ -643,6 +643,36 @@ static c2_bcount_t network_bds_serialize(enum c2_net_test_serialize_op op,
 	return len;
 }
 
+/**
+ */
+static size_t network_bd_nr_add(struct c2_net_test_network_ctx *ctx,
+				uint32_t buf_ping_index,
+				int32_t value)
+{
+	struct c2_bufvec *bv;
+	c2_bcount_t	  len;
+	size_t		  nr;
+
+	C2_PRE(ctx != NULL);
+	C2_PRE(buf_ping_index < ctx->ntc_buf_ping_nr);
+	C2_PRE(C2_IN(value, (-1, 0, 1)));
+
+	bv = &c2_net_test_network_buf(ctx, C2_NET_TEST_BUF_PING,
+				      buf_ping_index)->nb_buffer;
+	len = network_bds_serialize(C2_NET_TEST_DESERIALIZE, &nr, bv);
+	C2_ASSERT(len != 0);
+	/* simply "get number of network bd" */
+	if (value == 0)
+		return nr;
+
+	C2_ASSERT(ergo(value == -1, nr > 0));
+	nr += value;
+	len = network_bds_serialize(C2_NET_TEST_SERIALIZE, &nr, bv);
+	C2_ASSERT(len != 0);
+
+	return nr;
+}
+
 c2_bcount_t
 c2_net_test_network_bd_serialize(enum c2_net_test_serialize_op op,
 				 struct c2_net_test_network_ctx *ctx,
@@ -655,7 +685,6 @@ c2_net_test_network_bd_serialize(enum c2_net_test_serialize_op op,
 	c2_bcount_t	      len;
 	c2_bcount_t	      len_total;
 	size_t		      nr;
-	int		      rc;
 
 	C2_PRE(op == C2_NET_TEST_SERIALIZE || op == C2_NET_TEST_DESERIALIZE);
 	C2_PRE(ctx != NULL);
@@ -692,13 +721,8 @@ c2_net_test_network_bd_serialize(enum c2_net_test_serialize_op op,
 	len = network_bd_serialize(op, buf, bv, offset + len_total);
 	len_total = net_test_accumulate_len(len_total, len);
 	/* increase number of descriptors for 'serialize' operation */
-	if (len_total != 0 && op == C2_NET_TEST_SERIALIZE) {
-		nr = c2_net_test_network_bd_nr_get(ctx, buf_ping_index);
-		++nr;
-		rc = c2_net_test_network_bd_nr_set(ctx, buf_ping_index, nr);
-		if (rc != 0)
-			return 0;
-	}
+	if (len_total != 0 && op == C2_NET_TEST_SERIALIZE)
+		network_bd_nr_add(ctx, buf_ping_index, 1);
 
 	/*
 	C2_LOG(C2_DEBUG, "bd_serialize: len_total = %lu",
@@ -707,38 +731,16 @@ c2_net_test_network_bd_serialize(enum c2_net_test_serialize_op op,
 	return len_total;
 }
 
-size_t c2_net_test_network_bd_nr_get(struct c2_net_test_network_ctx *ctx,
-				     uint32_t buf_ping_index)
+size_t c2_net_test_network_bd_nr(struct c2_net_test_network_ctx *ctx,
+				 uint32_t buf_ping_index)
 {
-	struct c2_bufvec *bv;
-	c2_bcount_t	  len;
-	size_t		  nr;
-
-	C2_PRE(ctx != NULL);
-	C2_PRE(buf_ping_index < ctx->ntc_buf_ping_nr);
-
-	bv = &c2_net_test_network_buf(ctx, C2_NET_TEST_BUF_PING,
-				      buf_ping_index)->nb_buffer;
-	len = network_bds_serialize(C2_NET_TEST_DESERIALIZE, &nr, bv);
-
-	return len == 0 ? 0 : nr;
+	return network_bd_nr_add(ctx, buf_ping_index, 0);
 }
 
-int c2_net_test_network_bd_nr_set(struct c2_net_test_network_ctx *ctx,
-				  uint32_t buf_ping_index,
-				  size_t nr)
+void c2_net_test_network_bd_nr_dec(struct c2_net_test_network_ctx *ctx,
+				   uint32_t buf_ping_index)
 {
-	struct c2_bufvec *bv;
-	c2_bcount_t	  len;
-
-	C2_PRE(ctx != NULL);
-	C2_PRE(buf_ping_index < ctx->ntc_buf_ping_nr);
-
-	bv = &c2_net_test_network_buf(ctx, C2_NET_TEST_BUF_PING,
-				      buf_ping_index)->nb_buffer;
-	len = network_bds_serialize(C2_NET_TEST_SERIALIZE, &nr, bv);
-
-	return len == 0 ? -ENOBUFS : 0;
+	network_bd_nr_add(ctx, buf_ping_index, -1);
 }
 
 struct c2_net_buffer *
diff --git a/net/test/network.h b/net/test/network.h
index 3269712..1b89902 100644
--- a/net/test/network.h
+++ b/net/test/network.h
@@ -276,17 +276,18 @@ c2_net_test_network_bd_serialize(enum c2_net_test_serialize_op op,
    @pre ctx != NULL
    @pre buf_ping_index < ctx->ntc_buf_ping_nr
  */
-size_t c2_net_test_network_bd_nr_get(struct c2_net_test_network_ctx *ctx,
-				     uint32_t buf_ping_index);
+size_t c2_net_test_network_bd_nr(struct c2_net_test_network_ctx *ctx,
+				 uint32_t buf_ping_index);
 
 /**
-   Set number of network buffer descriptors in ping buffer.
+   Decrease number of network buffer descriptors in ping buffer.
+   This function simply decreases number of network buffer descriptors
+   stored in ping buffer.
    @see @ref net-test-fspec-usecases-bd
    @see c2_net_test_network_bd_serialize()
  */
-int c2_net_test_network_bd_nr_set(struct c2_net_test_network_ctx *ctx,
-				  uint32_t buf_ping_index,
-				  size_t nr);
+void c2_net_test_network_bd_nr_dec(struct c2_net_test_network_ctx *ctx,
+				   uint32_t buf_ping_index);
 
 /**
    Accessor to buffers in net-test network context.
diff --git a/net/test/node.h b/net/test/node.h
index ea727cd..a8a0776 100644
--- a/net/test/node.h
+++ b/net/test/node.h
@@ -103,7 +103,7 @@
    c2_bcount_t len;
    size_t desc_nr;
    <...>
-   desc_nr = c2_net_test_network_bd_nr_get(ctx, buf_ping_index);
+   desc_nr = c2_net_test_network_bd_nr(ctx, buf_ping_index);
    for (i = 0; i < desc_nr; ++i) {
 	len = c2_net_test_network_bd_serialize(C2_NET_TEST_DESERIALIZE,
 					       ctx, <buf_bulk_index>,
diff --git a/net/test/node_bulk.c b/net/test/node_bulk.c
index 2a37d20..5bd930c 100644
--- a/net/test/node_bulk.c
+++ b/net/test/node_bulk.c
@@ -749,7 +749,7 @@ static void node_bulk_cb_server(struct node_bulk_ctx *ctx,
 	if (q == C2_NET_QT_MSG_RECV) {
 		if (ev->nbe_status != 0)
 			return;
-		nr = c2_net_test_network_bd_nr_get(&ctx->nbc_net, buf_index);
+		nr = c2_net_test_network_bd_nr(&ctx->nbc_net, buf_index);
 		if (nr % 2 != 0) {
 			C2_LOG(C2_DEBUG, "MS_BAD: nr = %lu", nr);
 			sd_update(ctx, MT_MSG, MS_BAD, MD_RECV);
@@ -989,7 +989,6 @@ static c2_bcount_t client_bds_serialize2(struct c2_net_test_network_ctx *net,
 {
 	c2_bcount_t len;
 	c2_bcount_t len_total;
-	size_t	    nr;
 
 	len = c2_net_test_network_bd_serialize(C2_NET_TEST_SERIALIZE,
 					       net, bsb_index * 2,
@@ -1012,9 +1011,7 @@ static c2_bcount_t client_bds_serialize2(struct c2_net_test_network_ctx *net,
 		 * descriptors should be added both or should not be
 		 * added at all.
 		 */
-		nr = c2_net_test_network_bd_nr_get(net, msg_buf_index);
-		--nr;
-		c2_net_test_network_bd_nr_set(net, msg_buf_index, nr);
+		c2_net_test_network_bd_nr_dec(net, msg_buf_index);
 	}
 	len_total = net_test_accumulate_len(len_total, len);
 	return len_total;
diff --git a/net/test/ut/network.c b/net/test/ut/network.c
index ffb3051..a3fbf86 100644
--- a/net/test/ut/network.c
+++ b/net/test/ut/network.c
@@ -311,7 +311,7 @@ void c2_net_test_network_ut_bulk(void)
 	bcount = c2_net_test_network_bd_serialize(C2_NET_TEST_SERIALIZE,
 						  &client, 1, 0, offset);
 	C2_UT_ASSERT(bcount != 0);
-	rc_size = c2_net_test_network_bd_nr_get(&client, 0);
+	rc_size = c2_net_test_network_bd_nr(&client, 0);
 	C2_UT_ASSERT(rc_size == 2);
 	/* client: send ping buf */
 	rc = c2_net_test_network_msg_send(&client, 0, 0);
@@ -322,7 +322,7 @@ void c2_net_test_network_ut_bulk(void)
 	rc_bool = net_buf_data_eq(C2_NET_TEST_BUF_PING, &client, 0, &server, 0);
 	C2_ASSERT(rc_bool);
 	/* server: extract buf descriptor for active recv */
-	rc_size = c2_net_test_network_bd_nr_get(&server, 0);
+	rc_size = c2_net_test_network_bd_nr(&server, 0);
 	C2_UT_ASSERT(rc_size == 2);
 	offset = 0;
 	bcount = c2_net_test_network_bd_serialize(C2_NET_TEST_DESERIALIZE,
@@ -435,7 +435,7 @@ static void multiple_buf_desc_encode_decode(struct c2_net_test_network_ctx *ctx,
 		C2_UT_ASSERT(bcount != 0);
 		offset += bcount;
 		/* check number of buf descriptors in the ping buffer */
-		rc_size = c2_net_test_network_bd_nr_get(ctx, 0);
+		rc_size = c2_net_test_network_bd_nr(ctx, 0);
 		C2_UT_ASSERT(rc_size == i + 1);
 	}
 	/* prepare to decode */
-- 
1.8.3.2

