From fb1ec05b36b424b482fcc5a0e549e742894e2a14 Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Tue, 6 Aug 2013 07:57:21 +0300
Subject: [PATCH 1/3] db: kernel implementation used in userspace

---
 balloc/ut/mperf.c                   |  1 +
 be/tx.c                             |  6 ++++++
 cm/ut/cm.c                          |  2 ++
 console/console_mesg.c              |  1 +
 console/ut/console.c                |  2 ++
 db/Makefile.sub                     |  2 +-
 db/db.h                             |  4 ++++
 db/linux_kernel/db.c                | 13 +++++++++++--
 db/ut/db.c                          |  5 +++++
 lib/linux_kernel/mutex.c            |  2 +-
 lib/user_space/uthread.c            |  2 ++
 mero/linux_kernel/dummy_init_fini.c |  2 ++
 rpc/it/rpc_ping.c                   |  1 +
 sns/cm/ut/net.c                     |  2 ++
 yaml2db/st/main.c                   |  1 +
 15 files changed, 42 insertions(+), 4 deletions(-)

diff --git a/balloc/ut/mperf.c b/balloc/ut/mperf.c
index f06f337..edbbf74 100644
--- a/balloc/ut/mperf.c
+++ b/balloc/ut/mperf.c
@@ -23,6 +23,7 @@
 #include <errno.h>
 #include <sys/time.h>
 #include <err.h>
+#include <unistd.h>	/* usleep */
 
 #include "dtm/dtm.h"      /* m0_dtx */
 #include "lib/arith.h"    /* M0_3WAY, m0_uint128 */
diff --git a/be/tx.c b/be/tx.c
index 4aae6b1..2c766e0 100644
--- a/be/tx.c
+++ b/be/tx.c
@@ -32,6 +32,12 @@
 #include "be/domain.h"		/* m0_be_domain_engine */
 #include "be/engine.h"		/* m0_be_engine__tx_state_set */
 
+/* XXX There is some reason why this file can't be included using lib/cdefs.h
+ * Needs to be discovered. Probably will be fixed after eliminating
+ * db/db.h completely
+ */
+#include <stddef.h>		/* ptrdiff_t */
+
 /**
  * @addtogroup be
  *
diff --git a/cm/ut/cm.c b/cm/ut/cm.c
index d8a25b7..3c8f7be 100644
--- a/cm/ut/cm.c
+++ b/cm/ut/cm.c
@@ -37,6 +37,8 @@
 #include "addb/addb.h"
 #include "cm/ut/common_service.h"
 
+#include <unistd.h>			/* usleep */
+
 static int cm_ut_init(void)
 {
 	int rc;
diff --git a/console/console_mesg.c b/console/console_mesg.c
index f7f5c01..f0a4e50 100644
--- a/console/console_mesg.c
+++ b/console/console_mesg.c
@@ -18,6 +18,7 @@
  * Original creation date: 09/09/2011
  */
 
+#include <stdio.h>	/* fprintf */
 #include "lib/errno.h" /* ENOTSUP */
 #include "lib/misc.h"  /* M0_BITS */
 
diff --git a/console/ut/console.c b/console/ut/console.c
index 5e586cb..c8f0fd0 100644
--- a/console/ut/console.c
+++ b/console/ut/console.c
@@ -23,6 +23,8 @@
 #endif
 
 #include <sysexits.h>
+#include <unistd.h>		/* truncate */
+#include <sys/types.h>		/* truncate */
 
 #include "lib/types.h"        /* uint64_t */
 #include "ut/ut.h"
diff --git a/db/Makefile.sub b/db/Makefile.sub
index 8c28086..17c26bc 100644
--- a/db/Makefile.sub
+++ b/db/Makefile.sub
@@ -6,7 +6,7 @@ nobase_mero_include_HEADERS += db/db.h \
                                   db/db_common.h \
                                   db/db_addb.h
 
-mero_libmero_la_SOURCES  += db/db.c \
+mero_libmero_la_SOURCES  += db/linux_kernel/db.c \
                                   db/extmap.c \
                                   db/extmap_xc.c \
                                   db/db_common.c
diff --git a/db/db.h b/db/db.h
index fa6e21a..420493f 100644
--- a/db/db.h
+++ b/db/db.h
@@ -65,11 +65,15 @@ struct m0_db_rec;
 struct m0_db_tx;
 struct m0_buf;
 
+/*
 #ifdef __KERNEL__
+*/
 #include "db/linux_kernel/db_impl.h"
+/*
 #else
 #include "db/db_impl.h"
 #endif
+*/
 
 /** Data-base environment.
 
diff --git a/db/linux_kernel/db.c b/db/linux_kernel/db.c
index 81d7cfb..8d673ac 100644
--- a/db/linux_kernel/db.c
+++ b/db/linux_kernel/db.c
@@ -47,7 +47,7 @@ static bool ktable_invariant_locked(struct m0_table *t,
 				    struct m0_table_impl *ti);
 static bool ktable_invariant(struct m0_table *t);
 
-M0_INTERNAL int m0_dbenv_init(struct m0_dbenv *env, const char *name,
+int m0_dbenv_init(struct m0_dbenv *env, const char *name,
 			      uint64_t flags)
 {
 	m0_dbenv_common_init(env);
@@ -55,7 +55,7 @@ M0_INTERNAL int m0_dbenv_init(struct m0_dbenv *env, const char *name,
 }
 M0_EXPORTED(m0_dbenv_init);
 
-M0_INTERNAL void m0_dbenv_fini(struct m0_dbenv *env)
+void m0_dbenv_fini(struct m0_dbenv *env)
 {
 	m0_dbenv_common_fini(env);
 }
@@ -588,6 +588,15 @@ static bool ktable_invariant(struct m0_table *t)
 	return result;
 }
 
+M0_INTERNAL int m0_db_init(void)
+{
+	return 0;
+}
+
+M0_INTERNAL void m0_db_fini(void)
+{
+}
+
 /** @} end of db group */
 
 /*
diff --git a/db/ut/db.c b/db/ut/db.c
index 4ff05b6..112ab1e 100644
--- a/db/ut/db.c
+++ b/db/ut/db.c
@@ -392,7 +392,12 @@ static void test_cursor_flags_read_only(void)
 	M0_UT_ASSERT(result == 0);
 
         /* lock will not blocks */
+/* XXX disabled because of disabled db5 */
+#if 0
 	result = m0_db_tx_init(&tx2, &db, DB_TXN_NOWAIT);
+#else
+	result = m0_db_tx_init(&tx2, &db, 0);
+#endif
 	M0_UT_ASSERT(result == 0);
 
         result = m0_db_cursor_init(&cursor2, &table2, &tx2, 0);
diff --git a/lib/linux_kernel/mutex.c b/lib/linux_kernel/mutex.c
index aad7832..180c43c 100644
--- a/lib/linux_kernel/mutex.c
+++ b/lib/linux_kernel/mutex.c
@@ -40,7 +40,7 @@ M0_EXPORTED(m0_mutex_init);
 
 M0_INTERNAL void m0_mutex_fini(struct m0_mutex *mutex)
 {
-	mutex_destroy(&mutex->m_mutex);
+	/* mutex_destroy(&mutex->m_mutex); */
 }
 M0_EXPORTED(m0_mutex_fini);
 
diff --git a/lib/user_space/uthread.c b/lib/user_space/uthread.c
index 19ef537..d095dd8 100644
--- a/lib/user_space/uthread.c
+++ b/lib/user_space/uthread.c
@@ -160,6 +160,8 @@ M0_INTERNAL int m0_threads_init(void)
 	env_ptr = getenv("MERO_DEBUGGER");
 	if (env_ptr != NULL)
 		m0_debugger_args[0] = strdup(env_ptr);
+	else
+		m0_debugger_args[0] = strdup("gdb");    /* XXX */
 	/*
 	 * Note: program_invocation_name requires _GNU_SOURCE.
 	 */
diff --git a/mero/linux_kernel/dummy_init_fini.c b/mero/linux_kernel/dummy_init_fini.c
index 93ad2ec..29ed91e 100644
--- a/mero/linux_kernel/dummy_init_fini.c
+++ b/mero/linux_kernel/dummy_init_fini.c
@@ -53,6 +53,7 @@ M0_INTERNAL void m0_threads_fini(void)
 
 }
 
+#if 0
 M0_INTERNAL int m0_db_init(void)
 {
 	DUMMY_IMPLEMENTATION;
@@ -63,6 +64,7 @@ M0_INTERNAL void m0_db_fini(void)
 {
 
 }
+#endif
 
 M0_INTERNAL int m0_linux_stobs_init(void)
 {
diff --git a/rpc/it/rpc_ping.c b/rpc/it/rpc_ping.c
index e3d823f..2d9b6b4 100644
--- a/rpc/it/rpc_ping.c
+++ b/rpc/it/rpc_ping.c
@@ -50,6 +50,7 @@
 #  include <stdlib.h>
 #  include <stdio.h>
 #  include <string.h>
+#  include <unistd.h>		/* read */
 #  ifdef HAVE_NETINET_IN_H
 #    include <netinet/in.h>
 #  endif
diff --git a/sns/cm/ut/net.c b/sns/cm/ut/net.c
index 843a7fc..21405c5 100644
--- a/sns/cm/ut/net.c
+++ b/sns/cm/ut/net.c
@@ -18,6 +18,8 @@
  * Original creation date: 03/26/2013
  */
 
+#include <unistd.h>			/* usleep */
+
 #include "lib/misc.h"
 #include "net/lnet/lnet.h"
 #include "reqh/reqh.h"
diff --git a/yaml2db/st/main.c b/yaml2db/st/main.c
index 42b6b88..be99846 100644
--- a/yaml2db/st/main.c
+++ b/yaml2db/st/main.c
@@ -22,6 +22,7 @@
 #include "lib/errno.h"
 #include "lib/getopts.h"
 #include "lib/misc.h"
+#include "lib/thread.h"		/* LAMBDA */
 #include "yaml2db/yaml2db.h"
 #include "cfg/cfg.h"
 
-- 
1.8.3.2

