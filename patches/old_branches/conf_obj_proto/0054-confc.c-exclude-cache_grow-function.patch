From 87ce143640a08321cac39278687de845270f87a1 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Tue, 13 Mar 2012 15:31:57 +0200
Subject: [PATCH 054/370] confc.c: exclude cache_grow() function

This function simplifies grow_cache_st_in() and can be used for
configuration cache pre-loading.
---
 conf/confc.c | 65 ++++++++++++++++++++++++++++++++++++++++--------------------
 conf/confc.h |  2 --
 2 files changed, 44 insertions(+), 23 deletions(-)

diff --git a/conf/confc.c b/conf/confc.c
index 4137657..838faf1 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -466,6 +466,44 @@ end:
 	return ret;
 }
 
+/**
+ * Adds new objects contained in confd's response to the configuration cache.
+ *
+ * @pre  resp->fr_rc == 0
+ */
+static int cache_grow(const struct c2_conf_fetch_resp *resp)
+{
+	/*
+	 * struct confx_object *fetched;
+	 * struct c2_conf_obj  *cached;
+	 * int                  rc;
+	 *
+	 * C2_PRE(resp->fr_rc == 0);
+	 *
+	 * for (fetched in resp->fr_data) {
+	 *     if (fetched->o_key.cb_size == 0 ||
+	 *         fetched->o_key.cb_data == NULL) {
+	 *         c2_addb(report bogus data);
+	 *         return -Exxx;
+	 *     }
+	 *
+	 *     cached = c2_conf_map_lookup(&g_confc.cache.cc_registry,
+	 *                                 &fetched->o_key,
+	 *                                 fetched->o_val.ov_type);
+	 *     if (cached == NULL)
+	 *         rc = cache_add(&g_confc.cache.cc_registry, fetched);
+	 *     else
+	 *         rc = object_enrich(cached, fetched);
+	 *
+	 *     if (rc != 0)
+	 *         break;
+	 * }
+	 *
+	 * return rc;
+	 */
+	XXX;
+}
+
 static bool confc_is_initiated(void)
 {
 	C2_PRE(equi(g_confc.root, g_confc.cache.cc_group));
@@ -707,32 +745,17 @@ static void wait_reply_st_in(struct c2_sm *mach)
 static void grow_cache_st_in(struct c2_sm *mach)
 {
 	/*
-	 * struct c2_confc_ctx       *ctx  = to_ctx(mach);
-	 * struct c2_rpc_item        *item = c2_fop_to_rpc_item(&ctx->fc_fop);
 	 * struct c2_conf_fetch_resp *resp;
-	 * struct c2_confx_object    *fetched;
-	 * struct c2_conf_obj        *cached;
-	 * int                        rc = 0;
+	 * int rc;
+	 * struct c2_rpc_item *item = c2_fop_to_rpc_item(&to_ctx(mach)->fc_fop);
 	 *
 	 * C2_PRE(item->ri_error == 0 && item->ri_reply != NULL);
 	 *
 	 * resp = c2_fop_data(c2_rpc_item_to_fop(item->ri_reply));
 	 * C2_ASSERT(`resp' bob_check()s);
 	 *
-	 * for (fetched in resp->ffr_data) {
-	 *     C2_ASSERT(fetched->fo_key is not empty &&
-	 *               fetched->fo_val.v_type < C2_CO_NR);
-	 *     cached = c2_conf_map_lookup(&g_confc.cache.cc_registry,
-	 *                                 &fetched->fo_key,
-	 *                                 fetched->fo_val.v_type);
-	 *     if (cached == NULL)
-	 *         rc = cache_add(fetched);
-	 *     else
-	 *         rc = object_enrich(cached, fetched);
-	 *
-	 *     if (rc != 0)
-	 *         break;
-	 * }
+	 * rc = resp->fr_rc;
+	 * rc = rc ?: cache_grow(resp);
 	 *
 	 * // Let rpc layer free the memory allocated for response.
 	 * c2_rpc_item_put(item->ri_reply);
@@ -863,7 +886,7 @@ static struct c2_sm_conf confc_states_conf = {
  * ------------------------------------------------------------------ */
 
 static int
-object_enrich(struct c2_conf_obj *dest, const struct c2_confx_object *src)
+object_enrich(struct c2_conf_obj *dest, const struct confx_object *src)
 {
 	/*
 	 * int ret = 0;
@@ -914,7 +937,7 @@ static bool ctx_invariant(struct c2_confc_ctx *ctx)
  * @param src       Configuration object as received from confd.
  */
 static int
-cache_add(struct c2_conf_map *registry, const struct c2_confx_object *src)
+cache_add(struct c2_conf_map *registry, const struct confx_object *src)
 {
 	/*
 	 * struct c2_conf_obj *obj;
diff --git a/conf/confc.h b/conf/confc.h
index 1e80032..50de48d 100644
--- a/conf/confc.h
+++ b/conf/confc.h
@@ -312,8 +312,6 @@ struct c2_confc_dir;
  * @pre  confc cache is not initiated
  * @pre  sm_group != NULL
  * @post confc cache is initiated
- *
- * @note Concurrent calls to c2_confc_init() may fail.
  */
 int c2_confc_init(const char *profile, const char *confd_addr,
 		  struct c2_sm_group *sm_group);
-- 
1.8.3.2

