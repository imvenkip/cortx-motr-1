From 1f952d63bec679de5e6b2e9a89e5cdea9a54f153 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Tue, 20 Mar 2012 12:15:45 +0200
Subject: [PATCH 081/370] conf/map.h: slightly better wording

+ mv {_,}confc_offline.h
  Leading underscore in source filename doesn't look good.
+ ut/README: correct the date
---
 conf/_confc_offline.h | 190 --------------------------------------------------
 conf/confc_offline.h  | 190 ++++++++++++++++++++++++++++++++++++++++++++++++++
 conf/map.h            |  10 +--
 conf/ut/README        |   2 +-
 4 files changed, 196 insertions(+), 196 deletions(-)
 delete mode 100644 conf/_confc_offline.h
 create mode 100644 conf/confc_offline.h

diff --git a/conf/_confc_offline.h b/conf/_confc_offline.h
deleted file mode 100644
index b0301c7..0000000
--- a/conf/_confc_offline.h
+++ /dev/null
@@ -1,190 +0,0 @@
-/* -*- c -*- */
-/*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
- *
- * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
- * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
- * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
- * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
- * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
- * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
- * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
- *
- * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
- * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
- * http://www.xyratex.com/contact
- *
- * Original author: Valery V. Vorotyntsev <valery_vorotyntsev@xyratex.com>
- * Original creation date: 16-Mar-2012
- */
-#ifndef __COLIBRI_CONF__CONFC_OFFLINE_H__
-#define __COLIBRI_CONF__CONFC_OFFLINE_H__
-
-/**
- * @page confc-offline  confc offline (workaround)
- *
- * Until confd is ready, confc cannot obtain configuration by sending
- * fops.  In order for confc to be operational, its cache needs to be
- * pre-loaded.
- *
- * Configuration data, represented as an ASCII string, is conveyed to
- * confc through `confd_addr' parameter of c2_confc_init() function
- * (`confd_addr' is not used anyway, because there is no confd to
- * communicate with).
- *
- * When confc API is used by a kernel module, the configuration string
- * is specified as a module parameter. User space application obtains
- * this string from command line.
- *
- * @section confc-offline-string  Configuration string
- *
- * Configuration string describes a sequence of configuration objects.
- * c2_conf__parse() translates this string into an array of
- * confx_objects.
- *
- * An object is represented by a sequence of attributes.  The first
- * attribute is object's identity.  Set of remaining attributes
- * depends on object's type.  Attributes are ordered similarly to the
- * fields of confx_* structure that corresponds to object's type.
- *
- * E.g., this configuration string
- *
-@verbatim
-(prof:"test","c2t1fs") (fs:"c2t1fs",[11,22][50,60,70],[])
-@endverbatim
- *
- * describes two confx_objects:
- *
- * @code
- * struct confx_object o1 = {
- *     .o_key = C2_CONF_BUF_INIT(4, "test"),
- *     .o_val = {
- *         .ov_type = C2_CO_PROFILE,
- *         .u.ov_profile = {
- *             .xp_filesystem = C2_CONF_BUF_INIT(6, "c2t1fs")
- *         }
- *     }
- * };
- * struct confx_object o2 = {
- *     .o_key = C2_CONF_BUF_INIT(6, "c2t1fs"),
- *     .o_val = {
- *         .ov_type = C2_CO_FILESYSTEM,
- *         .u.ov_filesystem = {
- *             .xp_rootfid = { .f_container = 11, .f_key = 22 },
- *             .xp_params = { .an_count = 3, .an_elems = { 50, 60, 70 } },
- *             .xp_services = { .ab_count = 0, .ab_elems = NULL }
- *         }
- *     }
- * };
- * @endcode
- *
- * @subsection confc-offline-string-grammar  Grammar
- *
-@verbatim
-object-sequence:
-        object
-        object-sequence object
-
-object:
-        '(' type ':' STR ',' field-sequence ')'
-
-type:
-        'prof'
-        'fs'
-        'svc'
-        'node'
-        'sdev'
-        'part'
-
-field-sequence:
-        field
-        field-sequence ',' field
-
-field:
-        STR
-        UINT
-        '[' string-sequence* ']'
-        '[' integer-sequence* ']'
-
-string-sequence:
-        STR
-        string-sequence ',' STR
-
-integer-sequence:
-        UINT
-        integer-sequence ',' UINT
-@endverbatim
- *
- * UINT is an unsigned decimal integer.
- *
- * STR resembles C string; escape characters are not supported.
- *
- * @code
- * "Hello, world!"     -- valid STR
- * "one\ttwo\03\0\xf"  -- not a STR
- * @endcode
- *
- * Tokens can be separated by white space; this consists of comments
- * and white-space characters.  Comments are surrounded by curly
- * brackets.
- *
- * @subsection confc-offline-string-examples  Examples
- *
-@verbatim
-                {filesystem}
-(prof:"test-2", "c2t1fs")
-
-              {rootfid} {params}    {services}
-(fs:"c2t1fs", [11, 22]  [50,60,70], ["mds", "io"])
-
-              {filesystem} {type} {end points} {node}
-(svc:"mds", "c2t1fs",      1,     ["addr0"],   "N")
-
-(svc:"io","c2t1fs",2,{inline comment}["addr1","addr2","addr3"],"N")
-
-           {services}     {RAM} {#CPU} {state} {flags} {pool} {nics}
-(node:"N", ["mds", "io"], 8000, 2,     3,      2,      0,     ["nic0"],
-           {sdevs}
-           ["sdev0"])
-
-             {node} {type} {MTU} {speed} {filename} {state}
-(nic:"nic0", "N",   5,     8192, 10000,  "ib0",     3)
-
-               {node} {iface} {media} {size}        {state} {flags} {parts}
-(sdev:"sdev0", "N",   4,      1,      596000000000, 3,      4,      ["part0"])
-
-               {sdev}   {start} {size}        {idx} {type} {filename}
-(part:"part0", "sdev0", 0,      596000000000, 0,    7,     "sda1")
-@endverbatim
- *
- * @see @ref confc_offline
- */
-
-/**
- * @defgroup confc_offline  confc offline: logical specification
- *
- * @see @ref confc-dld, @ref confc-offline
- *
- * @{
- */
-
-struct confx_object;
-
-/**
- * Fills the array of confx_objects with configuration data, obtained
- * from string.
- *
- * @param[in]  src   Configuration string (see @ref confc-offline-string).
- * @param[out] dest  Receiver of configuration.
- * @param      n     Number of elements in `dest'.
- *
- * @returns >= 0  The number of confx_objects found.
- * @returns  < 0  Error code.
- *
- * @post  retval <= n
- */
-static int c2_conf__parse(const char *src, struct confx_object dest[],
-			  size_t n);
-
-/** @} confc_offline */
-#endif /* __COLIBRI_CONF__CONFC_OFFLINE_H__ */
diff --git a/conf/confc_offline.h b/conf/confc_offline.h
new file mode 100644
index 0000000..b0301c7
--- /dev/null
+++ b/conf/confc_offline.h
@@ -0,0 +1,190 @@
+/* -*- c -*- */
+/*
+ * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ *
+ * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
+ * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
+ * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
+ * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
+ * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
+ * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
+ * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
+ *
+ * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
+ * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
+ * http://www.xyratex.com/contact
+ *
+ * Original author: Valery V. Vorotyntsev <valery_vorotyntsev@xyratex.com>
+ * Original creation date: 16-Mar-2012
+ */
+#ifndef __COLIBRI_CONF__CONFC_OFFLINE_H__
+#define __COLIBRI_CONF__CONFC_OFFLINE_H__
+
+/**
+ * @page confc-offline  confc offline (workaround)
+ *
+ * Until confd is ready, confc cannot obtain configuration by sending
+ * fops.  In order for confc to be operational, its cache needs to be
+ * pre-loaded.
+ *
+ * Configuration data, represented as an ASCII string, is conveyed to
+ * confc through `confd_addr' parameter of c2_confc_init() function
+ * (`confd_addr' is not used anyway, because there is no confd to
+ * communicate with).
+ *
+ * When confc API is used by a kernel module, the configuration string
+ * is specified as a module parameter. User space application obtains
+ * this string from command line.
+ *
+ * @section confc-offline-string  Configuration string
+ *
+ * Configuration string describes a sequence of configuration objects.
+ * c2_conf__parse() translates this string into an array of
+ * confx_objects.
+ *
+ * An object is represented by a sequence of attributes.  The first
+ * attribute is object's identity.  Set of remaining attributes
+ * depends on object's type.  Attributes are ordered similarly to the
+ * fields of confx_* structure that corresponds to object's type.
+ *
+ * E.g., this configuration string
+ *
+@verbatim
+(prof:"test","c2t1fs") (fs:"c2t1fs",[11,22][50,60,70],[])
+@endverbatim
+ *
+ * describes two confx_objects:
+ *
+ * @code
+ * struct confx_object o1 = {
+ *     .o_key = C2_CONF_BUF_INIT(4, "test"),
+ *     .o_val = {
+ *         .ov_type = C2_CO_PROFILE,
+ *         .u.ov_profile = {
+ *             .xp_filesystem = C2_CONF_BUF_INIT(6, "c2t1fs")
+ *         }
+ *     }
+ * };
+ * struct confx_object o2 = {
+ *     .o_key = C2_CONF_BUF_INIT(6, "c2t1fs"),
+ *     .o_val = {
+ *         .ov_type = C2_CO_FILESYSTEM,
+ *         .u.ov_filesystem = {
+ *             .xp_rootfid = { .f_container = 11, .f_key = 22 },
+ *             .xp_params = { .an_count = 3, .an_elems = { 50, 60, 70 } },
+ *             .xp_services = { .ab_count = 0, .ab_elems = NULL }
+ *         }
+ *     }
+ * };
+ * @endcode
+ *
+ * @subsection confc-offline-string-grammar  Grammar
+ *
+@verbatim
+object-sequence:
+        object
+        object-sequence object
+
+object:
+        '(' type ':' STR ',' field-sequence ')'
+
+type:
+        'prof'
+        'fs'
+        'svc'
+        'node'
+        'sdev'
+        'part'
+
+field-sequence:
+        field
+        field-sequence ',' field
+
+field:
+        STR
+        UINT
+        '[' string-sequence* ']'
+        '[' integer-sequence* ']'
+
+string-sequence:
+        STR
+        string-sequence ',' STR
+
+integer-sequence:
+        UINT
+        integer-sequence ',' UINT
+@endverbatim
+ *
+ * UINT is an unsigned decimal integer.
+ *
+ * STR resembles C string; escape characters are not supported.
+ *
+ * @code
+ * "Hello, world!"     -- valid STR
+ * "one\ttwo\03\0\xf"  -- not a STR
+ * @endcode
+ *
+ * Tokens can be separated by white space; this consists of comments
+ * and white-space characters.  Comments are surrounded by curly
+ * brackets.
+ *
+ * @subsection confc-offline-string-examples  Examples
+ *
+@verbatim
+                {filesystem}
+(prof:"test-2", "c2t1fs")
+
+              {rootfid} {params}    {services}
+(fs:"c2t1fs", [11, 22]  [50,60,70], ["mds", "io"])
+
+              {filesystem} {type} {end points} {node}
+(svc:"mds", "c2t1fs",      1,     ["addr0"],   "N")
+
+(svc:"io","c2t1fs",2,{inline comment}["addr1","addr2","addr3"],"N")
+
+           {services}     {RAM} {#CPU} {state} {flags} {pool} {nics}
+(node:"N", ["mds", "io"], 8000, 2,     3,      2,      0,     ["nic0"],
+           {sdevs}
+           ["sdev0"])
+
+             {node} {type} {MTU} {speed} {filename} {state}
+(nic:"nic0", "N",   5,     8192, 10000,  "ib0",     3)
+
+               {node} {iface} {media} {size}        {state} {flags} {parts}
+(sdev:"sdev0", "N",   4,      1,      596000000000, 3,      4,      ["part0"])
+
+               {sdev}   {start} {size}        {idx} {type} {filename}
+(part:"part0", "sdev0", 0,      596000000000, 0,    7,     "sda1")
+@endverbatim
+ *
+ * @see @ref confc_offline
+ */
+
+/**
+ * @defgroup confc_offline  confc offline: logical specification
+ *
+ * @see @ref confc-dld, @ref confc-offline
+ *
+ * @{
+ */
+
+struct confx_object;
+
+/**
+ * Fills the array of confx_objects with configuration data, obtained
+ * from string.
+ *
+ * @param[in]  src   Configuration string (see @ref confc-offline-string).
+ * @param[out] dest  Receiver of configuration.
+ * @param      n     Number of elements in `dest'.
+ *
+ * @returns >= 0  The number of confx_objects found.
+ * @returns  < 0  Error code.
+ *
+ * @post  retval <= n
+ */
+static int c2_conf__parse(const char *src, struct confx_object dest[],
+			  size_t n);
+
+/** @} confc_offline */
+#endif /* __COLIBRI_CONF__CONFC_OFFLINE_H__ */
diff --git a/conf/map.h b/conf/map.h
index fbda21c..56059d5 100644
--- a/conf/map.h
+++ b/conf/map.h
@@ -28,10 +28,10 @@
  * The implementation of c2_conf_map is based on in-memory Berkeley DB.
  * Since it is not possible to create a "memory-only" Berkeley
  * database using current version of Colibri's database interfaces
- * ("db/db.h"), this implementation invokes Berkeley DB API directly
- * (<db.h>).
+ * ("db/db.h"), this implementation invokes Berkeley DB API (<db.h>)
+ * directly.
  *
- * DB environments (DB_ENV) are not used. Since only one thread can
+ * DB environments (DB_ENV *) are not used. Since only one thread can
  * work with a registry of cached objects, there is no use for
  * multi-threaded features provided by a DB environment.
  *
@@ -44,8 +44,8 @@
 /**
  * Objid-to-address mapping.
  *
- * Maps identity of configuration object to the address of this object
- * in memory.  (Recall that @e identity of a configuration object is a
+ * Associates identity of a configuration object with its address in
+ * memory.  (Recall that @e identity of a configuration object is a
  * {key, type} pair.)
  *
  * c2_conf_map is used as a registry of cached configuration objects.
diff --git a/conf/ut/README b/conf/ut/README
index 3bcdca3..d3f4eff 100644
--- a/conf/ut/README
+++ b/conf/ut/README
@@ -7,4 +7,4 @@ pointless in such circumstances.
 
 I will update conf/ut/* when conf/* are more stable.
 
- --vvv, 2012-02-07
+ --vvv, 2012-03-07
-- 
1.8.3.2

