From 28ce6122f09c4aed79553698f8022c62cf34c371 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Fri, 20 Apr 2012 19:40:55 +0300
Subject: [PATCH 144/370] confc.c: don't overflow kernel stack

- cache_preload(): make the allocated array static, since it is
  too large for the kernel stack.
- Use -EPROTO for "protocol" errors (e.g., when remote data is
  inconsistent).

LogD: #1090
RB:   r/714
---
 conf/confc.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/conf/confc.c b/conf/confc.c
index 560a027..8a0f12a 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -597,7 +597,7 @@ int c2_confc_init(struct c2_confc *client, const char *confd_addr,
 	 * c2_conf_map_add(&client->cc_registry, root);
 	 * client->cc_root = root;
 	 *
-	 * cache__preload(&client->cc_registry, confd_addr);
+	 * cache_preload(client, confd_addr);
 	 *
 	 * C2_POST(equi(rc == 0, confc_is_initialized(client)));
 	 * c2_mutex_unlock(&client->cc_lock);
@@ -1016,7 +1016,7 @@ static int object_enrich(struct c2_conf_obj *dest,
 	 *
 	 * if (c2_conf_obj_mismatch(dest, src)) {
 	 *     C2_ADDB_ADD(report inconsistency);
-	 *     ret = -EMISMATCH; // XXX Can we use non-standard errno?
+	 *     ret = -EPROTO;
 	 * } else if (dest->co_status == C2_CS_READY) {
 	 *     return 0; // neither change the status nor broadcast
 	 * } else {
@@ -1075,17 +1075,19 @@ cache_grow(struct c2_conf_map *cache, const struct c2_conf_fetch_resp *resp)
 	XXX;
 }
 
-static int cache__preload(struct c2_conf_map *cache, const char *conf_str)
+static int cache_preload(struct c2_confc *client, const char *conf_str)
 {
 	/*
 	 * // 4096 bytes (kernel module option) / 64 = 64 bytes (per object)
-	 * struct confx_object objs[64];
+	 * static struct confx_object objs[64];
 	 * int rc;
 	 * int i;
 	 *
+	 * C2_PRE(c2_mutex_is_locked(&client->cc_lock));
+	 *
 	 * rc = c2_conf_parse(conf_str, objs, ARRAY_SIZE(objs));
 	 * for (i = rc - 1; i >= 0; --i) {
-	 *     rc = cache_add(cache, objs + i);
+	 *     rc = cache_add(&client->cc_registry, objs + i);
 	 *     if (rc != 0)
 	 *         break;
 	 * }
-- 
1.8.3.2

