From 2a6863e586d3e3bacae579c292473850a1c00818 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 9 Aug 2012 19:24:39 +0300
Subject: [PATCH 285/370] conf/reg.h: [minor edit] more concise wording

---
 conf/reg.h | 17 +++++++----------
 1 file changed, 7 insertions(+), 10 deletions(-)

diff --git a/conf/reg.h b/conf/reg.h
index 496ee74..cc3c978 100644
--- a/conf/reg.h
+++ b/conf/reg.h
@@ -29,15 +29,13 @@
  * A registry of cached configuration objects, represented by
  * c2_conf_reg structure, serves two goals:
  *
- * 1) it ensures uniqueness of configuration objects in the cache:
- *    after an object is added to the registry, an attempt to add
- *    another object with the same identity will fail;
+ * 1) It ensures uniqueness of configuration objects in the cache.
+ *    After an object is added to the registry, any attempt to add
+ *    another one with similar identity will fail.
  *
- * 2) it simplifies erasing of configuration cache: configuration
- *    objects that have been added to the registry are freed by its
- *    destructor, so that a configuration module (confc or confd) does
- *    not need to perform traversal of DAG of configuration objects,
- *    the implementation of which can be rather complicated.
+ * 2) It simplifies erasing of configuration cache.  Register's
+ *    destructor frees all the registered configuration objects
+ *    without any sophisticated DAG traversal.
  *
  * @section conf-fspec-reg-data Data structures
  *
@@ -90,8 +88,7 @@ void c2_conf_reg_fini(struct c2_conf_reg *reg);
 int c2_conf_reg_add(struct c2_conf_reg *reg, struct c2_conf_obj *obj);
 
 /**
- * Searches for a configuration object given its identity (type and
- * identifier).
+ * Searches for a configuration object given its identity (type & id).
  *
  * Returns NULL if there is no such object in the registry.
  */
-- 
1.8.3.2

