From 9c84a39ef76736c0ae8892dafbed5fb215afdab8 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Mon, 12 Mar 2012 19:51:18 +0200
Subject: [PATCH 052/370] fill Overview and Conformance sections

---
 conf/confc.c | 34 +++++++++++++++++++++++++++++++++-
 1 file changed, 33 insertions(+), 1 deletion(-)

diff --git a/conf/confc.c b/conf/confc.c
index 150ded1..db4c952 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -43,12 +43,23 @@
  *   - @ref confc-dld-lspec-thread
  *   - @ref confc-dld-lspec-numa
  * - @ref confc-dld-conformance
+ * - @ref confc-dld-ut
  * - XXX
  *
  * <hr> <!------------------------------------------------------------->
  * @section confc-dld-ovw Overview
  *
- * XXX {This section is a kind of README...}
+ * Configuration is part of Colibri cluster meta-data. Configuration
+ * client library (confc) provides API for accessing configuration
+ * data.  Confcs obtain configuration from the configuration server
+ * (confd) and cache this data in local memory.
+ *
+ * Confc library is implemented in user space and in the kernel.
+ * Applications access configuration data by linking with confc
+ * library and using its API.
+ *
+ * This DLD covers confc library and also data structures and
+ * functions that are common to confc and confd.
  *
  * <hr> <!------------------------------------------------------------->
  * @section confc-dld-def Definitions
@@ -234,6 +245,27 @@
  * <hr> <!------------------------------------------------------------->
  * @section confc-dld-conformance Conformance
  *
+ * - @b i.conf.confc.kernel
+ *   The implementation of confc library uses "portable subset" of C2
+ *   API, for which the differences between the kernel and user space
+ *   are abstracted away.
+ * - @b i.conf.confc.user
+ *   Confc library is implemented for user space.
+ * - @b i.conf.cache.data-model
+ *   Configuration information is organized as outlined in section 4.1
+ *   of the HLD. The same data structures are used for confc and
+ *   confd.  Configuration structures are kept in memory.
+ * - @b i.conf.cache.pinning
+ *   Confc "pins" configuration object by incrementing its reference
+ *   counter.  c2_confc_fini() asserts (with C2_PRE()) that no objects
+ *   are pinned when the cache is being destroyed.
+ * - @b i.conf.cache.unique-objects
+ *   A registry of cached objects (c2_conf_cache::cc_registry) is used
+ *   to achieve uniqueness of configuration object identities.
+ *
+ * <hr> <!------------------------------------------------------------->
+ * @section confc-dld-ut Unit Tests
+ *
  * XXX
  *
  * @see confc_dlspec
-- 
1.8.3.2

