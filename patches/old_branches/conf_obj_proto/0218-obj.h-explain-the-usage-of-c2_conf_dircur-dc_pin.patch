From 61cce7c8c82a69f0bdbf9438f138dd879f27b2c3 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Wed, 4 Jul 2012 18:29:00 +0300
Subject: [PATCH 218/370] obj.h: explain the usage of c2_conf_dircur::dc_pin

---
 conf/obj.c |  2 +-
 conf/obj.h | 15 +++++++++++++--
 2 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/conf/obj.c b/conf/obj.c
index 1a4952a..5e7d81a 100644
--- a/conf/obj.c
+++ b/conf/obj.c
@@ -265,7 +265,7 @@
  *
  *     @test Cache operations will be tested. This includes
  *           cache_add(), object_enrich(), cache_grow(), and
- *           cache__preload().
+ *           cache_preload().
  *
  * @subsection confd-ut confd Test Suite
  *
diff --git a/conf/obj.h b/conf/obj.h
index f7fb3f6..61a06f0 100644
--- a/conf/obj.h
+++ b/conf/obj.h
@@ -403,13 +403,24 @@ struct c2_conf_obj_ops {
  *
  * c2_conf_dircur is used to track position within a directory
  * (c2_conf_dir).
+ *
+ * c2_conf_obj_ops::coo_readdir() unpins ->dc_pin, pins the "next"
+ * configuration object of the directory (pointed to by ->dc_dir), and
+ * sets ->dc_pin to the address of this object.
+ *
+ * If there are no more objects in the directory, the function sets
+ * ->dc_pin to NULL, and returns 0 (end-of-directory).
+ *
+ * The application can opt not to keep calling ->coo_readdir() until 0
+ * is returned. In this case non-NULL ->dc_pin will be unpinned by
+ * c2_conf_dircur_fini().
  */
 struct c2_conf_dircur {
-	/** Directory this cursor works upon. */
+	/** The directory this cursor works upon. */
 	struct c2_conf_dir *dc_dir;
 	/**
 	 * Configuration object that has been returned (and pinned)
-	 * by previous "readdir" call.
+	 * by previous ->coo_readdir() call.
 	 */
 	struct c2_conf_obj *dc_pin;
 };
-- 
1.8.3.2

