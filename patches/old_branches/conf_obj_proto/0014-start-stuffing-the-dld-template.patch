From 6a9725fb4ed74dbb659a4032a99d3c5983768420 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 23 Feb 2012 14:13:56 +0200
Subject: [PATCH 014/370] start stuffing the dld-template

---
 conf/obj.c      | 73 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 doc/dld-index.c |  2 ++
 2 files changed, 75 insertions(+)

diff --git a/conf/obj.c b/conf/obj.c
index a72d7bf..69b1151 100644
--- a/conf/obj.c
+++ b/conf/obj.c
@@ -18,6 +18,79 @@
  * Original creation date: 03-Feb-2012
  */
 
+/**
+ * @page conf-dld Configuration DLD
+ *
+ * - @ref conf-dld-ovw
+ * - @ref conf-dld-def
+ * - @ref conf-dld-req
+ * - XXX
+ *
+ * <hr>
+ * @section conf-dld-ovw Overview
+ *
+ * XXX
+ *
+ * <hr>
+ * @section conf-dld-def Definitions
+ *
+ * Previously defined terms:
+ *
+ * - @b Confc (configuration client library, configuration client):
+ *   a library that provides configuration consumers with interfaces
+ *   to query C2 configuration.
+ *
+ * - @b Confd (configuration server): a management service that
+ *   provides configuration clients with information obtained from
+ *   configuration database.
+ *
+ * - Configuration @b consumer: any software that uses confc API to
+ *   access C2 configuration.
+ *
+ * - Configuration @b cache: configuration data stored in nodeâ€™s
+ *   memory. Confc library maintains such a cache and provides
+ *   configuration consumers with access to its data. Confd also uses
+ *   configuration cache for faster retrieval of information requested
+ *   by configuration clients.
+ *
+ * - Configuration @b object: a data structure that contains
+ *   configuration information. There are several types of
+ *   configuration objects: profile, service, node, etc.
+ *
+ * New terms:
+ *
+ * - <b>Directory</b>: a list of configuration objects. This term is
+ *   usually used in context of path.  Alternative name --- collection
+ *   of configuration objects.
+ *
+ * - <b>Path target</b>: the object or directory that a path leads to.
+ *   Path target is @b reachable if all of the @b intermediate objects
+ *   of the path (if any) are ready (C2_CS_READY) and target is either
+ *   an object that is ready or a directory of ready objects.
+ *
+ * <hr>
+ * @section conf-dld-req Requirements
+ *
+ * - @b r.conf.confc.kernel
+ *   Confc library must be implemented for the kernel.
+ * - @b r.conf.confc.user
+ *   Confc library must be implemented for user space.
+ * - @b r.conf.confd
+ *   Confd service must be implemented for user space.
+ * - @b r.conf.cache.data-model
+ *   The implementation should organize configuration information as
+ *   outlined in section 4.1 of the HLD. The same data structures
+ *   should be used for confc and confd caches, if possible.
+ *   Configuration structures must be kept in memory.
+ * - @b r.conf.cache.pinning
+ *   Pinning of an object protects existence of this object in the cache.
+ *   Pinned object can be moved from a stub condition to "ready".
+ * - @b r.conf.cache.unique-objects
+ *   Configuration cache must not contain multiple objects with the
+ *   same identity (identity of a configuration object is a tuple of
+ *   type and key).
+ */
+
 #ifdef HAVE_CONFIG_H
 #  include <config.h>
 #endif
diff --git a/doc/dld-index.c b/doc/dld-index.c
index b73a7ba..e9cf81d 100644
--- a/doc/dld-index.c
+++ b/doc/dld-index.c
@@ -6,6 +6,8 @@ Detailed designs, ordered alphabetically:
 
 - @subpage c2t1fs "C2T1FS detailed level design specification"
            <!-- c2t1fs/main.c -->
+- @subpage conf-dld
+           <!-- conf/obj.c -->
 - @subpage DLD_conf_schema "DLD for configuration schema"
            <!-- cfg/cfg.h -->
 - @subpage LNetDLD "LNet Transport DLD"
-- 
1.8.3.2

