From 48ae77735dc3762f0f25a11e5eab91693b09e7fe Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Wed, 4 Jul 2012 23:24:39 +0300
Subject: [PATCH 222/370] use `(n == 0) == p()' instead of `equi(n == 0, p())'

LogD #269
RB: r/865
---
 conf/confc.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/conf/confc.c b/conf/confc.c
index 12f5558..d70f889 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -23,7 +23,7 @@
 #endif
 #include "conf/confc.h"
 #include "conf/preload.h"  /* c2_conf_parse */
-#include "lib/cdefs.h"     /* C2_HAS_TYPE, equi */
+#include "lib/cdefs.h"     /* C2_HAS_TYPE */
 #include "lib/arith.h"     /* C2_CNT_INC, C2_CNT_DEC */
 #include "lib/misc.h"      /* C2_IN */
 
@@ -329,7 +329,7 @@ int c2_confc_init(struct c2_confc *confc, const char *conf_source,
 	 * c2_mutex_unlock(lock);
 	 * c2_mutex_unlock(&sm_group->s_lock);
 	 *
-	 * C2_POST(equi(rc == 0, confc_is_initialized(confc)));
+	 * C2_POST((rc == 0) == confc_is_initialized(confc));
 	 * return rc;
 	 */
 	XXX;
@@ -364,8 +364,8 @@ void c2_confc_fini(struct c2_confc *confc)
 static bool confc_invariant(const struct c2_confc *confc)
 {
 	/* XXX add more checks */
-	return equi(confc->cc_root == NULL, confc->cc_group == NULL) &&
-		equi(confc->cc_root == NULL, confc->cc_lock == NULL);
+	return (confc->cc_root == NULL) == (confc->cc_group == NULL) ==
+		(confc->cc_lock == NULL);
 }
 
 /* XXX TODO: .bt_check = confc_invariant */
-- 
1.8.3.2

