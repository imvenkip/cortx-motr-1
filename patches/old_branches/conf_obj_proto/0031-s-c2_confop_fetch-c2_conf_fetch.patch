From c87da47898b119924997fdd1708e192b7a93c200 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Fri, 2 Mar 2012 16:43:15 +0200
Subject: [PATCH 031/370] s/c2_confop_fetch/c2_conf_fetch/

Use shorter names as `c2_conf_fetch' and `c2_conf_fetch_resp' will be
mentioned often.
---
 conf/confc.c   | 36 ++++++++++++++++++------------------
 conf/confc.h   | 18 +++++++++---------
 conf/confop.ff |  6 +++---
 3 files changed, 30 insertions(+), 30 deletions(-)

diff --git a/conf/confc.c b/conf/confc.c
index 95590a0..3b86690 100644
--- a/conf/confc.c
+++ b/conf/confc.c
@@ -239,7 +239,7 @@ static inline struct c2_confc_ctx * to_ctx(struct c2_sm *mach)
 }
 
 static void
-request_fill(struct c2_confop_fetch *req, const struct c2_conf_obj *path_org,
+request_fill(struct c2_conf_fetch *req, const struct c2_conf_obj *path_org,
 	     struct c2_conf_pathcomp *path, size_t path_len);
 
 /**
@@ -489,7 +489,7 @@ struct c2_confc_dir {
  * Request-related functions.
  * ------------------------------------------------------------------ */
 
-static bool request_is_valid(const struct c2_confop_fetch *req)
+static bool request_is_valid(const struct c2_conf_fetch *req)
 {
 	return  req->ff_origin.o_objtype < C2_CO_NR &&
 		ret->ff_origin.o_objkey.cb_size > 0 &&
@@ -498,16 +498,16 @@ static bool request_is_valid(const struct c2_confop_fetch *req)
 }
 
 /** Asserts validity of the configuration request and returns its address. */
-static struct c2_confop_fetch * to_request(struct c2_rpc_item *item)
+static struct c2_conf_fetch * to_request(struct c2_rpc_item *item)
 {
-	struct c2_fop          *fop = c2_rpc_item_to_fop(item);
-	struct c2_confop_fetch *req = c2_fop_data(fop);
+	struct c2_fop        *fop = c2_rpc_item_to_fop(item);
+	struct c2_conf_fetch *req = c2_fop_data(fop);
 
 	C2_PRE(item->ri_type == &request_item_type);
 
-	/* XXX c2_confop_fetch_bob_check() needs C2_BOB_DEFINE() and
-	 * magic field in c2_confop_fetch, but it's worth it. */
-	C2_ASSERT(req != NULL && c2_confop_fetch_bob_check(req));
+	/* XXX c2_conf_fetch_bob_check() needs C2_BOB_DEFINE() and
+	 * magic field in c2_conf_fetch, but it's worth it. */
+	C2_ASSERT(req != NULL && c2_conf_fetch_bob_check(req));
 
 	C2_ASSERT(request_is_valid(req));
 	return req;
@@ -526,7 +526,7 @@ request_encode(struct c2_rpc_item_type *item_type __attribute__((unused)),
 {
 	struct c2_xcode_ctx       xtx;
 	const struct c2_xcode_obj xobj = {
-		.xo_type = c2_confop_fetch_xc,
+		.xo_type = c2_conf_fetch_xc,
 		.xo_ptr  = to_request(item) /* verifies request */
 	};
 
@@ -544,7 +544,7 @@ static const struct c2_rpc_item_type_ops request_item_type_ops = {
 			       * c2_fop_item_type_default_onwire_size()
 			       * or a function returning
 			       * c2_xcode_length() of
-			       * c2_confop_fetch? */
+			       * c2_conf_fetch? */
 };
 
 /** Used for configuration requests. */
@@ -555,9 +555,9 @@ static struct c2_rpc_item_type request_item_type = {
 	.rit_magic  = XXX
 };
 
-/** Fills c2_confop_fetch structure. */
+/** Fills c2_conf_fetch structure. */
 static void
-request_fill(struct c2_confop_fetch *req, const struct c2_conf_obj *path_org,
+request_fill(struct c2_conf_fetch *req, const struct c2_conf_obj *path_org,
 	     struct c2_conf_pathcomp *path, size_t path_len)
 {
 	C2_PRE(c2_mutex_is_locked(group_lock()));
@@ -649,12 +649,12 @@ static void wait_reply_st_in(struct c2_sm *mach)
 static void grow_cache_st_in(struct c2_sm *mach)
 {
 	/*
-	 * struct c2_confc_ctx         *ctx  = to_ctx(mach);
-	 * struct c2_rpc_item          *item = c2_fop_to_rpc_item(&ctx->fc_fop);
-	 * struct c2_confop_fetch_resp *resp;
-	 * struct c2_confop_obj        *fetched;
-	 * struct c2_conf_obj          *cached;
-	 * int                          rc = 0;
+	 * struct c2_confc_ctx       *ctx  = to_ctx(mach);
+	 * struct c2_rpc_item        *item = c2_fop_to_rpc_item(&ctx->fc_fop);
+	 * struct c2_conf_fetch_resp *resp;
+	 * struct c2_confop_obj      *fetched;
+	 * struct c2_conf_obj        *cached;
+	 * int                        rc = 0;
 	 *
 	 * C2_PRE(item->ri_error == 0 && item->ri_reply != NULL);
 	 *
diff --git a/conf/confc.h b/conf/confc.h
index 9f00609..4400c26 100644
--- a/conf/confc.h
+++ b/conf/confc.h
@@ -21,7 +21,7 @@
 #define __COLIBRI_CONF_CONFC_H__
 
 #include "conf/path.h"
-#include "conf/confop.h" /* c2_confop_fetch */
+#include "conf/confop.h" /* c2_conf_fetch */
 #include "sm/sm.h"       /* c2_sm, c2_sm_ast */
 #include "lib/chan.h"    /* c2_clink */
 
@@ -331,7 +331,7 @@ void c2_confc_fini(void);
 /** Configuration retrieval context. */
 struct c2_confc_ctx {
 	/** This channel is signaled when the retrieval operation completes. */
-	struct c2_chan         fc_complete;
+	struct c2_chan       fc_complete;
 
 	/**
 	 * Pointer to the requested configuration object or directory.
@@ -347,26 +347,26 @@ struct c2_confc_ctx {
 	 * It is also NULL if configuration retrieval failed (see
 	 * c2_confc_error()).
 	 */
-	void                  *fc_result;
+	void                *fc_result;
 
 /* private: internal use only */
 	/** A confc state machine. */
-	struct c2_sm           fc_mach;
-	struct c2_sm_ast       fc_ast;
+	struct c2_sm         fc_mach;
+	struct c2_sm_ast     fc_ast;
 
 	/** Path to the requested object/directory. */
-	struct c2_conf_path    fc_path;
+	struct c2_conf_path  fc_path;
 	/**
 	 * Record of interest in "object unpinned" events.
 	 *
 	 * This clink gets added to c2_conf_obj::co_chan channel.
 	 */
-	struct c2_clink        fc_clink;
+	struct c2_clink      fc_clink;
 
 	/** Configuration request. */
-	struct c2_confop_fetch fc_req;
+	struct c2_conf_fetch fc_req;
 	/** Request fop. */
-	struct c2_fop          fc_fop;
+	struct c2_fop        fc_fop;
 };
 
 void c2_confc_ctx_init(struct c2_confc_ctx *ctx);
diff --git a/conf/confop.ff b/conf/confop.ff
index f881127..066d5c9 100644
--- a/conf/confop.ff
+++ b/conf/confop.ff
@@ -47,7 +47,7 @@ record {
 		u32                c_nr;
 		c2_confop_pathcomp c_data
 	} ff_comps   /* Path components. */
-} c2_confop_fetch;
+} c2_conf_fetch;
 
 /* Configuration of a profile. */
 record {
@@ -151,7 +151,7 @@ record {
 	} fo_val
 } c2_confop_obj;
 
-/* Confd's reponse to c2_confop_fetch. */
+/* Confd's reponse to c2_conf_fetch. */
 record {
 	/* Result of configuration retrieval (-Exxx = failure, 0 = success). */
 	u32 ffr_rc;
@@ -161,4 +161,4 @@ record {
 		u32           d_nr;
 		c2_confop_obj d_objs
 	} ffr_data
-} c2_confop_fetch_resp
+} c2_conf_fetch_resp
-- 
1.8.3.2

