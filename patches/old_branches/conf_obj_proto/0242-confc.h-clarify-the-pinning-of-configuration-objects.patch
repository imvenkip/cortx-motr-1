From 2a3ba905d0124985b8518e39aec755d48073366a Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Fri, 13 Jul 2012 23:55:49 +0300
Subject: [PATCH 242/370] confc.h: clarify the pinning of configuration objects

Explain that c2_confc::cc_root is never pinned and that
c2_confc_ctx::fc_origin can be pinned by the application, not by confc.
---
 conf/confc.h | 25 +++++++++++++++++++++----
 1 file changed, 21 insertions(+), 4 deletions(-)

diff --git a/conf/confc.h b/conf/confc.h
index 563fbab..487b3fe 100644
--- a/conf/confc.h
+++ b/conf/confc.h
@@ -136,8 +136,8 @@ struct c2_mutex;
  * Prior to calling them, the application should initialize a context
  * object (c2_confc_ctx_init()) and register a clink with
  * c2_confc_ctx::fc_complete channel.  After the clink is signaled,
- * c2_confc_ctx_result() is be used to obtain the requested
- * configuration object.  c2_confc_ctx_error() returns the error code.
+ * c2_confc_ctx_result() can be used to obtain the requested
+ * configuration object; c2_confc_ctx_error() returns the error code.
  *
  * A caller of c2_confc_open_sync() or c2_confc_readdir_sync() will be
  * blocked while confc processes the request.
@@ -145,6 +145,10 @@ struct c2_mutex;
  * All c2_confc_open*()ed configuration objects must be
  * c2_confc_close()ed before c2_confc_fini() is called.
  *
+ * @note  Confc library pins (see @ref conf-fspec-obj-pinned) only
+ *        those configuration objects that are c2_confc_open*()ed or
+ *        c2_confc_readdir*()ed by the application.
+ *
  * <hr> <!------------------------------------------------------------>
  * @section confc-fspec-recipes Recipes
  *
@@ -359,7 +363,13 @@ struct c2_mutex;
 struct c2_confc {
 	/** Registry of cached configuration objects. */
 	struct c2_conf_map  cc_registry;
-	/** Root of the DAG of configuration objects. */
+	/**
+	 * Root of the DAG of configuration objects.
+	 *
+	 * ->cc_root is never pinned, because there is no way for the
+	 * application to open it.  See the note in @ref
+	 * confc-fspec-sub-use.
+	 */
 	struct c2_conf_obj *cc_root;
 	/**
 	 * Serializes configuration retrieval state machines
@@ -456,7 +466,14 @@ struct c2_confc_ctx {
 	 * schedule a transition of ->fc_mach state machine.
 	 */
 	struct c2_sm_ast         fc_ast;
-	/** Origin of the requested path. */
+	/**
+	 * Origin of the requested path.
+	 *
+	 * ->fc_origin is not pinned unless it is opened by the
+	 * application. Confc library does not take any special
+	 * measures to pin this object for the duration of path
+	 * traversal.  See the note in @ref confc-fspec-sub-use.
+	 */
 	struct c2_conf_obj      *fc_origin;
 	/**
 	 * Path to the object requested by the application.
-- 
1.8.3.2

