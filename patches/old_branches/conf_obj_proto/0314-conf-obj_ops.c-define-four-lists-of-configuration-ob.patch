From ea502f40a4d3d1e75c776f52e88dae7951468988 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Mon, 13 Aug 2012 22:59:37 +0300
Subject: [PATCH 314/370] conf/obj_ops.c: define four lists of configuration
 objects

---
 conf/obj_ops.c | 79 +++++++++++++++++++++++++++++++++++++++++++---------------
 1 file changed, 59 insertions(+), 20 deletions(-)

diff --git a/conf/obj_ops.c b/conf/obj_ops.c
index 699b2af..559c707 100644
--- a/conf/obj_ops.c
+++ b/conf/obj_ops.c
@@ -41,19 +41,24 @@
  * bobs and invariants
  * ------------------------------------------------------------------ */
 enum {
-	CONF_DIR_MAGIX        = 0x3301dca1ab005e77,
-	CONF_PROFILE_MAGIX    = 0x33c105ab1e5ea177,
-	CONF_FILESYSTEM_MAGIX = 0x33f00d0fc01aba77,
-	CONF_SERVICE_MAGIX    = 0x33b1a5ed10ca1e77,
-	CONF_NODE_MAGIX       = 0x33c01055a1d05a77,
-	CONF_NIC_MAGIX        = 0x33ba5eba11feed77,
-	CONF_SDEV_MAGIX       = 0x33a115eed5a1ad77,
-	CONF_PARTITION_MAGIX  = 0x33bacca15a100f77
+	CONF_DIR_MAGIC        = 0x3301dca1ab005e77,
+	CONF_PROFILE_MAGIC    = 0x33c105ab1e5ea177,
+	CONF_FILESYSTEM_MAGIC = 0x33f00d0fc01aba77,
+	CONF_SERVICE_MAGIC    = 0x33b1a5ed10ca1e77,
+	CONF_NODE_MAGIC       = 0x33c01055a1d05a77,
+	CONF_NIC_MAGIC        = 0x33ba5eba11feed77,
+	CONF_SDEV_MAGIC       = 0x33a115eed5a1ad77,
+	CONF_PARTITION_MAGIC  = 0x33bacca15a100f77
 };
 
 static bool dir_invariant(const void *ptr);
 static bool profile_invariant(const void *ptr);
-XXX;
+static bool filesystem_invariant(const void *ptr);
+static bool service_invariant(const void *ptr);
+static bool node_invariant(const void *ptr);
+static bool nic_invariant(const void *ptr);
+static bool sdev_invariant(const void *ptr);
+static bool partition_invariant(const void *ptr);
 
 #define _BOB_DEFINE(type, magix, invariant)                         \
 const struct c2_bob_type type ## _bob = {                           \
@@ -65,14 +70,14 @@ const struct c2_bob_type type ## _bob = {                           \
 	.bt_check = invariant                                       \
 }
 
-_BOB_DEFINE(c2_conf_dir,        CONF_DIR_MAGIX,        dir_invariant);
-_BOB_DEFINE(c2_conf_profile,    CONF_PROFILE_MAGIX,    profile_invariant);
-_BOB_DEFINE(c2_conf_filesystem, CONF_FILESYSTEM_MAGIX, filesystem_invariant);
-_BOB_DEFINE(c2_conf_service,    CONF_SERVICE_MAGIX,    service_invariant);
-_BOB_DEFINE(c2_conf_node,       CONF_NODE_MAGIX,       node_invariant);
-_BOB_DEFINE(c2_conf_nic,        CONF_NIC_MAGIX,        nic_invariant);
-_BOB_DEFINE(c2_conf_sdev,       CONF_SDEV_MAGIX,       sdev_invariant);
-_BOB_DEFINE(c2_conf_partition,  CONF_PARTITION_MAGIX,  partition_invariant);
+_BOB_DEFINE(c2_conf_dir,        CONF_DIR_MAGIC,        dir_invariant);
+_BOB_DEFINE(c2_conf_profile,    CONF_PROFILE_MAGIC,    profile_invariant);
+_BOB_DEFINE(c2_conf_filesystem, CONF_FILESYSTEM_MAGIC, filesystem_invariant);
+_BOB_DEFINE(c2_conf_service,    CONF_SERVICE_MAGIC,    service_invariant);
+_BOB_DEFINE(c2_conf_node,       CONF_NODE_MAGIC,       node_invariant);
+_BOB_DEFINE(c2_conf_nic,        CONF_NIC_MAGIC,        nic_invariant);
+_BOB_DEFINE(c2_conf_sdev,       CONF_SDEV_MAGIC,       sdev_invariant);
+_BOB_DEFINE(c2_conf_partition,  CONF_PARTITION_MAGIC,  partition_invariant);
 #unset _BOB_DEFINE
 
 static bool concrete_invariant(const struct c2_conf_obj *obj)
@@ -111,16 +116,17 @@ bool c2_conf_obj_invariant(const struct c2_conf_obj *obj)
 		concrete_invariant(obj);
 }
 
-C2_TL_DESCR_DEFINE(dir, "c2_conf_dir", static, struct XXX, XXX);
-C2_TL_DEFINE(dir, static, struct XXX);
+const struct c2_tl_descr *list_of(enum c2_conf_objtype *t);
 
 static bool dir_invariant(const void *ptr)
 {
 	struct c2_conf_obj       *child;
 	const struct c2_conf_dir *dir = ptr;
+	const struct c2_tl_descr *td  = list_of(dir->cd_item_type);
 
 	return dir->cd_obj.co_parent != NULL && dir->cd_item_type < C2_CO_NR &&
-		c2_tlist_forall(&dir_tl, child, &dir->cd_items,
+		td != NULL &&
+		c2_tlist_forall(td, child, &dir->cd_items,
 				child->co_type == dir->cd_item_type);
 }
 
@@ -353,6 +359,39 @@ static int dir_readdir(struct c2_conf_obj *dir, struct c2_conf_obj **pptr)
  */
 
 /* ------------------------------------------------------------------
+ * Lists of configuration objects
+ * ------------------------------------------------------------------ */
+
+C2_TL_DESCR_DEFINE(services_tl, "service objs", static, struct c2_conf_obj,
+		   co_linkage, co_magix, CONF_SERVICE_MAGIC, CONF_DIR_MAGIC);
+C2_TL_DEFINE(services_tl, static, struct c2_conf_obj);
+
+C2_TL_DESCR_DEFINE(nics_tl, "nic objs", static, struct c2_conf_obj, co_linkage,
+		   co_magix, CONF_NIC_MAGIC, CONF_DIR_MAGIC);
+C2_TL_DEFINE(nics_tl, static, struct c2_conf_obj);
+
+C2_TL_DESCR_DEFINE(sdevs_tl, "sdev objs", static, struct c2_conf_obj,
+		   co_linkage, co_magix, CONF_SDEV_MAGIC, CONF_DIR_MAGIC);
+C2_TL_DEFINE(sdevs_tl, static, struct c2_conf_obj);
+
+C2_TL_DESCR_DEFINE(partitions_tl, "partition objs", static, struct c2_conf_obj,
+		   co_linkage, co_magix, CONF_PARTITION_MAGIC, CONF_DIR_MAGIC);
+C2_TL_DEFINE(partitions_tl, static, struct c2_conf_obj);
+
+/** Returns descriptor of a list given type of its items. */
+const struct c2_tl_descr *list_of(enum c2_conf_objtype *t)
+{
+	switch (t) {
+	case C2_CO_SERVICE:   return &services_tl;
+	case C2_CO_NIC:       return &nics_tl;
+	case C2_CO_SDEV:      return &sdevs_tl;
+	case C2_CO_PARTITION: return &partitions_tl;
+	default:;
+	}
+	return NULL;
+}
+
+/* ------------------------------------------------------------------
  * misc.
  * ------------------------------------------------------------------ */
 
-- 
1.8.3.2

