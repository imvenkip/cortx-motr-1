From a4c009c60aac1b6c67dcad056bb46e0cb4a07ab7 Mon Sep 17 00:00:00 2001
From: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
Date: Fri, 1 Nov 2013 18:28:19 +0530
Subject: [PATCH 153/159] - Defined fop_rate monitor - Fix for m0stats -l - Fix
 issue in m0_addb_monitor_del(). Skipped re-setting last scanned monitor   if
 addb service already finished. - Moved m0_addb_monitors_fini() at the end of
 m0t1fs_rpc_fini().

---
 addb/addb_monitor.h | 7 -------
 addb/addb_rec.c     | 1 +
 fop/fom.c           | 3 ++-
 reqh/reqh.c         | 7 +++++++
 4 files changed, 10 insertions(+), 8 deletions(-)

diff --git a/addb/addb_monitor.h b/addb/addb_monitor.h
index 073b01c..be699d9 100644
--- a/addb/addb_monitor.h
+++ b/addb/addb_monitor.h
@@ -317,17 +317,10 @@ M0_INTERNAL void m0_addb_monitor_init(struct m0_addb_monitor           *monitor,
  * @param md  uint64_t array of monitor specific data
  * @param nr  No of uint64_t words.
  */
-<<<<<<< HEAD
 M0_INTERNAL void m0_addb_monitor_sum_rec_init(struct m0_addb_sum_rec        *rec,
 					      const struct m0_addb_rec_type *rt,
 					      uint64_t                      *md,
 					      size_t                         nr);
-=======
-M0_INTERNAL void m0_addb_monitor_sum_rec_init(struct m0_addb_sum_rec        *sum_rec,
-				      const struct m0_addb_rec_type *rtype,
-				      uint64_t                      *mon_data,
-				      size_t                         nr);
->>>>>>> - Defined fop_rate monitor
 
 /**
  * Fini m0_addb_sum_rec (Generic summary record structure)
diff --git a/addb/addb_rec.c b/addb/addb_rec.c
index 10fdbea..d70653d 100644
--- a/addb/addb_rec.c
+++ b/addb/addb_rec.c
@@ -169,6 +169,7 @@ static void addb_rec_post(struct m0_addb_mc *mc,
 		} m0_tl_endfor;
 		m0_mutex_unlock(&mc->am_reqh->rh_addb_monitoring_ctx.amc_mutex);
 	}
+#undef MON_CTX_CONFIGURED
 }
 
 #ifndef __KERNEL__
diff --git a/fop/fom.c b/fop/fom.c
index 768ea2e..7025111 100644
--- a/fop/fom.c
+++ b/fop/fom.c
@@ -943,7 +943,7 @@ static int loc_init(struct m0_fom_locality *loc, size_t cpu, size_t cpu_max)
 		goto err1;
 
 	result = m0_addb_counter_init(&loc->fl_stat_fop_rate,
-				      &m0_addb_rt_fop_rate);
+				      &m0_addb_rt_fop_rate_cntr);
 	if (result != 0) {
 		m0_addb_counter_fini(&loc->fl_stat_sched_wait_times);
 		m0_addb_counter_fini(&loc->fl_stat_run_times);
@@ -1081,6 +1081,7 @@ static void __fom_domain_fini(struct m0_fom_domain *dom)
 
 	M0_ASSERT(m0_fom_domain_invariant(dom));
 
+	fop_rate_monitor_fini(dom->fd_reqh, &fop_rate_monitor);
 	fd_loc_nr = dom->fd_localities_nr;
 	while (fd_loc_nr > 0) {
 		loc_fini(&dom->fd_localities[fd_loc_nr - 1]);
diff --git a/reqh/reqh.c b/reqh/reqh.c
index 52a6217..072de85 100644
--- a/reqh/reqh.c
+++ b/reqh/reqh.c
@@ -198,6 +198,13 @@ monitors_init_failed:
 	m0_addb_mc_fini(&reqh->rh_addb_mc);
 	m0_ha_domain_fini(&reqh->rh_hadom);
 	return rc;
+
+fom_domain_init_failed:
+	m0_addb_monitors_fini(reqh);
+monitors_init_failed:
+	m0_rwlock_fini(&reqh->rh_rwlock);
+	m0_reqh_lockers_fini(reqh);
+	return rc;
 }
 
 #ifndef __KERNEL__
-- 
1.8.3.2

