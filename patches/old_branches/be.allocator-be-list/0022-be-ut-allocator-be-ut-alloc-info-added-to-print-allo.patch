From cebddf7de51013b71bb7ab165b975929165857f7 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Wed, 20 Nov 2013 02:11:10 +0200
Subject: [PATCH 22/26] be/ut/allocator: be-ut:alloc-info added to print
 allocator credits size

---
 be/ut/alloc.c | 47 +++++++++++++++++++++++++++++++++++++++++++++++
 be/ut/main.c  |  2 ++
 2 files changed, 49 insertions(+)

diff --git a/be/ut/alloc.c b/be/ut/alloc.c
index f62d68b..3588947 100644
--- a/be/ut/alloc.c
+++ b/be/ut/alloc.c
@@ -18,6 +18,9 @@
  * Original creation date: 3-Jun-2013
  */
 
+#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_UT
+#include "lib/trace.h"
+
 #include "be/alloc.h"
 
 #include "lib/memory.h"		/* m0_addr_is_aligned */
@@ -182,6 +185,50 @@ M0_INTERNAL void m0_be_ut_alloc_concurrent(void)
 	be_ut_alloc_mt(BE_UT_ALLOC_THR_NR);
 }
 
+M0_INTERNAL void m0_be_ut_alloc_info(void)
+{
+	struct m0_be_allocator *a;
+	struct m0_be_ut_seg	ut_seg;
+	m0_bcount_t		size;
+	unsigned		shift;
+
+	m0_be_ut_backend_init(&be_ut_alloc_backend);
+	m0_be_ut_seg_init(&ut_seg, &be_ut_alloc_backend, BE_UT_ALLOC_SEG_SIZE);
+	m0_be_ut_seg_allocator_init(&ut_seg, &be_ut_alloc_backend);
+	a = ut_seg.bus_allocator;
+
+#define ALLOCATOR_CREDIT_LOG(__a, __optype, __size, __shift)		       \
+	do {								       \
+		struct m0_be_tx_credit cred = {};			       \
+									       \
+		m0_be_allocator_credit(__a, __optype, __size, __shift, &cred); \
+		M0_LOG(M0_INFO,						       \
+		       "m0_be_allocator_credit(): "			       \
+		       "optype = %d (%s), size = %lu, shift = %d, "	       \
+		       "credit = " BETXCR_F,				       \
+		       __optype, (char *) #__optype, (unsigned long) __size,   \
+		       __shift,	BETXCR_P(&cred));			       \
+	} while (0)
+
+	ALLOCATOR_CREDIT_LOG(a, M0_BAO_CREATE, 0, 0);
+	ALLOCATOR_CREDIT_LOG(a, M0_BAO_DESTROY, 0, 0);
+	ALLOCATOR_CREDIT_LOG(a, M0_BAO_FREE, 0, 0);
+	ALLOCATOR_CREDIT_LOG(a, M0_BAO_FREE_ALIGNED, 0, 0);
+
+	for (size = 1; size <= 0x1000; size *= 4)
+		ALLOCATOR_CREDIT_LOG(a, M0_BAO_ALLOC, size, 0);
+	for (shift = 0; shift <= 12; shift += 1)
+		ALLOCATOR_CREDIT_LOG(a, M0_BAO_ALLOC_ALIGNED, 0x100, shift);
+
+#undef ALLOCATOR_CREDIT_LOG
+
+	m0_be_ut_seg_allocator_fini(&ut_seg, &be_ut_alloc_backend);
+	m0_be_ut_seg_fini(&ut_seg);
+	m0_be_ut_backend_fini(&be_ut_alloc_backend);
+}
+
+#undef M0_TRACE_SUBSYSTEM
+
 /*
  *  Local variables:
  *  c-indentation-style: "K&R"
diff --git a/be/ut/main.c b/be/ut/main.c
index 23618a4..2d68e68 100644
--- a/be/ut/main.c
+++ b/be/ut/main.c
@@ -62,6 +62,7 @@ extern void m0_be_ut_alloc_init_fini(void);
 extern void m0_be_ut_alloc_create_destroy(void);
 extern void m0_be_ut_alloc_multiple(void);
 extern void m0_be_ut_alloc_concurrent(void);
+extern void m0_be_ut_alloc_info(void);
 
 extern void m0_be_ut_list(void);
 extern void m0_be_ut_btree_simple(void);
@@ -103,6 +104,7 @@ const struct m0_test_suite be_ut = {
 		{ "alloc-create",        m0_be_ut_alloc_create_destroy },
 		{ "alloc-multiple",      m0_be_ut_alloc_multiple       },
 		{ "alloc-concurrent",    m0_be_ut_alloc_concurrent     },
+		{ "alloc-info",		 m0_be_ut_alloc_info	       },
 		{ "list",                m0_be_ut_list		       },
 		{ "btree",               m0_be_ut_btree_simple         },
 		{ "seg_dict",            m0_be_ut_seg_dict             },
-- 
1.8.3.2

