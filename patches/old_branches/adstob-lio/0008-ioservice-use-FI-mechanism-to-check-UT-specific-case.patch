From 9ec76e360593fcc3540cbc36bcd6db3e8e3da87c Mon Sep 17 00:00:00 2001
From: Andriy Tkachuk <andriy_tkachuk@xyratex.com>
Date: Fri, 25 Oct 2013 13:11:27 +0300
Subject: [PATCH 08/17] ioservice: use FI mechanism to check UT-specific case

Use fault injection mechanism to check UT-specific
case at stob_write_credit() when there is zero number
of buffers. This allows to distinct normal data-path
cases from UT-specific ones.

Suggested-by: Madhavrao Vemuri <madhav_vemuri@xyratex.com>
References: http://reviewboard.clusterstor.com/r/1552
---
 ioservice/io_foms.c      | 2 +-
 ioservice/ut/bulkio_ut.c | 2 ++
 2 files changed, 3 insertions(+), 1 deletion(-)

diff --git a/ioservice/io_foms.c b/ioservice/io_foms.c
index 1277922..d56788b 100644
--- a/ioservice/io_foms.c
+++ b/ioservice/io_foms.c
@@ -1753,7 +1753,7 @@ static void stob_write_credit(struct m0_fom *fom)
 	fom_obj = container_of(fom, struct m0_io_fom_cob_rw, fcrw_gen);
 	M0_ASSERT(m0_io_fom_cob_rw_invariant(fom_obj));
 
-	if (fom_obj->fcrw_ivec.iv_vec.v_nr == 0)
+	if (M0_FI_ENABLED("no_write_credit"))
 		return;
 
 	rwfop = io_rw_get(fom->fo_fop);
diff --git a/ioservice/ut/bulkio_ut.c b/ioservice/ut/bulkio_ut.c
index e729e2a..0930fb6 100644
--- a/ioservice/ut/bulkio_ut.c
+++ b/ioservice/ut/bulkio_ut.c
@@ -1666,6 +1666,7 @@ static void bulkio_server_read_write_fv_mismatch(void)
 	wfop->f_type->ft_ops = &io_fop_rwv_ops;
         wfop->f_type->ft_fom_type.ft_ops = &io_fom_type_ops;
 
+	m0_fi_enable_once("stob_write_credit", "no_write_credit");
 	rc = m0_rpc_client_call(wfop, &bp->bp_cctx->rcx_session,
 				NULL, 0 /* deadline */);
 	M0_ASSERT(rc == 0);
@@ -1680,6 +1681,7 @@ static void bulkio_server_read_write_fv_mismatch(void)
 	rfop->f_type->ft_ops = &io_fop_rwv_ops;
         rfop->f_type->ft_fom_type.ft_ops = &io_fom_type_ops;
 
+	m0_fi_enable_once("stob_write_credit", "no_write_credit");
 	rc = m0_rpc_client_call(rfop, &bp->bp_cctx->rcx_session,
 				NULL, 0 /* deadline */);
 	M0_ASSERT(rc == 0);
-- 
1.8.3.2

