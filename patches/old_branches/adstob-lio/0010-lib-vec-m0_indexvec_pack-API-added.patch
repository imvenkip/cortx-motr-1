From f1eb3ce6a52249f12a5330ecab9aaac762a1b170 Mon Sep 17 00:00:00 2001
From: Andriy Tkachuk <andriy_tkachuk@xyratex.com>
Date: Wed, 30 Oct 2013 10:24:53 +0200
Subject: [PATCH 10/17] lib/vec: m0_indexvec_pack() API added

m0_indexvec_pack() packs index vector by
squashing its contiguous chunks.
---
 lib/ut/vec.c | 18 ++++++++++--------
 lib/vec.c    | 24 ++++++++++++++++++++++++
 lib/vec.h    |  7 +++++++
 3 files changed, 41 insertions(+), 8 deletions(-)

diff --git a/lib/ut/vec.c b/lib/ut/vec.c
index 2eda41c..464365a 100644
--- a/lib/ut/vec.c
+++ b/lib/ut/vec.c
@@ -191,14 +191,16 @@ static void test_ivec_cursor(void)
 	}
 	M0_UT_ASSERT(nr == 3);
 
-	m0_ivec_cursor_init(&cur, &ivec);
-	c = 0;
-	nr = 0;
-	while (!m0_ivec_cursor_move(&cur, c)) {
-		c = m0_ivec_cursor_cstep(&cur);
-		++nr;
-	}
-	M0_UT_ASSERT(nr == 2);
+	M0_UT_ASSERT(m0_vec_count(&ivec.iv_vec) == 8);
+	M0_UT_ASSERT(m0_indexvec_pack(&ivec) == 1);
+	M0_UT_ASSERT(m0_vec_count(&ivec.iv_vec) == 8);
+	M0_UT_ASSERT(ivec.iv_vec.v_nr == 2);
+	M0_UT_ASSERT(ivec.iv_index[0] == 0);
+	M0_UT_ASSERT(ivec.iv_vec.v_count[0] == 4);
+	M0_UT_ASSERT(ivec.iv_index[1] == 8);
+	M0_UT_ASSERT(ivec.iv_vec.v_count[1] == 4);
+	M0_UT_ASSERT(m0_indexvec_pack(&ivec) == 0);
+	M0_UT_ASSERT(m0_vec_count(&ivec.iv_vec) == 8);
 }
 
 static void test_bufvec_cursor(void)
diff --git a/lib/vec.c b/lib/vec.c
index 6daf556..0268172 100644
--- a/lib/vec.c
+++ b/lib/vec.c
@@ -347,6 +347,30 @@ M0_INTERNAL void m0_indexvec_free(struct m0_indexvec *ivec)
 	ivec->iv_vec.v_nr = 0;
 }
 
+M0_INTERNAL uint32_t m0_indexvec_pack(struct m0_indexvec *iv)
+{
+	uint32_t i = 0;
+	uint32_t j;
+
+	M0_PRE(iv->iv_vec.v_nr > 0);
+
+	for (j = i + 1; j < iv->iv_vec.v_nr; ++j) {
+		if (iv->iv_index[i] + iv->iv_vec.v_count[i] ==
+		    iv->iv_index[j]) {
+			iv->iv_vec.v_count[i] += iv->iv_vec.v_count[j];
+		} else {
+			++i;
+			if (i != j) {
+				iv->iv_index[i] = iv->iv_index[j];
+				iv->iv_vec.v_count[i] = iv->iv_vec.v_count[j];
+			}
+		}
+	}
+	iv->iv_vec.v_nr = i + 1;
+
+	return j - iv->iv_vec.v_nr;
+}
+
 M0_INTERNAL void m0_bufvec_cursor_init(struct m0_bufvec_cursor *cur,
 				       struct m0_bufvec *bvec)
 {
diff --git a/lib/vec.h b/lib/vec.h
index 9730eff..c4a7460 100644
--- a/lib/vec.h
+++ b/lib/vec.h
@@ -263,6 +263,13 @@ M0_INTERNAL int m0_indexvec_alloc(struct m0_indexvec *ivec, uint32_t len,
  */
 M0_INTERNAL void m0_indexvec_free(struct m0_indexvec *ivec);
 
+/**
+ * Packs index vector by squashing its contiguous chunks.
+ * @pre ivec->iv_vec.v_nr > 0.
+ * @return the number of squashed chunks.
+ */
+M0_INTERNAL uint32_t m0_indexvec_pack(struct m0_indexvec *ivec);
+
 /** Cursor to traverse a bufvec */
 struct m0_bufvec_cursor {
 	/** Vector cursor used to track position in the vector
-- 
1.8.3.2

