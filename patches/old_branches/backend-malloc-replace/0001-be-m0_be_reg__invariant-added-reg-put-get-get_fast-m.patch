From 643659b34918d21fc1ea5539d87626de0c10a8df Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Tue, 28 May 2013 21:12:13 +0300
Subject: [PATCH 001/161] be: m0_be_reg__invariant added, reg put/get/get_fast
 mock implementations

---
 be/seg.c | 19 +++++++++++++++++++
 be/seg.h |  3 +++
 2 files changed, 22 insertions(+)

diff --git a/be/seg.c b/be/seg.c
index e6fd384..c1969eb 100644
--- a/be/seg.c
+++ b/be/seg.c
@@ -25,7 +25,26 @@
  * @{
  */
 
+bool m0_be_reg__invariant(const struct m0_be_reg *reg)
+{
+	return reg != NULL && reg->br_seg != NULL &&
+		reg->br_size > 0 && reg->br_addr = NULL;
+}
 
+void m0_be_reg_get(struct m0_be_reg *reg, struct m0_be_op *op)
+{
+	M0_PRE(m0_be_reg__invariant(reg));
+}
+
+void m0_be_reg_get_fast(const struct m0_be_seg *reg)
+{
+	M0_PRE(m0_be_reg__invariant(reg));
+}
+
+void m0_be_reg_put(const struct m0_be_reg *reg)
+{
+	M0_PRE(m0_be_reg__invariant(reg));
+}
 
 /** @} end of XXX group */
 
diff --git a/be/seg.h b/be/seg.h
index da2fad1..a458490 100644
--- a/be/seg.h
+++ b/be/seg.h
@@ -38,6 +38,7 @@ struct m0_be_seg {
 
 void m0_be_seg_init(struct m0_be_seg *seg, struct m0_stob *stob);
 void m0_be_seg_fini(struct m0_be_seg *seg);
+bool m0_be_seg__invariant(const struct m0_be_seg *seg);
 
 /** Opens existing stob, reads segment header from it, etc. */
 int m0_be_seg_open(struct m0_be_seg *seg);
@@ -71,5 +72,7 @@ void m0_be_reg_get_fast(const struct m0_be_seg *reg);
 
 void m0_be_reg_put(const struct m0_be_reg *reg);
 
+bool m0_be_reg__invariant(const struct m0_be_reg *reg);
+
 /** @} end of be group */
 #endif /* __MERO_BE_SEG_H__ */
-- 
1.8.3.2

