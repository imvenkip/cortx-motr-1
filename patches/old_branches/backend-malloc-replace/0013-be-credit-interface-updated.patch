From 3ebf571d8b1a454fc9d84972d170a382a4466e73 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Tue, 28 May 2013 15:23:10 +0300
Subject: [PATCH 013/161] be: "credit" interface updated

---
 be/seg.h | 86 ++++++++++++++++++++++++++++++++++------------------------------
 1 file changed, 46 insertions(+), 40 deletions(-)

diff --git a/be/seg.h b/be/seg.h
index 7a00e56..3258f48 100644
--- a/be/seg.h
+++ b/be/seg.h
@@ -39,15 +39,18 @@ void m0_be_allocator_fini(struct m0_be_allocator *a);
 int m0_be_allocator_create(struct m0_be_allocator *a);
 int m0_be_allocator_destroy(struct m0_be_allocator *a);
 
-void m0_be_alloc_credit(struct m0_be_allocator *a, m0_bcount_t size,
-			unsigned shift, struct m0_be_tx_credit *accum);
+enum m0_be_allocator_op {
+	M0_BAO_ALLOC,
+	M0_BAO_FREE
+};
+
+void m0_be_allocator_credit(struct m0_be_allocator *a,
+			    enum m0_be_allocator_op optype, m0_bcount_t size,
+			    unsigned shift, struct m0_be_tx_credit *accum);
 
 void *m0_be_alloc(struct m0_be_allocator *a, struct m0_be_tx *tx,
 		  m0_bcount_t size, unsigned shift);
 
-void m0_be_free_credit(struct m0_be_allocator *a,
-		       struct m0_be_tx_credit *accum);
-
 void m0_be_free(struct m0_be_allocator *a, struct m0_be_tx *tx, void *ptr);
 
 struct m0_be_allocator_stats {
@@ -107,6 +110,26 @@ int m0_be_tx_timedwait(struct m0_be_tx *tx, m0_time_t timeout);
 
 /** Forces the transaction to storage. */
 void m0_be_tx_force(struct m0_be_tx *tx);
+
+struct m0_be_tx_credit {
+	/**
+	 * The number of regions needed for operation representation in the
+	 * transaction.
+	 */
+	m0_bcount_t tc_reg_nr;
+
+	/** Total size of memory needed for the same. */
+	m0_bcount_t tc_reg_size;
+};
+
+void m0_be_tx_credit_init(struct m0_be_tx_credit *credit);
+
+/** c0 += c1 */
+void m0_be_tx_credit_add(struct m0_be_tx_credit *c0,
+			 const struct m0_be_tx_credit *c1);
+
+/** c *= k */
+void m0_be_tx_credit_mul(struct m0_be_tx_credit *c, m0_bcount_t k);
 
 /* ---------------------------------------------------------------- */
 
@@ -183,13 +206,15 @@ void m0_be_list_capture(const struct m0_be_list *list, struct m0_be_tx *tx,
 			const struct m0_tlink *origin, m0_bcount_t left,
 			m0_bcount_t right);
 
-/* scope void   name ## _tlist_add(struct m0_tl *list, amb_type *amb);	\ */
-/* scope void   name ## _tlist_add_tail(struct m0_tl *list, amb_type *amb); \ */
-/* scope void   name ## _tlist_add_after(amb_type *amb, amb_type *next);	\ */
-/* scope void   name ## _tlist_add_before(amb_type *amb, amb_type *next);	\ */
-/* scope void   name ## _tlist_del(amb_type *amb);				\ */
-/* scope void   name ## _tlist_move(struct m0_tl *list, amb_type *amb);	\ */
-/* scope void   name ## _tlist_move_tail(struct m0_tl *list, amb_type *amb); \ */
+enum m0_be_list_op {
+	M0_BLO_INSERT,
+	M0_BLO_DELETE,
+	M0_BLO_MOVE
+};
+
+void m0_be_list_credit(const struct m0_be_list *list,
+		       enum m0_be_list_op optype, m0_bcount_t nr,
+		       struct m0_be_tx_credit *accum);
 
 
 /* ---------------------------------------------------------------- */
@@ -250,8 +275,15 @@ void m0_be_btree_lookup_inplace(struct m0_be_btree *tree, struct m0_be_op *op,
 				const struct m0_buf *key,
 				struct m0_be_btree_anchor *anchor);
 
-void m0_be_btree_insert_credit(const struct m0_be_btree *tree, m0_bcount_t nr,
-			       struct m0_be_tx_credit *accum);
+enum m0_be_btree_op {
+	M0_BBO_INSERT,
+	M0_BBO_DELETE,
+	M0_BBO_UPDATE
+};
+
+void m0_be_btree_credit(const struct m0_be_btree *tree,
+			enum m0_be_btree_op optype, m0_bcount_t nr,
+			struct m0_be_tx_credit *accum);
 
 void m0_be_btree_insert(struct m0_be_btree *tree, struct m0_be_tx *tx,
 			struct m0_be_op *op, const struct m0_buf *key,
@@ -261,9 +293,6 @@ void m0_be_btree_insert_inplace(struct m0_be_btree *tree, struct m0_be_tx *tx,
 				struct m0_be_op *op, const struct m0_buf *key,
 				struct m0_be_btree_anchor *anchor);
 
-void m0_be_btree_update_credit(const struct m0_be_btree *tree, m0_bcount_t nr,
-			       struct m0_be_tx_credit *accum);
-
 void m0_be_btree_update(struct m0_be_btree *tree, struct m0_be_tx *tx,
 			struct m0_be_op *op, const struct m0_buf *key,
 			const struct m0_buf *value);
@@ -272,35 +301,12 @@ void m0_be_btree_update_inplace(struct m0_be_btree *tree, struct m0_be_tx *tx,
 				struct m0_be_op *op, const struct m0_buf *key,
 				struct m0_be_btree_anchor *anchor);
 
-void m0_be_btree_delete_credit(struct m0_be_btree *tree, m0_bcount_t nr,
-			       struct m0_be_tx_credit *accum);
-
 void m0_be_btree_delete(struct m0_be_btree *tree, struct m0_be_tx *tx,
 			struct m0_be_op *op, const struct m0_buf *key);
 
 /** Completes m0_be_btree_*_inplace() operation. */
 void m0_be_btree_release(struct m0_be_btree *tree,
 			 const struct m0_be_btree_anchor *anchor);
-
-struct m0_be_tx_credit {
-	/**
-	 * The number of regions needed for operation representation in the
-	 * transaction.
-	 */
-	m0_bcount_t tc_reg_nr;
-
-	/** Total size of memory needed for the same. */
-	m0_bcount_t tc_reg_size;
-};
-
-void m0_be_tx_credit_init(struct m0_be_tx_credit *credit);
-
-/** c0 += c1 */
-void m0_be_tx_credit_add(struct m0_be_tx_credit *c0,
-			 const struct m0_be_tx_credit *c1);
-
-/** c *= k */
-void m0_be_tx_credit_mul(struct m0_be_tx_credit *c, m0_bcount_t k);
 
 /* ---------------------------------------------------------------- */
 
-- 
1.8.3.2

