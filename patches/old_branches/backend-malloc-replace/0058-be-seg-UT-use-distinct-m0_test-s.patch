From 16643f5ef5c2ae31e95d33576d59d425cc1d69b3 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 30 May 2013 15:46:21 +0300
Subject: [PATCH 058/161] be (seg UT): use distinct m0_test-s

---
 be/ut/seg.c                    | 46 ++++++++++++++++++------------------------
 utils/linux_kernel/m0ut_main.c |  4 ++--
 utils/ut_main.c                |  4 ++--
 3 files changed, 24 insertions(+), 30 deletions(-)

diff --git a/be/ut/seg.c b/be/ut/seg.c
index c1fce79..df3c35e 100644
--- a/be/ut/seg.c
+++ b/be/ut/seg.c
@@ -20,24 +20,23 @@
 
 #include "be/seg.h"
 #include "be/be.h"
-
-#include "ut/ut.h"
 #include "dtm/dtm.h"
 #include "stob/linux.h"
+#include "ut/ut.h"
 
 enum {
-	BE_SEG_UT_DOM_ID = 42,
-	BE_SEG_UT_STOB_ID = 42,
-	BE_SEG_UT_SEG_SIZE = 0x10000,
+	BE_SEG_UT_DOM_ID   = 42,
+	BE_SEG_UT_STOB_ID  = 42,
+	BE_SEG_UT_SEG_SIZE = 0x10000
 };
 
+static struct m0_be          be;
+static struct m0_dtx         dtx;
 static struct m0_stob_domain dom;
-static struct m0_stob_id id = {
-	.si_bits = M0_UINT128(0, BE_SEG_UT_STOB_ID),
+static struct m0_stob       *stob;
+static struct m0_stob_id     id = {
+	.si_bits = M0_UINT128(0, BE_SEG_UT_STOB_ID)
 };
-static struct m0_dtx dtx;
-static struct m0_stob *stob;
-static struct m0_be be;
 
 static void seg_init_helper(struct m0_be_seg *seg)
 {
@@ -69,7 +68,7 @@ static void test_init_fini(void)
 static void test_create_destroy(void)
 {
 	struct m0_be_seg seg;
-	int		 rc;
+	int              rc;
 
 	seg_init_helper(&seg);
 	rc = m0_be_seg_create(&seg, BE_SEG_UT_SEG_SIZE);
@@ -82,7 +81,7 @@ static void test_create_destroy(void)
 static void test_open_close(void)
 {
 	struct m0_be_seg seg;
-	int		 rc;
+	int              rc;
 
 	seg_init_helper(&seg);
 	rc = m0_be_seg_create(&seg, BE_SEG_UT_SEG_SIZE);
@@ -95,18 +94,13 @@ static void test_open_close(void)
 	seg_fini_helper(&seg);
 }
 
-static void test_seg(void)
-{
-	test_init_fini();
-	test_create_destroy();
-	test_open_close();
-}
-
-const struct m0_test_suite be_ut = {
-        .ts_name = "be-ut",
-        .ts_tests = {
-                { "seg", test_seg },
-                { NULL, NULL }
-        }
+const struct m0_test_suite be_seg_ut = {
+	.ts_name = "be-seg-ut",
+	.ts_tests = {
+		{ "init",   test_init_fini },
+		{ "create", test_create_destroy },
+		{ "open",   test_open_close },
+		{ NULL, NULL }
+	}
 };
-M0_EXPORTED(be_ut);
+M0_EXPORTED(be_seg_ut);
diff --git a/utils/linux_kernel/m0ut_main.c b/utils/linux_kernel/m0ut_main.c
index 044302e..6b30ea7 100644
--- a/utils/linux_kernel/m0ut_main.c
+++ b/utils/linux_kernel/m0ut_main.c
@@ -33,7 +33,7 @@ MODULE_LICENSE("proprietary");
 /* sort test suites in alphabetic order */
 extern const struct m0_test_suite m0_klibm0_ut; /* test lib first */
 extern const struct m0_test_suite m0_addb_ut;
-extern const struct m0_test_suite be_ut;
+extern const struct m0_test_suite be_seg_ut;
 extern const struct m0_test_suite buffer_pool_ut;
 extern const struct m0_test_suite bulkio_client_ut;
 extern const struct m0_test_suite m0_net_bulk_if_ut;
@@ -64,7 +64,7 @@ static void run_kernel_ut(int ignored)
 	/* sort test suites in alphabetic order */
 	m0_ut_add(&m0_klibm0_ut);  /* test lib first */
 	m0_ut_add(&m0_addb_ut);
-	m0_ut_add(&be_ut);
+	m0_ut_add(&be_seg_ut);
 	m0_ut_add(&file_io_ut);
 	m0_ut_add(&buffer_pool_ut);
 	m0_ut_add(&bulkio_client_ut);
diff --git a/utils/ut_main.c b/utils/ut_main.c
index 176d198..7c01310 100644
--- a/utils/ut_main.c
+++ b/utils/ut_main.c
@@ -38,7 +38,7 @@ extern const struct m0_test_suite ad_ut;
 extern const struct m0_test_suite addb_ut;
 extern const struct m0_test_suite adieu_ut;
 extern const struct m0_test_suite balloc_ut;
-extern const struct m0_test_suite be_ut;
+extern const struct m0_test_suite be_seg_ut;
 extern const struct m0_test_suite buffer_pool_ut;
 extern const struct m0_test_suite bulkio_client_ut;
 extern const struct m0_test_suite bulkio_server_ut;
@@ -104,7 +104,7 @@ void add_uts(void)
 	m0_ut_add(&ad_ut);
 	m0_ut_add(&adieu_ut);
 	m0_ut_add(&balloc_ut);
-	m0_ut_add(&be_ut);
+	m0_ut_add(&be_seg_ut);
 	m0_ut_add(&buffer_pool_ut);
 	m0_ut_add(&bulkio_client_ut);
 	m0_ut_add(&bulkio_server_ut);
-- 
1.8.3.2

