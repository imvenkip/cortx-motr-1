From 965d29c5071bd764e4c15ecb71fe01baa521d085 Mon Sep 17 00:00:00 2001
From: Andriy Tkachuk <andriy_tkachuk@xyratex.com>
Date: Wed, 29 May 2013 15:05:27 +0300
Subject: [PATCH 040/161] be/seg: seg_header_read() added

---
 be/seg.c | 29 ++++++++++++++++++++++++++++-
 1 file changed, 28 insertions(+), 1 deletion(-)

diff --git a/be/seg.c b/be/seg.c
index de160fa..4c42686 100644
--- a/be/seg.c
+++ b/be/seg.c
@@ -44,7 +44,6 @@ static void seg_io_prepare(struct m0_be_seg *seg, struct m0_stob_io *io)
 {
 	static m0_bcount_t count[] = { sizeof(struct be_seg_hdr) };
 
-	io->si_opcode = SIO_WRITE;
 	io->si_flags  = 0;
 
 	io->si_fol_rec_part = (void *)1; /* XXX */
@@ -70,6 +69,33 @@ static void seg_header_prepare(struct m0_be_seg *seg, struct m0_stob_io *io,
 	seg_io_prepare(seg, io);
 }
 
+static int seg_header_read(struct m0_be_seg *seg)
+{
+	struct be_seg_hdr *seg_hdr = (struct be_seg_hdr *)seg->bs_addr;
+	struct m0_stob_io  io;
+	struct m0_clink    clink;
+	int                rc;
+
+	m0_stob_io_init(&io);
+	io.si_opcode = SIO_READ;
+	seg_header_prepare(seg, &io, 0);
+
+	m0_clink_init(&clink, NULL);
+	m0_clink_add(&io.si_wait, &clink);
+
+	rc = m0_stob_io_launch(&io, seg->bs_stob, NULL, NULL);
+	M0_ASSERT(rc != 0); /* XXX FIXME */
+
+	m0_chan_wait(&clink);
+	m0_clink_del(&clink);
+	m0_clink_fini(&clink);
+	m0_stob_io_fini(&io);
+
+	seg->bs_size = seg_hdr->bh_size;
+
+	return io.si_rc;
+}
+
 static int seg_header_write(struct m0_be_seg *seg, m0_bcount_t size)
 {
 	struct m0_stob_io io;
@@ -77,6 +103,7 @@ static int seg_header_write(struct m0_be_seg *seg, m0_bcount_t size)
 	int               rc;
 
 	m0_stob_io_init(&io);
+	io.si_opcode = SIO_WRITE;
 	seg_header_prepare(seg, &io, size);
 
 	m0_clink_init(&clink, NULL);
-- 
1.8.3.2

