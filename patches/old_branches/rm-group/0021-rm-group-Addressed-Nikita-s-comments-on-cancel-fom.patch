From 611d87900f360465ec2ee316b3884e0978e79cd8 Mon Sep 17 00:00:00 2001
From: Manish Honap <manish_honap@xyratex.com>
Date: Tue, 10 Sep 2013 17:16:16 +0530
Subject: [PATCH 21/24] [rm-group] Addressed Nikita's comments on cancel fom

* Move clink addition logic after memory allocation to handle
  allocation failure;
* Dont perform m0_clink_wait() for reverse connection during
  cancel fom operation.
---
 rm/rm_foms.c | 14 ++++++++++----
 1 file changed, 10 insertions(+), 4 deletions(-)

diff --git a/rm/rm_foms.c b/rm/rm_foms.c
index 6da1ec2..efa3df9 100644
--- a/rm/rm_foms.c
+++ b/rm/rm_foms.c
@@ -381,9 +381,6 @@ M0_INTERNAL int m0_rm_reverse_session_get(struct m0_rm_remote_incoming *rem_in,
 					&fom->fo_service->rs_rpc_svc,
 					&fom->fo_fop->f_item);
 		if (remote->rem_session == NULL) {
-			m0_clink_init(&remote->rem_rev_sess_clink, NULL);
-			m0_clink_add_lock(&service->rs_rev_conn_wait,
-					  &remote->rem_rev_sess_clink);
 			RM_ALLOC_PTR(remote->rem_session, REMOTE_SESSION_ALLOC,
 				     &m0_rm_addb_ctx);
 			if (remote->rem_session == NULL)
@@ -392,6 +389,9 @@ M0_INTERNAL int m0_rm_reverse_session_get(struct m0_rm_remote_incoming *rem_in,
 				&service->rs_rpc_svc,
 				&fom->fo_fop->f_item,
 				&remote->rem_session);
+			m0_clink_init(&remote->rem_rev_sess_clink, NULL);
+			m0_clink_add_lock(&service->rs_rev_conn_wait,
+					  &remote->rem_rev_sess_clink);
 		}
 	}
 	M0_RETURN(0);
@@ -611,6 +611,7 @@ static int cancel_process(struct m0_fom *fom)
 	struct rm_request_fom	 *rfom;
 	struct m0_rm_loan        *loan;
 	struct m0_rm_owner       *owner;
+	struct m0_clink          *clink;
 	int			  rc = 0;
 
 	cfop = m0_fop_data(fom->fo_fop);
@@ -619,9 +620,14 @@ static int cancel_process(struct m0_fom *fom)
 	loan = m0_cookie_of(&cfop->fc_loan.lo_cookie,
 			    struct m0_rm_loan, rl_id);
 	M0_ASSERT(loan != NULL);
+	M0_ASSERT(loan->rl_other != NULL);
 
 	owner = loan->rl_credit.cr_owner;
-	m0_rm_rev_session_wait(loan->rl_other);
+	clink = &loan->rl_other->rem_rev_sess_clink;
+	if (m0_clink_is_armed(clink)) {
+		m0_clink_del_lock(clink);
+		m0_clink_fini(clink);
+	}
 	rc = m0_rm_loan_settle(owner, loan);
 
 	m0_fom_phase_set(fom, FOPH_RM_REQ_FINISH);
-- 
1.8.3.2

