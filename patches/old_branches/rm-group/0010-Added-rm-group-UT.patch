From 43da3a745536443656b1a2e4afdf2d7d1d0f7dc5 Mon Sep 17 00:00:00 2001
From: Rajesh Bhalerao <Rajesh_Bhalerao@xyratex.com>
Date: Fri, 23 Aug 2013 17:36:30 +0530
Subject: [PATCH 10/24] Added rm-group UT.

---
 rm/ut/Makefile.sub |  3 ++-
 rm/ut/group.c      | 57 ++++++++++++++++++++----------------------------------
 rm/ut/rcredits.c   | 29 +++++++--------------------
 rm/ut/rmut.c       | 12 ++++++++++++
 4 files changed, 42 insertions(+), 59 deletions(-)

diff --git a/rm/ut/Makefile.sub b/rm/ut/Makefile.sub
index ceb1129..5c50dab 100644
--- a/rm/ut/Makefile.sub
+++ b/rm/ut/Makefile.sub
@@ -6,6 +6,7 @@ ut_libmero_ut_la_SOURCES += rm/ut/rings.c \
                             rm/ut/rm_fops.c \
                             rm/ut/file.c \
                             rm/ut/rmut.c \
-                            rm/ut/rm_service.c
+                            rm/ut/rm_service.c \
+                            rm/ut/group.c
 
 EXTRA_DIST += rm/ut/rings.h rm/ut/rings.c rm/ut/rmut.h
diff --git a/rm/ut/group.c b/rm/ut/group.c
index 9a70af3..d4ecd8d 100644
--- a/rm/ut/group.c
+++ b/rm/ut/group.c
@@ -24,32 +24,12 @@
 #include "rm/ut/rmut.h"
 #include "rm/ut/rings.h"
 
-const char *db_name[] = {"ut-rm-cob_1",
-			 "ut-rm-cob_2",
-			 "ut-rm-cob_3"
-};
-
-/*
- * Hierarchy description:
- * SERVER_1 is downward debtor for SERVER_3 and belongs to group
- *          M0_RM_SNS_GROUP.
- * SERVER_2 is downward debtor for SERVER_3 and also belongs to group
- *          M0_RM_SNS_GROUP.
- * SERVER_3 is upward creditor for SERVER_1 and SERVER_2.
- */
-const char *serv_addr[] = { "0@lo:12345:34:1",
-			    "0@lo:12345:34:2",
-			    "0@lo:12345:34:3"
-};
-
-const int cob_ids[] = { 20, 30, 40 };
 /* Maximum test servers for this testcase */
 static enum rm_server test_servers_nr;
 
-struct m0_chan    group_tests_chan;
-struct m0_clink   tests_clink[GROUP_TESTS_NR];
-struct rm_context rm_ctx[SERVER_NR];
-struct m0_mutex   group_tests_chan_mutex;
+static struct m0_chan    group_tests_chan;
+static struct m0_clink   group_tests_clink[GROUP_TESTS_NR];
+static struct m0_mutex   group_tests_chan_mutex;
 
 static void rmg_in_complete(struct m0_rm_incoming *in, int32_t rc)
 {
@@ -59,15 +39,15 @@ static void rmg_in_conflict(struct m0_rm_incoming *in)
 {
 }
 
-const struct m0_rm_incoming_ops rmg_incoming_ops = {
+static const struct m0_rm_incoming_ops rmg_incoming_ops = {
 	.rio_complete = rmg_in_complete,
 	.rio_conflict = rmg_in_conflict
 };
 
-static void ring_get(enum rm_server       srv_id,
-		     enum m0_rm_group_id  grp_id,
-		     m0_rm_incoming_flags in_flag,
-		     int                  which_ring)
+static void ring_get(enum rm_server            srv_id,
+		     enum m0_rm_group_id       grp_id,
+		     enum m0_rm_incoming_flags in_flag,
+		     int                       which_ring)
 {
 	struct m0_rm_incoming *in    = &rm_ctx[srv_id].rc_test_data.rd_in;
 	struct m0_rm_owner    *owner = rm_ctx[srv_id].rc_test_data.rd_owner;
@@ -156,7 +136,7 @@ static void group_borrow_run(enum rm_server srv_id)
 
 static void server1_tests(void)
 {
-	m0_chan_wait(&tests_clink[GROUP_BORROW_TEST1]);
+	m0_chan_wait(&group_tests_clink[GROUP_BORROW_TEST1]);
 	group_borrow_run(SERVER_1);
 	group_borrow_verify(SERVER_1);
 
@@ -166,7 +146,7 @@ static void server1_tests(void)
 
 static void server2_tests(void)
 {
-	m0_chan_wait(&tests_clink[GROUP_BORROW_TEST2]);
+	m0_chan_wait(&group_tests_clink[GROUP_BORROW_TEST2]);
 	group_borrow_run(SERVER_2);
 	group_borrow_verify(SERVER_2);
 
@@ -177,7 +157,7 @@ static void server2_tests(void)
 
 static void server3_tests(void)
 {
-	m0_chan_wait(&tests_clink[STAND_ALONE_BORROW_TEST]);
+	m0_chan_wait(&group_tests_clink[STAND_ALONE_BORROW_TEST]);
 	standalone_borrow_run();
 	standalone_borrow_verify();
 
@@ -208,7 +188,12 @@ static void rm_server_start(const int tid)
 }
 
 /*
- * Configure server hierarchy.
+ * Hierarchy description:
+ * SERVER_1 is downward debtor for SERVER_3 and belongs to group
+ *          M0_RM_SNS_GROUP.
+ * SERVER_2 is downward debtor for SERVER_3 and also belongs to group
+ *          M0_RM_SNS_GROUP.
+ * SERVER_3 is upward creditor for SERVER_1 and SERVER_2.
  */
 static void server_hier_config(void)
 {
@@ -240,8 +225,8 @@ static void rm_group_utinit(void)
 
 	/* Set up test sync points */
 	for (i = 0; i < GROUP_TESTS_NR; ++i) {
-		m0_clink_init(&tests_clink[i], NULL);
-		m0_clink_add_lock(&group_tests_chan, &tests_clink[i]);
+		m0_clink_init(&group_tests_clink[i], NULL);
+		m0_clink_add_lock(&group_tests_chan, &group_tests_clink[i]);
 	}
 }
 
@@ -266,8 +251,8 @@ static void rm_group_utfini(void)
 		rm_ctx_fini(&rm_ctx[i]);
 	}
 	for (i = 0; i < GROUP_TESTS_NR; ++i) {
-		m0_clink_del_lock(&tests_clink[i]);
-		m0_clink_fini(&tests_clink[i]);
+		m0_clink_del_lock(&group_tests_clink[i]);
+		m0_clink_fini(&group_tests_clink[i]);
 	}
 	m0_chan_fini_lock(&group_tests_chan);
 	m0_mutex_fini(&group_tests_chan_mutex);
diff --git a/rm/ut/rcredits.c b/rm/ut/rcredits.c
index 9c68779..2068b7a 100644
--- a/rm/ut/rcredits.c
+++ b/rm/ut/rcredits.c
@@ -24,29 +24,11 @@
 #include "rm/ut/rmut.h"
 #include "rm/ut/rings.h"
 
-const char *db_name[] = {"ut-rm-cob_1",
-			 "ut-rm-cob_2",
-			 "ut-rm-cob_3"
-};
-
-/*
- * Hierarchy description:
- * SERVER_1 is downward debtor for SERVER_2.
- * SERVER_2 is upward creditor for SERVER_1 and downward debtor for SERVER_3.
- * SERVER_3 is upward creditor for SERVER_2.
- */
-const char *serv_addr[] = { "0@lo:12345:34:1",
-			    "0@lo:12345:34:2",
-			    "0@lo:12345:34:3"
-};
-
-const int cob_ids[] = { 20, 30, 40 };
 /* Maximum test servers for this testcase */
 static enum rm_server test_servers_nr;
 
 struct m0_chan    rr_tests_chan;
 struct m0_clink   tests_clink[TEST_NR];
-struct rm_context rm_ctx[SERVER_NR];
 struct m0_mutex   rr_tests_chan_mutex;
 
 static void server1_in_complete(struct m0_rm_incoming *in, int32_t rc)
@@ -59,7 +41,7 @@ static void server1_in_conflict(struct m0_rm_incoming *in)
 {
 }
 
-const struct m0_rm_incoming_ops server1_incoming_ops = {
+static const struct m0_rm_incoming_ops server1_incoming_ops = {
 	.rio_complete = server1_in_complete,
 	.rio_conflict = server1_in_conflict
 };
@@ -74,7 +56,7 @@ static void server2_in_conflict(struct m0_rm_incoming *in)
 {
 }
 
-const struct m0_rm_incoming_ops server2_incoming_ops = {
+static const struct m0_rm_incoming_ops server2_incoming_ops = {
 	.rio_complete = server2_in_complete,
 	.rio_conflict = server2_in_conflict
 };
@@ -89,7 +71,7 @@ static void server3_in_conflict(struct m0_rm_incoming *in)
 {
 }
 
-const struct m0_rm_incoming_ops server3_incoming_ops = {
+static const struct m0_rm_incoming_ops server3_incoming_ops = {
 	.rio_complete = server3_in_complete,
 	.rio_conflict = server3_in_conflict
 };
@@ -323,7 +305,10 @@ static void rm_server_start(const int tid)
 }
 
 /*
- * Configure server hierarchy.
+ * Hierarchy description:
+ * SERVER_1 is downward debtor for SERVER_2.
+ * SERVER_2 is upward creditor for SERVER_1 and downward debtor for SERVER_3.
+ * SERVER_3 is upward creditor for SERVER_2.
  */
 static void server_hier_config(void)
 {
diff --git a/rm/ut/rmut.c b/rm/ut/rmut.c
index 6f666c3..ab0c3b5 100644
--- a/rm/ut/rmut.c
+++ b/rm/ut/rmut.c
@@ -30,10 +30,22 @@
 
 extern const struct m0_tl_descr m0_remotes_tl;
 
+const char *db_name[] = {"ut-rm-cob_1",
+			 "ut-rm-cob_2",
+			 "ut-rm-cob_3"
+};
+
+const char *serv_addr[] = { "0@lo:12345:34:1",
+			    "0@lo:12345:34:2",
+			    "0@lo:12345:34:3"
+};
+
+const int cob_ids[] = { 20, 30, 40 };
 /*
  * Test variable(s)
  */
 struct rm_ut_data rm_test_data;
+struct rm_context rm_ctx[SERVER_NR];
 
 extern void rm_api_test(void);
 extern void local_credits_test(void);
-- 
1.8.3.2

