From 58055c6e88f303920f186313c379deaf7822b78f Mon Sep 17 00:00:00 2001
From: Rajesh Bhalerao <Rajesh_Bhalerao@xyratex.com>
Date: Thu, 22 Aug 2013 17:15:54 +0530
Subject: [PATCH 08/24] Interim Check-in.

---
 rm/ut/file.c       |  6 ++++--
 rm/ut/rcredits.c   | 47 ++++++-----------------------------------------
 rm/ut/rm_service.c |  4 ++--
 rm/ut/rmut.c       | 26 ++++++++++++++++++--------
 rm/ut/rmut.h       |  3 ++-
 5 files changed, 32 insertions(+), 54 deletions(-)

diff --git a/rm/ut/file.c b/rm/ut/file.c
index aaa6d52..690a14e 100644
--- a/rm/ut/file.c
+++ b/rm/ut/file.c
@@ -437,10 +437,12 @@ static void rm_server_start(const int tid)
 static void server_hier_config(void)
 {
 	rm_ctx[SERVER_1].creditor_id = SERVER_2;
-	rm_ctx[SERVER_1].debtor_id = SERVER_INVALID;
+	rm_ctx[SERVER_1].debtor_id[0] = SERVER_INVALID;
+	rm_ctx[SERVER_1].rc_debtors_nr = 1;
 
 	rm_ctx[SERVER_2].creditor_id = SERVER_INVALID;
-	rm_ctx[SERVER_2].debtor_id = SERVER_1;
+	rm_ctx[SERVER_2].debtor_id[0] = SERVER_1;
+	rm_ctx[SERVER_2].rc_debtors_nr = 1;
 }
 
 static void flock_utinit(void)
diff --git a/rm/ut/rcredits.c b/rm/ut/rcredits.c
index 157f40b..9c68779 100644
--- a/rm/ut/rcredits.c
+++ b/rm/ut/rcredits.c
@@ -300,44 +300,6 @@ static void server3_tests(void)
 	m0_clink_del_lock(&rm_ctx[SERVER_3].rc_clink);
 }
 
-void rm_ctx_connect(struct rm_context *src, const struct rm_context *dest)
-{
-	struct m0_net_end_point *ep;
-	int		         rc;
-
-	/*
-	 * Create a local end point to communicate with remote server.
-	 */
-	rc = m0_net_end_point_create(&ep,
-				     &src->rc_rmach_ctx.rmc_rpc.rm_tm,
-				     dest->rc_rmach_ctx.rmc_ep_addr);
-	M0_UT_ASSERT(rc == 0);
-	src->rc_ep[dest->rc_id] = ep;
-
-	rc = m0_rpc_conn_create(&src->rc_conn[dest->rc_id],
-				ep, &src->rc_rmach_ctx.rmc_rpc, 15,
-				M0_TIME_NEVER);
-	M0_UT_ASSERT(rc == 0);
-
-	rc = m0_rpc_session_create(&src->rc_sess[dest->rc_id],
-				   &src->rc_conn[dest->rc_id], 1,
-				   M0_TIME_NEVER);
-	M0_UT_ASSERT(rc == 0);
-}
-
-void rm_ctx_disconnect(struct rm_context *src, const struct rm_context *dest)
-{
-	int rc;
-
-	rc = m0_rpc_session_destroy(&src->rc_sess[dest->rc_id], M0_TIME_NEVER);
-	M0_UT_ASSERT(rc == 0);
-
-	rc = m0_rpc_conn_destroy(&src->rc_conn[dest->rc_id], M0_TIME_NEVER);
-	M0_UT_ASSERT(rc == 0);
-
-	m0_net_end_point_put(src->rc_ep[dest->rc_id]);
-}
-
 static void rm_server_start(const int tid)
 {
 	if (tid < test_servers_nr) {
@@ -366,13 +328,16 @@ static void rm_server_start(const int tid)
 static void server_hier_config(void)
 {
 	rm_ctx[SERVER_1].creditor_id = SERVER_2;
-	rm_ctx[SERVER_1].debtor_id = SERVER_INVALID;
+	rm_ctx[SERVER_1].debtor_id[0] = SERVER_INVALID;
+	rm_ctx[SERVER_1].rc_debtors_nr = 1;
 
 	rm_ctx[SERVER_2].creditor_id = SERVER_3;
-	rm_ctx[SERVER_2].debtor_id = SERVER_1;
+	rm_ctx[SERVER_2].debtor_id[0] = SERVER_1;
+	rm_ctx[SERVER_2].rc_debtors_nr = 1;
 
 	rm_ctx[SERVER_3].creditor_id = SERVER_INVALID;
-	rm_ctx[SERVER_3].debtor_id = SERVER_2;
+	rm_ctx[SERVER_3].debtor_id[0] = SERVER_2;
+	rm_ctx[SERVER_3].rc_debtors_nr = 1;
 }
 
 static void remote_credits_utinit(void)
diff --git a/rm/ut/rm_service.c b/rm/ut/rm_service.c
index 98646ff..263a4df 100644
--- a/rm/ut/rm_service.c
+++ b/rm/ut/rm_service.c
@@ -158,7 +158,7 @@ static void rm_client(const int tid)
 	m0_clink_init(&client_ctx->rc_clink, NULL);
 
 	/* Connect to end point of SERVER_1 */
-	rm_connect(client_ctx, server_ctx);
+	rm_ctx_connect(client_ctx, server_ctx);
 
 	M0_SET0(&file1);
 	M0_SET0(&file2);
@@ -201,7 +201,7 @@ static void rm_client(const int tid)
 	 */
 	test_flock(&owner, &file2, &fids[1], creditor, false);
 
-	rm_disconnect(client_ctx, server_ctx);
+	rm_ctx_disconnect(client_ctx, server_ctx);
 
 	/* Tell server to stop */
 	m0_chan_signal_lock(&rr_tests_chan);
diff --git a/rm/ut/rmut.c b/rm/ut/rmut.c
index 09bc337..f5510dd 100644
--- a/rm/ut/rmut.c
+++ b/rm/ut/rmut.c
@@ -178,7 +178,7 @@ void rm_ctx_fini(struct rm_context *rmctx)
 	m0_ut_rpc_mach_fini(&rmctx->rc_rmach_ctx);
 }
 
-void rm_connect(struct rm_context *src, const struct rm_context *dest)
+void rm_ctx_connect(struct rm_context *src, const struct rm_context *dest)
 {
 	struct m0_net_end_point *ep;
 	int		         rc;
@@ -203,7 +203,7 @@ void rm_connect(struct rm_context *src, const struct rm_context *dest)
 	M0_UT_ASSERT(rc == 0);
 }
 
-void rm_disconnect(struct rm_context *src, const struct rm_context *dest)
+void rm_ctx_disconnect(struct rm_context *src, const struct rm_context *dest)
 {
 	int rc;
 
@@ -222,7 +222,9 @@ void rm_ctx_server_start(enum rm_server srv_id)
 	struct m0_rm_owner  *owner;
 	struct rm_ut_data   *data = &rm_ctx[srv_id].rc_test_data;
 	enum rm_server	     cred_id = rm_ctx[srv_id].creditor_id;
-	enum rm_server	     debt_id = rm_ctx[srv_id].debtor_id;
+	enum rm_server	     debtr_id;
+	uint32_t             debtors_nr = rm_ctx[srv_id].rc_debtors_nr;
+	uint32_t             i;
 
 	rm_utdata_init(&rm_ctx[srv_id].rc_test_data, OBJ_OWNER);
 	owner = rm_ctx[srv_id].rc_test_data.rd_owner;
@@ -242,8 +244,11 @@ void rm_ctx_server_start(enum rm_server srv_id)
 	} else
 		rm_test_owner_capital_raise(data->rd_owner, &data->rd_credit);
 
-	if (debt_id != SERVER_INVALID)
-		rm_ctx_connect(&rm_ctx[srv_id], &rm_ctx[debt_id]);
+	for (i = 0; i < debtors_nr; ++i) {
+		debtr_id = rm_ctx[srv_id].debtor_id[i];
+		if (debtr_id != SERVER_INVALID)
+			rm_ctx_connect(&rm_ctx[srv_id], &rm_ctx[debtr_id]);
+	}
 
 }
 
@@ -266,12 +271,17 @@ void rm_ctx_server_windup(enum rm_server srv_id)
 void rm_ctx_server_stop(enum rm_server srv_id)
 {
 	enum rm_server cred_id = rm_ctx[srv_id].creditor_id;
-	enum rm_server debt_id = rm_ctx[srv_id].debtor_id;
+	enum rm_server debtr_id;
+	uint32_t       debtors_nr = rm_ctx[srv_id].rc_debtors_nr;
+	uint32_t       i;
 
 	if (cred_id != SERVER_INVALID)
 		rm_ctx_disconnect(&rm_ctx[srv_id], &rm_ctx[cred_id]);
-	if (debt_id != SERVER_INVALID)
-		rm_ctx_disconnect(&rm_ctx[srv_id], &rm_ctx[debt_id]);
+	for (i = 0; i < debtors_nr; ++i) {
+		debtr_id = rm_ctx[srv_id].debtor_id[i];
+		if (debtr_id != SERVER_INVALID)
+			rm_ctx_disconnect(&rm_ctx[srv_id], &rm_ctx[debtr_id]);
+	}
 }
 
 void loan_session_set(enum rm_server csrv_id,
diff --git a/rm/ut/rmut.h b/rm/ut/rmut.h
index be1ba29..e9f8bc1 100644
--- a/rm/ut/rmut.h
+++ b/rm/ut/rmut.h
@@ -108,8 +108,9 @@ struct rm_context {
 	struct m0_rpc_session      rc_sess[SERVER_NR];
 	struct m0_clink           *rc_rev_sess_wait;
 	struct rm_ut_data          rc_test_data;
+	uint32_t                   rc_debtors_nr;
 	enum rm_server             creditor_id;
-	enum rm_server             debtor_id;
+	enum rm_server             debtor_id[SERVER_NR - 1];
 };
 
 /*
-- 
1.8.3.2

