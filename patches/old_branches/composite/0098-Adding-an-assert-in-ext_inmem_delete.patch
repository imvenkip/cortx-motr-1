From eff0dd64c12163c8488df7defea36436955c1324 Mon Sep 17 00:00:00 2001
From: "trupti.patil" <trupti_patil@xyratex.com>
Date: Mon, 25 Mar 2013 10:26:42 +0530
Subject: [PATCH 098/172] Adding an assert in ext_inmem_delete()

---
 layout/composite.c | 33 +++++++++++++++------------------
 1 file changed, 15 insertions(+), 18 deletions(-)

diff --git a/layout/composite.c b/layout/composite.c
index 78a4024..de01e17 100644
--- a/layout/composite.c
+++ b/layout/composite.c
@@ -2197,14 +2197,12 @@ static int ext_indb_write_internal(struct m0_emap_cursor *it,
 }
 
 #ifndef __KERNEL__
-static int ext_inmem_delete(struct m0_composite_layer *layer,
-			    const struct m0_ext *ext,
-			    uint64_t old_ext_state)
+static void ext_inmem_delete(struct m0_composite_layer *layer,
+			     const struct m0_ext *ext,
+			     uint64_t old_ext_state)
 {
 	struct m0_composite_layer_extent *lr_ext;
 	struct m0_composite_layer_extent *lr_ext_to_delete;
-	bool                              lr_ext_to_delete_found;
-	int                               rc;
 
 	M0_ENTRY("lid %llu, layer %lu, e_start %llu, e_end %llu, "
 		 "old_e_state %llu",
@@ -2214,26 +2212,24 @@ static int ext_inmem_delete(struct m0_composite_layer *layer,
 		 (unsigned long long)ext->e_end,
 		 (unsigned long long)old_ext_state);
 
-	lr_ext_to_delete_found = false;
+	lr_ext_to_delete = NULL;
 	m0_tl_for(m0_composite_layer_ext, &layer->clr_extents, lr_ext) {
 		if (ext->e_start > lr_ext->cle_ext.e_end)
 			continue;
 		if (ext->e_start == lr_ext->cle_ext.e_start) {
 			M0_ASSERT(lr_ext->cle_ext.e_end == ext->e_end);
 			M0_ASSERT(lr_ext->cle_state == old_ext_state);
-
 			lr_ext_to_delete = lr_ext;
-			lr_ext_to_delete_found = true;
 			break;
 		}
 	} m0_tl_endfor;
-
-	if (lr_ext_to_delete_found)
-		ext_inmem_del_internal(layer, lr_ext_to_delete);
-		rc = 0;
-	} else
-		rc = -ENOENT;
-	M0_RETURN(rc);
+	/*
+	 * Since the ext is asked to be deleted, it has to be present in the
+	 * in-memory list of the extents.
+	 */
+	M0_ASSERT(lr_ext_to_delete != NULL);
+	ext_inmem_del_internal(layer, lr_ext_to_delete);
+	M0_LEAVE();
 }
 
 /** Trims the existing extent as requested. */
@@ -2323,13 +2319,14 @@ static int ext_inmem_adjust(struct m0_composite_layer *layer,
 		 (ext != NULL) ? (unsigned long long)ext->e_start : 0,
 		 (ext != NULL) ? (unsigned long long)ext->e_end : 0);
 
-	if (extent_op == DELETE)
+	if (extent_op == DELETE) {
 		/*
 		 * The extent seg->ee_ext is replaced by some newer extent.
 		 * Hence, seg->ee_ext is asked to be deleted.
 		 */
-		rc = ext_inmem_delete(layer, &seg->ee_ext, seg->ee_val);
-	else
+		ext_inmem_delete(layer, &seg->ee_ext, seg->ee_val);
+		rc = 0;
+	} else
 		rc = ext_inmem_trim(layer, extent_op, &seg->ee_ext,
 				    seg->ee_val, ext);
 	M0_RETURN(rc);
-- 
1.8.3.2

