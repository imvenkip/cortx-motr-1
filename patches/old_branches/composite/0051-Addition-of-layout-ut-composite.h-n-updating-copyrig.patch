From 7cdef013ff4c630b7e9b7a940342e84cc535d3d4 Mon Sep 17 00:00:00 2001
From: "trupti.patil" <trupti_patil@xyratex.com>
Date: Tue, 15 Jan 2013 18:13:49 +0530
Subject: [PATCH 051/172] Addition of layout/ut/composite.h n updating
 copyright yr

---
 layout/composite.c          |   6 +-
 layout/composite.h          |   2 +-
 layout/composite_internal.h |   4 +-
 layout/layout.c             |   2 +-
 layout/layout.h             |   2 +-
 layout/layout_addb.h        |   2 +-
 layout/layout_db.c          |   2 +-
 layout/layout_db.h          |   2 +-
 layout/layout_internal.h    |   2 +-
 layout/linear_enum.c        |   2 +-
 layout/linear_enum.h        |   2 +-
 layout/list_enum.c          |   2 +-
 layout/list_enum.h          |   2 +-
 layout/pdclust.c            |   2 +-
 layout/pdclust.h            |   2 +-
 layout/ut/Makefile.sub      |   3 +-
 layout/ut/composite.c       |   8 ++-
 layout/ut/composite.h       | 155 ++++++++++++++++++++++++++++++++++++++++++++
 layout/ut/layout.c          |   3 +-
 layout/ut/layout.h          | 133 ++-----------------------------------
 layout/ut/ldemo_internal.c  |   2 +-
 layout/ut/pdclust.c         |   2 +-
 layout/ut/pdclust.h         |   4 +-
 23 files changed, 191 insertions(+), 155 deletions(-)
 create mode 100644 layout/ut/composite.h

diff --git a/layout/composite.c b/layout/composite.c
index d37307b..eb90a97 100644
--- a/layout/composite.c
+++ b/layout/composite.c
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
@@ -143,11 +143,11 @@ struct layout_prefix {
 };
 
 M0_TL_DESCR_DEFINE(comp_layer, "composite-layer-list",
-		   /* global */, struct m0_composite_layer,
+		   M0_INTERNAL, struct m0_composite_layer,
 		   clr_list_linkage, clr_magic,
 		   M0_LAYOUT_COMPOSITE_LAYER_MAGIC,
 		   LAYER_LIST_HEAD_MAGIC);
-M0_TL_DEFINE(comp_layer, /* global */, struct m0_composite_layer);
+M0_TL_DEFINE(comp_layer, M0_INTERNAL, struct m0_composite_layer);
 
 M0_TL_DESCR_DEFINE(m0_composite_layer_ext, "composite-layer-extent-list",
 		   M0_INTERNAL, struct m0_composite_layer_extent,
diff --git a/layout/composite.h b/layout/composite.h
index 4229c5f..1726ea2 100644
--- a/layout/composite.h
+++ b/layout/composite.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/composite_internal.h b/layout/composite_internal.h
index fe747ab..194d7a3 100644
--- a/layout/composite_internal.h
+++ b/layout/composite_internal.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
@@ -34,7 +34,7 @@
 struct m0_composite_layer;
 
 /* export - Required to be accessed by UT. */
-M0_TL_DECLARE(comp_layer, /* global */, struct m0_composite_layer);
+M0_TL_DECLARE(comp_layer, M0_INTERNAL, struct m0_composite_layer);
 
 /**
  * Structure used to store header information for a composite layout like
diff --git a/layout/layout.c b/layout/layout.c
index 952ed48..67c9f98 100644
--- a/layout/layout.c
+++ b/layout/layout.c
@@ -1,5 +1,5 @@
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/layout.h b/layout/layout.h
index a0f62a7..5164415 100644
--- a/layout/layout.h
+++ b/layout/layout.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/layout_addb.h b/layout/layout_addb.h
index c37f73c..b1035cc 100644
--- a/layout/layout_addb.h
+++ b/layout/layout_addb.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/layout_db.c b/layout/layout_db.c
index c6c3163..6b57c9e 100644
--- a/layout/layout_db.c
+++ b/layout/layout_db.c
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/layout_db.h b/layout/layout_db.h
index 785f281..8cf440b 100644
--- a/layout/layout_db.h
+++ b/layout/layout_db.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/layout_internal.h b/layout/layout_internal.h
index e690c13..b571493 100644
--- a/layout/layout_internal.h
+++ b/layout/layout_internal.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/linear_enum.c b/layout/linear_enum.c
index 3bb01d7..15a0ab4 100644
--- a/layout/linear_enum.c
+++ b/layout/linear_enum.c
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/linear_enum.h b/layout/linear_enum.h
index 6dbb294..b6f7e9d 100644
--- a/layout/linear_enum.h
+++ b/layout/linear_enum.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/list_enum.c b/layout/list_enum.c
index 93c6d9f..db5578b 100644
--- a/layout/list_enum.c
+++ b/layout/list_enum.c
@@ -1,5 +1,5 @@
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/list_enum.h b/layout/list_enum.h
index b40d5fc..35bcb5d 100644
--- a/layout/list_enum.h
+++ b/layout/list_enum.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/pdclust.c b/layout/pdclust.c
index 4d41bb0..61aa08f 100644
--- a/layout/pdclust.c
+++ b/layout/pdclust.c
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/pdclust.h b/layout/pdclust.h
index 4617646..20ced25 100644
--- a/layout/pdclust.h
+++ b/layout/pdclust.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/ut/Makefile.sub b/layout/ut/Makefile.sub
index 83f8aab..1c8235c 100644
--- a/layout/ut/Makefile.sub
+++ b/layout/ut/Makefile.sub
@@ -4,4 +4,5 @@ ut_libmero_ut_la_SOURCES += layout/ut/layout.c \
 
 layout_ut_m0layout_SOURCES = layout/ut/ldemo.c
 
-EXTRA_DIST += layout/ut/layout.h layout/ut/ldemo_internal.c layout/ut/pdclust.h
+EXTRA_DIST += layout/ut/layout.h layout/ut/ldemo_internal.c \
+              layout/ut/pdclust.h layout/ut/composite.h
diff --git a/layout/ut/composite.c b/layout/ut/composite.c
index 3fbab26..9655266 100644
--- a/layout/ut/composite.c
+++ b/layout/ut/composite.c
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
@@ -15,7 +15,7 @@
  * http://www.xyratex.com/contact
  *
  * Original author: Trupti Patil <trupti_patil@xyratex.com>
- * Original creation date: 11/05/2012
+ * Original creation date: 12/02/2012
  */
 
 #include "lib/ut.h"                 /* M0_UT_ASSERT() */
@@ -30,7 +30,9 @@
 #include "layout/composite_internal.h"
 
 #include "layout/ut/layout.h"
-#include "layout/ut/pdclust.h"
+#include "layout/ut/pdclust.h"      /* pdclust_layout_build(),
+				     * pdclust_layout_verify */
+#include "layout/ut/composite.h"
 
 M0_TL_DESCR_DECLARE(comp_layer, extern);
 M0_TL_DESCR_DECLARE(m0_composite_layer_ext, extern);
diff --git a/layout/ut/composite.h b/layout/ut/composite.h
new file mode 100644
index 0000000..728c6a6
--- /dev/null
+++ b/layout/ut/composite.h
@@ -0,0 +1,155 @@
+/* -*- C -*- */
+/*
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
+ *
+ * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
+ * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
+ * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
+ * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
+ * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
+ * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
+ * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
+ *
+ * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
+ * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
+ * http://www.xyratex.com/contact
+ *
+ * Original author: Trupti Patil <trupti_patil@xyratex.com>
+ * Original creation date: 01/15/2013
+ */
+
+#pragma once
+
+#ifndef __MERO_LAYOUT_UT_COMPOSITE_H__
+#define __MERO_LAYOUT_UT_COMPOSITE_H__
+
+/*
+ * Kind of the extent that 'is to be looked up from the extent list' or 'is to
+ * be added to extent list' for a particular layer from a particular composite
+ * layout.
+ */
+enum {
+	NON_EXISTING,
+	EXACT_EXISTING,
+	OVERLAPPING_LEFT,
+	OVERLAPPING_RIGHT,
+	OVERLAPPING_COMPLETE
+};
+
+int test_build_composite(uint64_t lid,
+			 struct m0_layout_domain *domain,
+			 uint32_t sublayouts_nr,
+			 uint32_t min_extents_nr,
+			 m0_bindex_t min_start_offset,
+			 m0_bindex_t approximate_end_address,
+			 bool if_contiguous_extents,
+			 bool failure_test);
+int test_decode_composite(uint64_t lid,
+			  struct m0_layout_domain *domain,
+			  uint32_t sublayouts_nr,
+			  uint32_t min_extents_nr,
+			  m0_bindex_t min_start_offset,
+			  m0_bindex_t approximate_end_offset,
+			  bool if_contiguous_extents,
+			  bool failure_test);
+int test_encode_composite(uint64_t lid,
+			  struct m0_layout_domain *domain,
+			  uint32_t sublayouts_nr,
+			  uint32_t min_extents_nr,
+			  m0_bindex_t min_start_offset,
+			  m0_bindex_t approximate_end_offset,
+			  bool if_contiguous_extents,
+			  bool failure_test);
+int test_decode_encode_composite(uint64_t lid,
+				 struct m0_layout_domain *domain,
+				 uint32_t sublayouts_nr,
+				 uint32_t min_extents_nr,
+				 m0_bindex_t min_start_offset,
+				 m0_bindex_t approximate_end_offset,
+				 bool if_contiguous_extents);
+int test_encode_decode_composite(uint64_t lid,
+				 struct m0_layout_domain *domain,
+				 uint32_t sublayouts_nr,
+				 uint32_t min_extents_nr,
+				 m0_bindex_t min_start_offset,
+				 m0_bindex_t approximate_end_offset,
+				 bool if_contiguous_extents);
+int test_composite_instance_obj(uint64_t lid,
+				struct m0_layout_domain *domain,
+				bool failure_test);
+int test_lookup_composite(uint64_t lid,
+			  struct m0_layout_domain *domain,
+			  uint32_t layers_nr,
+			  uint32_t min_extents_nr,
+			  m0_bindex_t min_start_offset,
+			  m0_bindex_t approximate_end_offset,
+			  bool if_contiguous_extents,
+			  bool existing_test,
+			  bool failure_test);
+int test_add_composite(uint64_t lid,
+		       struct m0_layout_domain *domain,
+		       uint32_t sublayouts_nr,
+		       uint32_t min_extents_nr,
+		       m0_bindex_t min_start_offset,
+		       m0_bindex_t approximate_end_offset,
+		       bool if_contiguous_extents,
+		       bool layout_destroy, struct m0_layout **l_obj,
+		       bool duplicate_test,
+		       bool failure_test,
+		       bool layer_add_failure_test);
+int test_delete_composite(uint64_t lid,
+			  struct m0_layout_domain *domain,
+			  uint32_t sublayouts_nr,
+			  uint32_t min_extents_nr,
+			  m0_bindex_t min_start_offset,
+			  m0_bindex_t approximate_end_offset,
+			  bool if_contiguous_extents,
+			  bool failure_test);
+int test_ext_lookup_composite(uint64_t lid,
+			      struct m0_layout_domain *domain,
+			      uint32_t layers_nr,
+			      uint32_t min_extents_nr,
+			      m0_bindex_t min_start_offset,
+			      m0_bindex_t approximate_end_offset,
+			      bool if_contiguous_extents,
+			      uint32_t kind_of_extent_to_lookup,
+			      bool failure_test);
+int test_ext_add_composite(uint64_t lid,
+			   struct m0_layout_domain *domain,
+			   uint32_t layers_nr,
+			   uint32_t min_extents_nr,
+			   m0_bindex_t min_start_offset,
+			   m0_bindex_t approximate_end_offset,
+			   bool if_contiguous_extents,
+			   uint32_t kind_of_extent_to_add,
+			   bool failure_test);
+int test_ext_state_update_composite(uint64_t lid,
+				    struct m0_layout_domain *domain,
+				    uint32_t layers_nr,
+				    uint32_t min_extents_nr,
+				    m0_bindex_t min_start_offset,
+				    m0_bindex_t approximate_end_offset,
+				    bool if_contiguous_extents,
+				    uint32_t kind_of_extent_to_operate,
+				    bool failure_test);
+int test_ext_delete_composite(uint64_t lid,
+			      struct m0_layout_domain *domain,
+			      uint32_t layers_nr,
+			      uint32_t min_extents_nr,
+			      m0_bindex_t min_start_offset,
+			      m0_bindex_t approximate_end_offset,
+			      bool if_contiguous_extents,
+			      uint32_t kind_of_extent_to_operate,
+			      bool failure_test);
+
+#endif /* __MERO_LAYOUT_UT_COMPOSITE_H__ */
+
+/*
+ *  Local variables:
+ *  c-indentation-style: "K&R"
+ *  c-basic-offset: 8
+ *  tab-width: 8
+ *  fill-column: 80
+ *  scroll-step: 1
+ *  End:
+ */
diff --git a/layout/ut/layout.c b/layout/ut/layout.c
index 9da094f..569e268 100644
--- a/layout/ut/layout.c
+++ b/layout/ut/layout.c
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
@@ -38,6 +38,7 @@
 
 #include "layout/ut/layout.h"
 #include "layout/ut/pdclust.h"
+#include "layout/ut/composite.h"
 
 static struct m0_dbenv         dbenv;
 static const char              db_name[] = "ut-layout";
diff --git a/layout/ut/layout.h b/layout/ut/layout.h
index 4eebec5..ccfa383 100644
--- a/layout/ut/layout.h
+++ b/layout/ut/layout.h
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
@@ -42,20 +42,7 @@ enum {
 	CONTIGUOUS_EXTENTS       = true  /* For extents of a sub-layout */
 };
 
-//todo Move the following to composite.h
-/*
- * Kind of the extent that 'is to be looked up from the extent list' or 'is to
- * be added to extent list' for a particular layer from a particular composite
- * layout.
- */
-enum {
-	NON_EXISTING,
-	EXACT_EXISTING,
-	OVERLAPPING_LEFT,
-	OVERLAPPING_RIGHT,
-	OVERLAPPING_COMPLETE
-};
-
+//todo Take out the following
 extern struct m0_layout_type m0_pdclust_layout_type;
 extern struct m0_layout_type m0_composite_layout_type;
 extern struct m0_layout_enum_type m0_list_enum_type;
@@ -73,129 +60,21 @@ void layout_compare(const struct m0_layout *l1,
 		    bool l2_ref_elevated);
 void layout_copy(const struct m0_layout *l_src,
 		 struct m0_layout *l_dest);
-
 void generic_buf_build(uint32_t lt_id, struct m0_bufvec_cursor *dcur);
 struct m0_layout *list_lookup(uint64_t lid);
 void enum_op_verify(struct m0_layout *l, uint64_t lid,
 		    uint32_t enum_id, uint32_t nr);
-bool ghost_create(void *d);
+void pair_set(struct m0_db_pair *pair, uint64_t *lid,
+              void *area, m0_bcount_t num_bytes);
 
 struct ghost_data {
 	uint64_t                 lid;
 	struct m0_layout        *l;
 	struct m0_bufvec_cursor *cur;
 };
+bool ghost_create(void *d);
 
-int test_build_composite(uint64_t lid,
-			 struct m0_layout_domain *domain,
-			 uint32_t sublayouts_nr,
-			 uint32_t min_extents_nr,
-			 m0_bindex_t min_start_offset,
-			 m0_bindex_t approximate_end_address,
-			 bool if_contiguous_extents,
-			 bool failure_test);
-int test_decode_composite(uint64_t lid,
-			  struct m0_layout_domain *domain,
-			  uint32_t sublayouts_nr,
-			  uint32_t min_extents_nr,
-			  m0_bindex_t min_start_offset,
-			  m0_bindex_t approximate_end_offset,
-			  bool if_contiguous_extents,
-			  bool failure_test);
-int test_encode_composite(uint64_t lid,
-			  struct m0_layout_domain *domain,
-			  uint32_t sublayouts_nr,
-			  uint32_t min_extents_nr,
-			  m0_bindex_t min_start_offset,
-			  m0_bindex_t approximate_end_offset,
-			  bool if_contiguous_extents,
-			  bool failure_test);
-int test_decode_encode_composite(uint64_t lid,
-				 struct m0_layout_domain *domain,
-				 uint32_t sublayouts_nr,
-				 uint32_t min_extents_nr,
-				 m0_bindex_t min_start_offset,
-				 m0_bindex_t approximate_end_offset,
-				 bool if_contiguous_extents);
-int test_encode_decode_composite(uint64_t lid,
-				 struct m0_layout_domain *domain,
-				 uint32_t sublayouts_nr,
-				 uint32_t min_extents_nr,
-				 m0_bindex_t min_start_offset,
-				 m0_bindex_t approximate_end_offset,
-				 bool if_contiguous_extents);
-int test_composite_instance_obj(uint64_t lid,
-				struct m0_layout_domain *domain,
-				bool failure_test);
-void pair_set(struct m0_db_pair *pair, uint64_t *lid,
-              void *area, m0_bcount_t num_bytes);
-int test_lookup_composite(uint64_t lid,
-			  struct m0_layout_domain *domain,
-			  uint32_t layers_nr,
-			  uint32_t min_extents_nr,
-			  m0_bindex_t min_start_offset,
-			  m0_bindex_t approximate_end_offset,
-			  bool if_contiguous_extents,
-			  bool existing_test,
-			  bool failure_test);
-int test_add_composite(uint64_t lid,
-		       struct m0_layout_domain *domain,
-		       uint32_t sublayouts_nr,
-		       uint32_t min_extents_nr,
-		       m0_bindex_t min_start_offset,
-		       m0_bindex_t approximate_end_offset,
-		       bool if_contiguous_extents,
-		       bool layout_destroy, struct m0_layout **l_obj,
-		       bool duplicate_test,
-		       bool failure_test,
-		       bool layer_add_failure_test);
-int test_delete_composite(uint64_t lid,
-			  struct m0_layout_domain *domain,
-			  uint32_t sublayouts_nr,
-			  uint32_t min_extents_nr,
-			  m0_bindex_t min_start_offset,
-			  m0_bindex_t approximate_end_offset,
-			  bool if_contiguous_extents,
-			  bool failure_test);
-int test_ext_lookup_composite(uint64_t lid,
-			      struct m0_layout_domain *domain,
-			      uint32_t layers_nr,
-			      uint32_t min_extents_nr,
-			      m0_bindex_t min_start_offset,
-			      m0_bindex_t approximate_end_offset,
-			      bool if_contiguous_extents,
-			      uint32_t kind_of_extent_to_lookup,
-			      bool failure_test);
-int test_ext_add_composite(uint64_t lid,
-			   struct m0_layout_domain *domain,
-			   uint32_t layers_nr,
-			   uint32_t min_extents_nr,
-			   m0_bindex_t min_start_offset,
-			   m0_bindex_t approximate_end_offset,
-			   bool if_contiguous_extents,
-			   uint32_t kind_of_extent_to_add,
-			   bool failure_test);
-int test_ext_state_update_composite(uint64_t lid,
-				    struct m0_layout_domain *domain,
-				    uint32_t layers_nr,
-				    uint32_t min_extents_nr,
-				    m0_bindex_t min_start_offset,
-				    m0_bindex_t approximate_end_offset,
-				    bool if_contiguous_extents,
-				    uint32_t kind_of_extent_to_operate,
-				    bool failure_test);
-int test_ext_delete_composite(uint64_t lid,
-			      struct m0_layout_domain *domain,
-			      uint32_t layers_nr,
-			      uint32_t min_extents_nr,
-			      m0_bindex_t min_start_offset,
-			      m0_bindex_t approximate_end_offset,
-			      bool if_contiguous_extents,
-			      uint32_t kind_of_extent_to_operate,
-			      bool failure_test);
-
-/* __MERO_LAYOUT_LAYOUT_H__ */
-#endif
+#endif /* __MERO_LAYOUT_UT_LAYOUT_H__ */
 
 /*
  *  Local variables:
diff --git a/layout/ut/ldemo_internal.c b/layout/ut/ldemo_internal.c
index e57c047..846878e 100644
--- a/layout/ut/ldemo_internal.c
+++ b/layout/ut/ldemo_internal.c
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/ut/pdclust.c b/layout/ut/pdclust.c
index f614e74..20f62db 100644
--- a/layout/ut/pdclust.c
+++ b/layout/ut/pdclust.c
@@ -1,6 +1,6 @@
 /* -*- C -*- */
 /*
- * COPYRIGHT 2012 XYRATEX TECHNOLOGY LIMITED
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
  *
  * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
  * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
diff --git a/layout/ut/pdclust.h b/layout/ut/pdclust.h
index 4caa576..3cc02d2 100644
--- a/layout/ut/pdclust.h
+++ b/layout/ut/pdclust.h
@@ -44,7 +44,6 @@ void pdclust_layout_verify(struct m0_layout *l, uint64_t lid, uint32_t enum_id,
 			   struct m0_uint128 *seed,
 			   uint32_t A, uint32_t B,
 			   bool if_user_count_incremented);
-			   
 
 int test_build_pdclust(uint64_t lid, struct m0_layout_domain *domain,
 		       uint32_t enum_id, uint32_t inline_test,
@@ -89,8 +88,7 @@ int test_delete_pdclust(uint64_t lid, struct m0_layout_domain *domain,
 			bool existing_test,
 			uint32_t failure_test);
 
-/* __MERO_LAYOUT_PDCLUST_H__ */
-#endif
+#endif /* __MERO_LAYOUT_UT_PDCLUST_H__ */
 
 /*
  *  Local variables:
-- 
1.8.3.2

