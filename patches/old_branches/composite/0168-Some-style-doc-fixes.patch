From d51d13be87173715852806dd0dd3143edd9f03ee Mon Sep 17 00:00:00 2001
From: "trupti.patil" <trupti_patil@xyratex.com>
Date: Wed, 7 Aug 2013 14:54:18 +0530
Subject: [PATCH 168/172] Some style/doc fixes

---
 layout/composite.c | 14 +++++++-------
 layout/layout.h    |  4 ++--
 layout/layout_db.c |  5 +++--
 layout/list_enum.c |  5 ++---
 4 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/layout/composite.c b/layout/composite.c
index 7ed44ff..fb5ecbb 100644
--- a/layout/composite.c
+++ b/layout/composite.c
@@ -1914,7 +1914,7 @@ err2_injected:
 
 /**
  * This is a check for an error if a layer that is asked to be deleted from the
- * DB has some valid extents associated with.
+ * DB has some valid extents associated with it.
  */
 static int layer_indb_delete_verify(struct m0_composite_layout *cl,
 				    struct m0_emap *emap,
@@ -2103,10 +2103,10 @@ out:
  *
  * Required in case of m0_layout_update() operation.
  */
-static int old_layers_nr_n_sl_id_list_read(struct m0_composite_layout *cl,
-					   struct m0_db_tx * tx,
-					   uint32_t *layers_nr,
-					   uint64_t **sl_id_list)
+static int old_sublayout_ids_read(struct m0_composite_layout *cl,
+				  struct m0_db_tx * tx,
+				  uint32_t *layers_nr,
+				  uint64_t **sl_id_list)
 {
 	struct m0_layout        *l = &cl->cl_base;
 	struct m0_db_pair        pair;
@@ -2178,8 +2178,8 @@ static int layers_indb_delete(struct m0_composite_layout *cl,
 		 (unsigned long)cl->cl_layers_nr);
 	emap = emap_from_cl(cl);
 	if (in_update_path) {
-		rc = old_layers_nr_n_sl_id_list_read(cl, tx, &old_layers_nr,
-						     &old_sl_id_list);
+		rc = old_sublayout_ids_read(cl, tx, &old_layers_nr,
+					    &old_sl_id_list);
 		if (rc == 0) {
 			for (i = old_layers_nr - 1; i >= 0; --i) {
 				rc = layer_indb_delete(cl, i, old_sl_id_list[i],
diff --git a/layout/layout.h b/layout/layout.h
index 9f08c74..9cc564f 100644
--- a/layout/layout.h
+++ b/layout/layout.h
@@ -534,10 +534,10 @@ struct m0_layout_enum_ops {
 
 	/**
 	 * Continues to use the in-memory layout object, specifically the enum
-	 * part of it and either stores it in the Layout DB.
+	 * part of it and stores it in the Layout DB.
 	 *
 	 * @param op This enum parameter indicates what is the DB operation to
-	 *           be performed on the layout record and it could be one of
+	 *           be performed on the layout record which could be one of
 	 *           ADD/UPDATE/DELETE.
 	 *
 	 * @pre M0_IN(op, (M0_LXO_DB_ADD, M0_LXO_DB_UPDATE, M0_LXO_DB_DELETE))
diff --git a/layout/layout_db.c b/layout/layout_db.c
index 4ff4341..0ce99b2 100644
--- a/layout/layout_db.c
+++ b/layout/layout_db.c
@@ -178,8 +178,9 @@
  *   entries inline into the layouts table itself.
  * - In case of COMPOSITE layout, 'number of layers' and 'sublayout id
  *   associated with each layer' are stored in the layouts table.
- * - It is possible that some layouts do not need to store any layout type or
- *   layout enum type specific data in the layouts table.
+ * - It is possible that some layout types or enum types (to be added in the
+ *   future) may not need to store any layout type or layout enum type specific
+ *   data in the layouts table.
  *
  * @subsection Layout-DB-lspec-schema-cob_lists Table cob_lists
  * @verbatim
diff --git a/layout/list_enum.c b/layout/list_enum.c
index bbb09b9..d32277b 100644
--- a/layout/list_enum.c
+++ b/layout/list_enum.c
@@ -647,9 +647,8 @@ static int list_encode(const struct m0_layout_enum *e,
 	 * update operation.
 	 */
 	if (list_enum->lle_nr > num_inline && op != M0_LXO_DB_UPDATE) {
-		M0_LOG(M0_DEBUG,
-		       "lid %llu, nr %lu, Start writing noninline entries",
-		       (unsigned long long)lid,
+		M0_LOG(M0_DEBUG, "lid %llu, nr %lu, Start writing noninline "
+		       "entries", (unsigned long long)lid,
 		       (unsigned long)list_enum->lle_nr);
 		rc = noninline_write(e, tx, op, i);
 		if (rc != 0)
-- 
1.8.3.2

