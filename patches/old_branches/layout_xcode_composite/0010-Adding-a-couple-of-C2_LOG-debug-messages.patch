From adf156ac8cdce2a04f399a31dd281a80820d4fc1 Mon Sep 17 00:00:00 2001
From: "trupti.patil" <trupti_patil@xyratex.com>
Date: Fri, 26 Oct 2012 17:36:03 +0530
Subject: [PATCH 010/157] Adding a couple of C2_LOG debug messages

---
 layout/composite.c | 10 ++++++++++
 layout/composite.h | 16 ++++++++++++++++
 layout/ut/layout.c | 12 +++++++-----
 3 files changed, 33 insertions(+), 5 deletions(-)

diff --git a/layout/composite.c b/layout/composite.c
index 3277adf..30737bb 100644
--- a/layout/composite.c
+++ b/layout/composite.c
@@ -512,13 +512,23 @@ static int sublayouts_write(struct c2_layout *l,
 
 	total = 0;
 	sublayouts_nr = 0;
+	C2_LOG(C2_DEBUG, "Composite lid %llu, sub-layouts: ",
+	       (unsigned long long)l->l_id);
+
 	c2_tl_for(c2_sub_layout, cl->cl_sub_layouts, sl) {
+		C2_LOG(C2_DEBUG, "Sub-layout[%lu]: lid %llu, e_start %llu, "
+		       "e_end %llu", (unsigned long)sublayouts_nr,
+		       (unsigned long long)sl->csl_l->l_id,
+		       (unsigned long long)sl->csl_ext.e_start,
+		       (unsigned long long)sl->csl_ext.e_end);
+
 		len[sublayouts_nr] = sl->csl_ext.e_end -
 				     sl->csl_ext.e_start + 1;
 		val[sublayouts_nr] = sl->csl_l->l_id;
 		total = total + len[sublayouts_nr];
 		++sublayouts_nr;
 	} c2_tl_endfor;
+
 	C2_ASSERT(sublayouts_nr == cl->cl_nr);
 	C2_ASSERT(total == seg_len);
 
diff --git a/layout/composite.h b/layout/composite.h
index 5831969..387aa25 100644
--- a/layout/composite.h
+++ b/layout/composite.h
@@ -86,6 +86,22 @@ struct c2_composite_sub_layout {
 
 C2_TL_DECLARE(c2_sub_layout, extern, struct c2_composite_sub_layout);
 
+/**
+ * Allocates and builds a layout object with the composite layout type,
+ * by setting its intial ref count to 1.
+ * @post ergo(rc == 0, pdclust_invariant(*out))
+ * @post ergo(rc == 0, c2_ref_read(l->l_ref) == 1)
+ *
+ * @param sub_layouts This is a list of sublayouts spanning over namespace
+ * of all the 64-bit unsigned numbers from 0 to C2_BINDEX_MAX.
+ *
+ * @note The layout object built by this API is to be finalised by releasing
+ * 'the reference on it that has been held during its creation'.
+ * @see c2_layout_put()
+ *
+ * In short:
+ * Dual to c2_layout_put() when it is the last reference being released.
+ */
 int c2_composite_build(struct c2_layout_domain *dom,
 		       uint64_t lid,
 		       struct c2_tl *sub_layouts,
diff --git a/layout/ut/layout.c b/layout/ut/layout.c
index ff5f98b..15e214d 100644
--- a/layout/ut/layout.c
+++ b/layout/ut/layout.c
@@ -826,11 +826,13 @@ static void sub_layouts_build(uint64_t composite_lid,
 	C2_UT_ASSERT(c2_sub_layout_tlist_is_empty(*sub_layout_list));
 
 	/*
-	 * The name-space of an extent map is a set of all the 64-bit
-	 * unsigned numbers from 0 to C2_BINDEX_MAX. Let's spread that
+	 * The name-space of an extent map is 'a set of all the 64-bit
+	 * unsigned numbers from 0 to C2_BINDEX_MAX'. Let's spread that
 	 * namespace over the number of sub-layouts.
 	 */
-	/* todo Check why the last seg shows the first sublayout-id n so on. */
+	/* todo Check why the last seg shows the first sublayout-id n so on,
+	 * in the layout DB.
+	 */
 	c2_uint128_init(&seed, "sub_layouts_buil");
 	delta = C2_BINDEX_MAX / num_sublayouts;
 	where = 0;
@@ -873,8 +875,8 @@ static void sub_layouts_build(uint64_t composite_lid,
 	}
 
 	/*
-	 * C2_BINDEX_MAX is not necessarily multiple delta. Hence adjust the
-	 * csl_ext.e_end for the last sub-layout.
+	 * C2_BINDEX_MAX is not necessarily multiple of delta. Hence, adjust
+	 * the end offset for the last sub-layout.
 	 */
 	sl->csl_ext.e_end = C2_BINDEX_MAX;
 	total = total - delta + sl->csl_ext.e_end - sl->csl_ext.e_start;
-- 
1.8.3.2

