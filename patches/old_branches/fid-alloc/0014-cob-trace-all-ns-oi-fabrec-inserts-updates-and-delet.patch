From 583ddbe5ea0ac104d102941737f7df081b652f9f Mon Sep 17 00:00:00 2001
From: Alexander Gattin <alexander_gattin@xyratex.com>
Date: Sun, 31 Mar 2013 23:38:33 +0300
Subject: [PATCH 14/15] cob: trace all ns/oi/fabrec inserts, updates and
 deletes

* replace M0_COB_NSKEY_LOG macro with COB_CTRACE_NSKEY and
  remove M0_COB_KEY_LOG macro
* add COB_EXPAND_FID, COB_EXPAND_FIDNAM, COB_EXPAND_FIDLNK,
  COB_EXPAND_NSKEY, COB_EXPAND_OIKEY and COB_EXPAND_NSREC tracing
  helper macros
* undefine all tracing helper macros at the enf of the cob/cob.c
* insert tracing after all table_insert(), table_update() and
  table_delete() calls for NS, OI and FAB tables
---
 cob/cob.c | 88 +++++++++++++++++++++++++++++++++++++++------------------------
 1 file changed, 55 insertions(+), 33 deletions(-)

diff --git a/cob/cob.c b/cob/cob.c
index 8e83599..d64c627 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -31,14 +31,22 @@
 #define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_COB
 #include "lib/trace.h"        /* M0_LOG and M0_ENTRY */
 
-#define M0_COB_KEY_LOG(logger, fmt, key, fid_member, str_member, ...)      \
-	M0_ ## logger (fmt, (long)(key)->fid_member.f_container,           \
-		       (long)(key)->fid_member.f_key,                      \
-		       m0_bitstring_len_get(&((key)->str_member)),         \
-		       (char *)m0_bitstring_buf_get(&((key)->str_member)), \
-		       ## __VA_ARGS__)
-#define M0_COB_NSKEY_LOG(logger, fmt, key, ...)\
-	M0_COB_KEY_LOG(logger, fmt, key, cnk_pfid, cnk_name, ## __VA_ARGS__)
+/* COB tracing helper macros. */
+#define COB_EXPAND_FID(obj, fid_member)                                \
+	(long long unsigned)(obj)->fid_member.f_container,             \
+	(long long unsigned)(obj)->fid_member.f_key
+#define COB_EXPAND_FIDNAM(obj, fid_member, str_member)                 \
+	COB_EXPAND_FID(obj, fid_member),                               \
+	m0_bitstring_len_get(&((obj)->str_member)),                    \
+	(char *)m0_bitstring_buf_get(&((obj)->str_member))
+#define COB_EXPAND_FIDLNK(obj, fid_member, linkno_member)              \
+	COB_EXPAND_FID(obj, fid_member),                               \
+	(long long unsigned)(obj)->linkno_member
+#define COB_EXPAND_NSKEY(k) COB_EXPAND_FIDNAM(k, cnk_pfid, cnk_name)
+#define COB_EXPAND_OIKEY(k) COB_EXPAND_FIDLNK(k, cok_fid, cok_linkno)
+#define COB_EXPAND_NSREC(k) COB_EXPAND_FIDLNK(k, cnr_fid, cnr_linkno)
+#define COB_CTRACE_NSKEY(ctracer, fmt, k, ...)                         \
+	M0_ ## ctracer (fmt, COB_EXPAND_NSKEY(k), ## __VA_ARGS__)
 
 #include "lib/misc.h"   /* M0_SET0 */
 #include "lib/cdefs.h"
@@ -1013,22 +1021,22 @@ M0_INTERNAL int m0_cob_iterator_init(struct m0_cob *cob,
 M0_INTERNAL int m0_cob_iterator_get(struct m0_cob_iterator *it)
 {
 	int rc;
-	M0_COB_NSKEY_LOG(ENTRY, "[%lx:%lx]/%.*s", it->ci_key);
+	COB_CTRACE_NSKEY(ENTRY, "[%llx:%llx]/%.*s", it->ci_key);
 	rc = m0_db_cursor_get(&it->ci_cursor, &it->ci_pair);
 	if (rc == 0 && !m0_fid_eq(&it->ci_key->cnk_pfid, it->ci_cob->co_fid))
 		rc = -ENOENT;
-	M0_COB_NSKEY_LOG(LEAVE, "[%lx:%lx]/%.*s rc: %d", it->ci_key, rc);
+	COB_CTRACE_NSKEY(LEAVE, "[%llx:%llx]/%.*s, rc=%d", it->ci_key, rc);
 	return rc;
 }
 
 M0_INTERNAL int m0_cob_iterator_next(struct m0_cob_iterator *it)
 {
 	int rc;
-	M0_COB_NSKEY_LOG(ENTRY, "[%lx:%lx]/%.*s", it->ci_key);
+	COB_CTRACE_NSKEY(ENTRY, "[%llx:%llx]/%.*s", it->ci_key);
 	rc = m0_db_cursor_next(&it->ci_cursor, &it->ci_pair);
 	if (rc == 0 && !m0_fid_eq(&it->ci_key->cnk_pfid, it->ci_cob->co_fid))
 		rc = -ENOENT;
-	M0_COB_NSKEY_LOG(LEAVE, "[%lx:%lx]/%.*s rc: %d", it->ci_key, rc);
+	COB_CTRACE_NSKEY(LEAVE, "[%llx:%llx]/%.*s, rc=%d", it->ci_key, rc);
 	return rc;
 }
 
@@ -1255,11 +1263,10 @@ M0_INTERNAL int m0_cob_create(struct m0_cob *cob,
 			 m0_cob_fabrec_size(cob->co_fabrec));
 	rc = m0_table_insert(tx, &pair);
 	M0_LOG(M0_DEBUG, "insert fabrec [%llx:%llx]->v%llu.%llu, lnk=%.*s,"
-	       " rc=%d", (long long unsigned)fabkey.cfb_fid.f_container,
-	       (long long unsigned)fabkey.cfb_fid.f_key,
-	       (long long unsigned)cob->co_fabrec->cfb_version.vn_lsn,
-	       (long long unsigned)cob->co_fabrec->cfb_version.vn_vc,
-	       (int)fabrec->cfb_linklen, (char *)fabrec->cfb_link, rc);
+	       " rc=%d", COB_EXPAND_FID(&fabkey, cfb_fid),
+	       (long long unsigned)fabrec->cfb_version.vn_lsn,
+	       (long long unsigned)fabrec->cfb_version.vn_vc,
+	       fabrec->cfb_linklen, (char *)fabrec->cfb_link, rc);
 	m0_db_pair_release(&pair);
 	m0_db_pair_fini(&pair);
 	if (rc != 0)
@@ -1336,6 +1343,8 @@ M0_INTERNAL int m0_cob_delete(struct m0_cob *cob, struct m0_db_tx *tx)
 		 * no harm.
 		 */
 		m0_table_delete(tx, &pair);
+		M0_LOG(M0_DEBUG, "delete fabrec [%llx:%llx]",
+		       COB_EXPAND_FID(&fabkey, cfb_fid));
 		m0_db_pair_fini(&pair);
 
 		/*
@@ -1394,6 +1403,9 @@ M0_INTERNAL int m0_cob_update(struct m0_cob *cob,
 				 m0_cob_nskey_size(cob->co_nskey),
 				 &cob->co_nsrec, sizeof cob->co_nsrec);
 		rc = m0_table_update(tx, &pair);
+		M0_LOG(M0_DEBUG, "update nsrec [%llx:%llx]#%llu"
+		       "<-[%llx:%llx]/%.*s, rc=%d", COB_EXPAND_NSREC(nsrec),
+		       COB_EXPAND_NSKEY(cob->co_nskey), rc);
 		m0_db_pair_release(&pair);
 		m0_db_pair_fini(&pair);
 		if (rc != 0)
@@ -1413,6 +1425,11 @@ M0_INTERNAL int m0_cob_update(struct m0_cob *cob,
 				 &fabkey, sizeof fabkey, cob->co_fabrec,
 				 m0_cob_fabrec_size(cob->co_fabrec));
 		rc = m0_table_update(tx, &pair);
+		M0_LOG(M0_DEBUG, "update fabrec [%llx:%llx]->v%llu.%llu, "
+		       "lnk=%.*s, rc=%d", COB_EXPAND_FID(&fabkey, cfb_fid),
+		       (long long unsigned)fabrec->cfb_version.vn_lsn,
+		       (long long unsigned)fabrec->cfb_version.vn_vc,
+		       fabrec->cfb_linklen, (char *)fabrec->cfb_link, rc);
 		m0_db_pair_release(&pair);
 		m0_db_pair_fini(&pair);
 	}
@@ -1465,14 +1482,8 @@ M0_INTERNAL int m0_cob_name_add(struct m0_cob *cob,
 			 m0_cob_nskey_size(nskey));
 
 	rc = m0_table_insert(tx, &pair);
-	M0_LOG(M0_DEBUG, "insert oirec [%llx:%llx]#%llu<-[%llx:%llx]/%.*s,"
-	       " rc=%d", (long long unsigned)oikey.cok_fid.f_container,
-	       (long long unsigned)oikey.cok_fid.f_key,
-	       (long long unsigned)oikey.cok_linkno,
-	       (long long unsigned)nskey->cnk_pfid.f_container,
-	       (long long unsigned)nskey->cnk_pfid.f_key,
-	       (int)m0_bitstring_len_get(&nskey->cnk_name),
-	       (char *)m0_bitstring_buf_get(&nskey->cnk_name), rc);
+	M0_LOG(M0_DEBUG, "insert oirec [%llx:%llx]#%llu->[%llx:%llx]/%.*s, "
+	       "rc=%d", COB_EXPAND_OIKEY(&oikey), COB_EXPAND_NSKEY(nskey), rc);
 	m0_db_pair_release(&pair);
 	m0_db_pair_fini(&pair);
 	if (rc != 0)
@@ -1483,14 +1494,8 @@ M0_INTERNAL int m0_cob_name_add(struct m0_cob *cob,
 			 nsrec, sizeof *nsrec);
 
 	rc = m0_table_insert(tx, &pair);
-	M0_LOG(M0_DEBUG, "insert nsrec [%llx:%llx]#%llu->[%llx:%llx]/%.*s,"
-	       " rc=%d", (long long unsigned)nsrec->cnr_fid.f_container,
-	       (long long unsigned)nsrec->cnr_fid.f_key,
-	       (long long unsigned)nsrec->cnr_linkno,
-	       (long long unsigned)nskey->cnk_pfid.f_container,
-	       (long long unsigned)nskey->cnk_pfid.f_key,
-	       (int)m0_bitstring_len_get(&nskey->cnk_name),
-	       (char *)m0_bitstring_buf_get(&nskey->cnk_name), rc);
+	M0_LOG(M0_DEBUG, "insert nsrec [%llx:%llx]#%llu<-[%llx:%llx]/%.*s, "
+	       "rc=%d", COB_EXPAND_NSREC(nsrec), COB_EXPAND_NSKEY(nskey), rc);
 	m0_db_pair_release(&pair);
 	m0_db_pair_fini(&pair);
 out:
@@ -1523,6 +1528,8 @@ M0_INTERNAL int m0_cob_name_del(struct m0_cob *cob,
 	}
 
 	rc = m0_table_delete(tx, &pair);
+	M0_LOG(M0_DEBUG, "delete nsrec <-[%llx:%llx]/%.*s, rc=%d",
+	       COB_EXPAND_NSKEY(nskey), rc);
 	m0_db_pair_fini(&pair);
 	if (rc != 0)
 		goto out;
@@ -1534,6 +1541,8 @@ M0_INTERNAL int m0_cob_name_del(struct m0_cob *cob,
 	m0_db_pair_setup(&pair, &cob->co_dom->cd_object_index,
 			 &oikey, sizeof oikey, NULL, 0);
 	rc = m0_table_delete(tx, &pair);
+	M0_LOG(M0_DEBUG, "delete oirec [%llx:%llx]#%llu, rc=%d",
+	       COB_EXPAND_OIKEY(&oikey), rc);
 	m0_db_pair_fini(&pair);
 
 out:
@@ -1570,6 +1579,8 @@ M0_INTERNAL int m0_cob_name_update(struct m0_cob *cob,
 			 tgtkey, m0_cob_nskey_size(tgtkey),
 			 &nsrec, sizeof nsrec);
 	rc = m0_table_insert(tx, &pair);
+	M0_LOG(M0_DEBUG, "insert nsrec [%llx:%llx]#%llu<-[%llx:%llx]/%.*s, "
+	       "rc=%d", COB_EXPAND_NSREC(&nsrec), COB_EXPAND_NSKEY(tgtkey), rc);
 	m0_db_pair_release(&pair);
 	m0_db_pair_fini(&pair);
 	if (rc != 0)
@@ -1583,6 +1594,8 @@ M0_INTERNAL int m0_cob_name_update(struct m0_cob *cob,
 			 srckey, m0_cob_nskey_size(srckey),
 			 NULL, 0);
 	rc = m0_table_delete(tx, &pair);
+	M0_LOG(M0_DEBUG, "delete nsrec <-[%llx:%llx]/%.*s, rc=%d",
+	       COB_EXPAND_NSKEY(srckey), rc);
 	m0_db_pair_release(&pair);
 	m0_db_pair_fini(&pair);
 	if (rc != 0)
@@ -1594,6 +1607,8 @@ M0_INTERNAL int m0_cob_name_update(struct m0_cob *cob,
 			 &oikey, sizeof oikey, tgtkey,
 			 m0_cob_nskey_size(tgtkey));
 	rc = m0_table_update(tx, &pair);
+	M0_LOG(M0_DEBUG, "update oirec [%llx:%llx]#%llu->[%llx:%llx]/%.*s, "
+	       "rc=%d", COB_EXPAND_OIKEY(&oikey), COB_EXPAND_NSKEY(tgtkey), rc);
 	m0_db_pair_release(&pair);
 	m0_db_pair_fini(&pair);
 	if (rc != 0)
@@ -1745,6 +1760,13 @@ M0_INTERNAL void m0_cob_ea_iterator_fini(struct m0_cob_ea_iterator *it)
 
 /** @} end group cob */
 
+#undef COB_CTRACE_NSKEY
+#undef COB_EXPAND_NSREC
+#undef COB_EXPAND_OIKEY
+#undef COB_EXPAND_NSKEY
+#undef COB_EXPAND_FIDLNK
+#undef COB_EXPAND_FIDNAM
+#undef COB_EXPAND_FID
 #undef M0_TRACE_SUBSYSTEM
 
 /*
-- 
1.8.3.2

