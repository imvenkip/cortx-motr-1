From 8ecc7791beeb350afd735c11dd05cf2ba58ddea1 Mon Sep 17 00:00:00 2001
From: Sachin Patil <sachin_patil@xyratex.com>
Date: Tue, 29 Jan 2013 06:26:29 -0800
Subject: [PATCH 39/94] m0_be_domain_lookup now returns pointer to the segment
 in active segment list.

---
 be/be.h     |  2 +-
 be/domain.c |  8 ++++----
 be/ut/be.c  | 20 +++++++++++---------
 3 files changed, 16 insertions(+), 14 deletions(-)

diff --git a/be/be.h b/be/be.h
index 444f03f..9d36185 100644
--- a/be/be.h
+++ b/be/be.h
@@ -232,7 +232,7 @@ M0_INTERNAL void m0_be_domain_create(struct m0_be_domain *dom,
  *                                        M0_BESEG_FAILED))
  */
 M0_INTERNAL int m0_be_domain_lookup(struct m0_be_domain *dom, const char *name,
-                                    struct m0_be_seg *out);
+                                    struct m0_be_seg **out);
 
 /**
  * Loads/Restores named segment in memory on recovery of kv-store.
diff --git a/be/domain.c b/be/domain.c
index 2ba47fa..93e7a32 100644
--- a/be/domain.c
+++ b/be/domain.c
@@ -92,7 +92,7 @@ M0_INTERNAL void m0_be_domain_init(struct m0_be_domain *dom,
 }
 
 M0_INTERNAL int m0_be_domain_lookup(struct m0_be_domain *dom, const char *name,
-                                     struct m0_be_seg *out)
+                                     struct m0_be_seg **out)
 {
         struct m0_be_seg *seg_it;
         int found = -1;
@@ -103,7 +103,7 @@ M0_INTERNAL int m0_be_domain_lookup(struct m0_be_domain *dom, const char *name,
 
         m0_tlist_for(&m0_be_seg_tl, &dom->bd_seg, seg_it) {
                 if (strcmp(name, seg_it->bs_impl.segment_name) == 0) {
-                        memcpy(out, seg_it, sizeof(struct m0_be_seg));
+                        *out = seg_it;
                         found = 0;
                         break;
                 }
@@ -117,8 +117,8 @@ M0_INTERNAL int m0_be_domain_lookup(struct m0_be_domain *dom, const char *name,
                  */
         }
 
-        if ((found != 0) && (m0_be_seg_state_get(out) == M0_BESEG_CLOSED)) {
-                m0_be_seg_open(out);
+        if ((found == 0) && (m0_be_seg_state_get(*out) == M0_BESEG_CLOSED)) {
+                m0_be_seg_open(*out);
         }
 
         return found;
diff --git a/be/ut/be.c b/be/ut/be.c
index 0d1316c..0b0a088 100644
--- a/be/ut/be.c
+++ b/be/ut/be.c
@@ -38,8 +38,9 @@
 
 #include "mero/magic.h"
 #include "sm/sm.h"
+#include "lib/memory.h"
 
-struct m0_be_seg seg;
+struct m0_be_seg *seg;
 struct m0_be_domain dom;
 struct m0_be_reg reg;
 struct m0_be_tx tx;
@@ -73,24 +74,25 @@ int main()
 
         if(result != 0) {
                 printf("\nCreating Segment\n");
-                m0_be_seg_init(&seg, &dom, sm_group, 0);
-                m0_be_seg_create(&seg, NULL,  "first", NULL);
-
+                M0_ALLOC_PTR(seg);
+                m0_be_seg_init(seg, &dom, sm_group, 0);
+                m0_be_seg_create(seg, NULL,  "first", NULL);
         }
+
         m0_sm_group_lock(sm_group);
-        m0_sm_timedwait(&seg.bs_sm,
+        m0_sm_timedwait(&seg->bs_sm,
                         (1 << M0_BESEG_ACTIVE) | (1 << M0_BESEG_FAILED),
                         M0_TIME_NEVER);
         m0_sm_group_unlock(sm_group);
 
-        if (M0_BESEG_FAILED == seg.bs_sm.sm_state) {
+        if (M0_BESEG_FAILED == seg->bs_sm.sm_state) {
                 printf("\nFailed to create segment \n");
                 return -1;
         }
 
         printf("\nSegment is created and opened\n");
 
-        printf("\ndata_file_path : %s\n", seg.bs_impl.path_name);
+        printf("\ndata_file_path : %s\n", seg->bs_impl.path_name);
 
         /* Transaction list initialization */
         m0_be_tx_init(&tx, &dom, 0);
@@ -105,7 +107,7 @@ int main()
 
         /*m0_be_buf_init(&buf, NULL, 1024, 0, 0, 0); */
         buf.b_nob = 1024;
-        m0_be_reg_init(&reg, NULL, &seg, &buf);
+        m0_be_reg_init(&reg, NULL, seg, &buf);
         printf("reg_state[%d]\n", reg.br_sm.sm_state);
         m0_be_alloc(&reg);
 
@@ -171,7 +173,7 @@ int main()
 
         m0_be_tx_fini(&tx);
 
-        m0_be_seg_done(&seg);
+        m0_be_seg_done(seg);
         dom.bd_data.bs_sm.sm_state = M0_BESEG_CLOSED;
         m0_be_domain_fini(&dom);
 
-- 
1.8.3.2

