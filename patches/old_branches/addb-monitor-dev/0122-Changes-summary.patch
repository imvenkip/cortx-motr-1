From b9f77bea395b93861172eb2c2680e6558d74f07e Mon Sep 17 00:00:00 2001
From: Rohan Puri <rohan_puri@xyratex.com>
Date: Fri, 15 Nov 2013 09:56:29 +0530
Subject: [PATCH 122/125] Changes summary :- 1. Some stats utils fixes taken
 from Rajanikant. 2. Integration of total io size monitor of m0t1fs with stats
 util.

---
 addb/addb.c                  |  2 ++
 addb/addb_evmgr.c            |  1 +
 addb/addb_monitor.h          |  6 ++++++
 m0t1fs/linux_kernel/m0t1fs.c |  4 +++-
 m0t1fs/m0t1fs_addb.h         |  2 +-
 stats/util/stats_util.c      | 32 +++++++++++++++++---------------
 6 files changed, 30 insertions(+), 17 deletions(-)

diff --git a/addb/addb.c b/addb/addb.c
index 96d0140..82ed65a 100644
--- a/addb/addb.c
+++ b/addb/addb.c
@@ -795,6 +795,8 @@ static void addb_register_kernel_ctx_and_rec_types(void)
 	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_iow_sizes);
 	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_ior_times);
 	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_iow_times);
+	M0_ADDB_MONITOR_STATS_TYPE_REGISTER(m0_addb_rt_m0t1fs_mon_io_size,
+					    "io_size");
 }
 #endif
 
diff --git a/addb/addb_evmgr.c b/addb/addb_evmgr.c
index 04d3ae5..4a8cd98 100644
--- a/addb/addb_evmgr.c
+++ b/addb/addb_evmgr.c
@@ -488,6 +488,7 @@ M0_INTERNAL void m0__addb_post(struct m0_addb_mc *mc,
 	switch (pd->apd_rt->art_base_type) {
 	case M0_ADDB_BRT_EX:
 	case M0_ADDB_BRT_DP:
+	case M0_ADDB_BRT_STATS:
 		fields_nr = pd->apd_rt->art_rf_nr;
 		fields = pd->u.apd_args;
 		break;
diff --git a/addb/addb_monitor.h b/addb/addb_monitor.h
index 01a21fd..e849300 100644
--- a/addb/addb_monitor.h
+++ b/addb/addb_monitor.h
@@ -219,6 +219,12 @@ enum {
 
 M0_TL_DESCR_DECLARE(addb_mon, M0_EXTERN);
 
+#define M0_ADDB_MONITOR_STATS_TYPE_REGISTER(stats_type, name) \
+do {                                                          \
+	stats_type.art_name = name;                           \
+	m0_addb_rec_type_register(&stats_type);               \
+} while (0)
+
 struct m0_addb_sum_rec {
 	/**
 	 * This flag is true iff the record contains data still
diff --git a/m0t1fs/linux_kernel/m0t1fs.c b/m0t1fs/linux_kernel/m0t1fs.c
index 16f9087..4cf49c2 100644
--- a/m0t1fs/linux_kernel/m0t1fs.c
+++ b/m0t1fs/linux_kernel/m0t1fs.c
@@ -114,9 +114,11 @@ M0_INTERNAL int m0t1fs_init(void)
 	RT_REG(dgiow_sizes);
 	RT_REG(dgior_times);
 	RT_REG(dgiow_times);
-	RT_REG(mon_io_size);
 #undef RT_REG
 
+	M0_ADDB_MONITOR_STATS_TYPE_REGISTER(m0_addb_rt_m0t1fs_mon_io_size,
+					    "io_size");
+
 	m0t1fs_globals.g_laddr = local_addr;
 
         rc = m0_fid_init();
diff --git a/m0t1fs/m0t1fs_addb.h b/m0t1fs/m0t1fs_addb.h
index c4c0c37..7587444 100644
--- a/m0t1fs/m0t1fs_addb.h
+++ b/m0t1fs/m0t1fs_addb.h
@@ -117,7 +117,7 @@ M0_ADDB_RT_DP(m0_addb_rt_m0t1fs_cob_io_finish, M0T1FS_ADDB_RECID_COB_IO_FINISH,
 	      "io_size" /* in bytes (data + parity) */, "time_ns");
 
 /* Number of bytes read, written from this client instance (m0t1fs) */
-M0_ADDB_RT_DP(m0_addb_rt_m0t1fs_mon_io_size, M0T1FS_ADDB_RECID_MON_IO_SIZE,
+M0_ADDB_RT_STATS(m0_addb_rt_m0t1fs_mon_io_size, M0T1FS_ADDB_RECID_MON_IO_SIZE,
 	      "total_io_size");
 
 /* m0t1fs root cob */
diff --git a/stats/util/stats_util.c b/stats/util/stats_util.c
index bae1ee9..299949c 100644
--- a/stats/util/stats_util.c
+++ b/stats/util/stats_util.c
@@ -189,8 +189,10 @@ static void stats_print_values(FILE *out,
 	for (i = 0; i < stats_recs->sf_nr; ++i) {
 		const struct m0_addb_rec_type *rt =
 			m0_addb_rec_type_lookup(stats_recs->sf_stats[i].ss_id);
-		M0_ASSERT(stats_recs->sf_stats[i].ss_data.au64s_nr ==
-			  rt->art_rf_nr);
+		if (rt == NULL)
+			continue;
+		if (stats_recs->sf_stats[i].ss_data.au64s_nr != rt->art_rf_nr)
+			continue;
 		for (j = 0; j < stats_recs->sf_stats[i].ss_data.au64s_nr; ++j)
 			fprintf(out, "%*lu",
 				stats_field_width(rt->art_rf[j].arfu_name),
@@ -316,10 +318,20 @@ int main(int argc, char *argv[])
         sigaction(SIGQUIT, &sa, NULL);
         sigaction(SIGPIPE, &sa, NULL);
 
+	rc = m0_init();
+	if (rc != 0) {
+		fprintf(stderr, "Failed to initialize library. rc = %d\n", rc);
+		return rc;
+	}
+
+	if (list_names) {
+		stats_print_list();
+		goto mero_fini;
+	}
 	rc = stats_local_ep(local_ep);
 	if (rc != 0) {
 		fprintf(stderr, "Failed to get local address. rc = %d\n", rc);
-		return rc;
+		goto mero_fini;
 	}
 
 	if (remote_addr == NULL || stats_list == NULL) {
@@ -347,16 +359,6 @@ int main(int argc, char *argv[])
 	cctx.rcx_remote_addr = epx.ex_endpoint;
 	cctx.rcx_local_addr  = strdup(local_ep);
 
-	rc = m0_init();
-	if (rc != 0) {
-		fprintf(stderr, "Failed to initialize library. rc = %d\n", rc);
-		return rc;
-	}
-
-	if (list_names) {
-		stats_print_list();
-		goto mero_fini;
-	}
 
         rc = m0_net_xprt_init(xprt);
         if (rc != 0) {
@@ -401,10 +403,10 @@ disconnect:
 
 domain_fini:
 	m0_net_domain_fini(&client_net_dom);
-mero_fini:
-	m0_fini();
 mero_fini_fclose:
 	fclose(fout);
+mero_fini:
+	m0_fini();
 	return rc;
 }
 
-- 
1.8.3.2

