From 9cf13d9a44c2c232cde8b37ae19b6dcf79c54a0b Mon Sep 17 00:00:00 2001
From: Nachiket Sahasrabuddhe <nachiket_sahasrabuddhe@xyratex.com>
Date: Wed, 9 Oct 2013 18:57:37 +0530
Subject: [PATCH 36/61] bitmemalloc.mf

-introduced next_idx_update()
---
 lib/varr.c | 28 +++++++++++++++++-----------
 1 file changed, 17 insertions(+), 11 deletions(-)

diff --git a/lib/varr.c b/lib/varr.c
index afee4e4..990b055 100644
--- a/lib/varr.c
+++ b/lib/varr.c
@@ -89,7 +89,9 @@ M0_INTERNAL uint64_t last_nbits_set(uint8_t n);
 /* Increments buffer based upon its level in a tree */
 M0_INTERNAL void * buff_incr(struct m0_varr *arr, uint32_t depth,
 			     void *buff, uint32_t incr);
-
+M0_INTERNAL uint32_t next_id_update(const struct m0_varr_cursor *cursor,
+				    uint32_t d, uint32_t inc,
+				    uint32_t next_idx);
 /* Shifts a given number to left/right by taking into account sizeof(number) */
 #define safe_bitshift(num, shift, operator)				     \
 	({								     \
@@ -342,14 +344,6 @@ M0_INTERNAL int m0_varr_cursor_move(struct m0_varr_cursor *cursor,
 		}
 
 		if (d > 0) {
-			if (d != cursor->vc_depth) {
-				pe->vp_buf = buff_incr(cursor->arr, d,
-						       pe->vp_buf, inc);
-				pe->vp_idx += inc;
-				next_idx &= varr_obj_nr_in_buff(cursor->vc_arr) *
-					 max_buff_nr_till_lev_n_pn(cursor->vc_arr,
-								  cursor->vc_arr->va_depth - 1) - 1;
-			}
 			do {
 				inc     = safe_bitshift(next_idx,
 							leaves_beneath_shift,
@@ -357,12 +351,16 @@ M0_INTERNAL int m0_varr_cursor_move(struct m0_varr_cursor *cursor,
 				pe->vp_buf = buff_incr(cursor->arr, d,
 						       pe->vp_buf, inc);
 				pe->vp_idx += inc;
+				next_idx = next_id_update(cursor, next_idx,
+							  inc, d);
 				if (d == cursor->vc_depth)
 					completed_leaves_update(cursor, d, inc);
 				else {
 					if (inc > 0)
-						completed_leaves_update(cursor, d,
-									inc - 1);
+						completed_leaves_update(cursor,
+									d,
+									inc -
+									1);
 					buf = (unsigned long *)pe->vp_buf;
 					++pe;
 					pe->vp_buf = (void *)(*buf);
@@ -479,6 +477,14 @@ M0_INTERNAL void *buff_incr(struct m0_varr *arr, uint32_t depth,
 	return buff;
 }
 
+M0_INTERNAL uint32_t next_id_update(const struct m0_varr_cursor *cursor,
+				    uint32_t d, uint32_t inc,
+				    uint32_t next_idx)
+{
+	return next_idx - (inc * varr_obj_nr_in_buff(cursor->vc_arr) *
+			max_buff_nr_till_lev_n_pn(cursor->vc_arr, d));
+}
+
 M0_INTERNAL void varr_buffers_dealloc(struct m0_varr *arr, uint64_t buf_nr)
 {
 	struct m0_varr_cursor cursor;
-- 
1.8.3.2

