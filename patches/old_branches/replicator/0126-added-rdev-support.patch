From a19b695db467bd51cf50b2b7166f03c78b810605 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Mon, 13 Jun 2011 06:59:03 -0600
Subject: [PATCH 126/177] - added rdev support.

---
 cob/cob.h            |   8 +--
 mdstore/mdstore.c    | 165 ++++-----------------------------------------------
 mdstore/ut/mdstore.c |   3 +-
 utils/mkfs.colibri.c |   3 +-
 4 files changed, 17 insertions(+), 162 deletions(-)

diff --git a/cob/cob.h b/cob/cob.h
index f1801e6..080d7ef 100644
--- a/cob/cob.h
+++ b/cob/cob.h
@@ -256,12 +256,8 @@ struct c2_cob_nsrec {
         uint32_t          cnr_zombie;  /**< this object is marked to be killed. */
         uint64_t          cnr_omgid;   /**< uid/gid/mode slot reference */
         uint64_t          cnr_version; /**< attributes version, used for repl. */
-
-        union {
-                uint32_t  cnr_rdev;    /**< device ID (if special file). */
-                uint64_t  cnr_size;    /**< total size, in bytes. */
-        } u;
-
+        uint32_t          cnr_rdev;    /**< device ID (if special file). */
+        uint64_t          cnr_size;    /**< total size, in bytes. */
         uint64_t          cnr_blksize; /**< blocksize for filesystem I/O. */
         uint64_t          cnr_blocks;  /**< number of blocks allocated. */
         uint64_t          cnr_atime;   /**< time of last access. */
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 6176487..39846ce 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -139,8 +139,8 @@ int c2_md_store_create(struct c2_md_store       *md,
 
         nsrec.cnr_fid = attr->ca_tfid;
         nsrec.cnr_nlink = attr->ca_nlink;
-        nsrec.u.cnr_rdev = attr->ca_rdev;
-        nsrec.u.cnr_size = attr->ca_size;
+        nsrec.cnr_rdev = attr->ca_rdev;
+        nsrec.cnr_size = attr->ca_size;
         nsrec.cnr_blksize = attr->ca_blksize;
         nsrec.cnr_blocks = attr->ca_blocks;
         nsrec.cnr_version = attr->ca_version;
@@ -213,33 +213,6 @@ int c2_md_store_link(struct c2_md_store         *md,
         cob->co_nsrec.cnr_cntr++;
 
         rc = c2_cob_update(cob, &cob->co_nsrec, NULL, NULL, tx);
-        if (rc)
-                goto out;
-
-        /*
-         * This is what needs updating in parent in normal case but
-         * don't do this because of the following reasons:
-         * - we may not have parent in moment of op execution;
-         * - we can't update times when using it with replicator
-         *   as replicator will do it in setattr fop obtained from
-         *   lustre source fs.
-         * Still we keep this code in place for now in case we need
-         * it for normal mdstore API based on this one.
-         */
-#if 0
-        /*
-         * Update mtime in parent.
-         */
-        pcob->co_nsrec.cnr_mtime = now;
-        pcob->co_nsrec.cnr_ctime = now;
-        pcob->co_nsrec.cnr_atime = now;
-                         
-        /*
-         * Update on-store cob so that updated time
-         * is saved.
-         */
-        rc = c2_cob_update(pcob, &pcob->co_nsrec,  NULL, NULL, tx);
-#endif
 out:
         C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, 
                     c2_addb_func_fail, "md_link", rc);
@@ -329,41 +302,13 @@ int c2_md_store_unlink(struct c2_md_store       *md,
                  * Last nlink, let's delete everything left. 
                  */
                 rc = c2_cob_delete(cob, tx);
-                if (rc)
-                        goto out;
         } else {
                 /*
                  * Not last nlink yet, let's update stat data on store.
                  */
                 rc = c2_cob_update(cob, &cob->co_nsrec, NULL, NULL, tx);
-                if (rc)
-                        goto out;
         }
 
-        /*
-         * This is what needs updating in parent in normal case but
-         * don't do this because of the following reasons:
-         * - we may not have parent in moment of op execution;
-         * - we can't update times when using it with replicator
-         *   as replicator will do it in setattr fop obtained from
-         *   lustre source fs.
-         * Still we keep this code in place for now in case we need
-         * it for normal mdstore API based on this one.
-         */
-#if 0        
-        /*
-         * Update mtime in parent.
-         */
-        pcob->co_nsrec.cnr_mtime = now;
-        pcob->co_nsrec.cnr_ctime = now;
-        pcob->co_nsrec.cnr_atime = now;
-                         
-        /*
-         * Update on-store cob so that updated time and nlink
-         * are saved.
-         */
-        rc = c2_cob_update(pcob, &pcob->co_nsrec,  NULL, NULL, tx);
-#endif
 out:
         C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, 
                     c2_addb_func_fail, "md_unlink", rc);
@@ -470,81 +415,6 @@ int c2_md_store_rename(struct c2_md_store       *md,
         c2_cob_make_nskey(&tgtkey, pfid_tgt, tname, tnamelen);
 
         rc = c2_cob_update_name(cob_src, srckey, tgtkey, tx);
-        if (rc)
-                goto out;
-
-        /*
-         * This is what needs updating in parent in normal case but
-         * don't do this because of the following reasons:
-         * - we may not have parent in moment of op execution;
-         * - we can't update times when using it with replicator
-         *   as replicator will do it in setattr fop obtained from
-         *   lustre source fs.
-         * Still we keep this code in place for now in case we need
-         * it for normal mdstore API based on this one.
-         */
-#if 0
-        cob->co_nsrec.cnr_ctime = now;
-
-        if (c2_fid_eq(pfid_src, pfid_tgt)) {
-                /*
-                 * Update mtime in parent.
-                 */
-                pcob_src->co_nsrec.cnr_mtime = now;
-                pcob_src->co_nsrec.cnr_ctime = now;
-                pcob_src->co_nsrec.cnr_atime = now;
-                         
-                /*
-                 * Update on-store cob so that updated time
-                 * is saved.
-                 */
-                rc = c2_cob_update(pcob_src, &pcob_src->co_nsrec,
-                                   NULL, NULL, tx);
-                if (rc)
-                        goto out;
-        } else {
-                /*
-                 * Update mtime and links in src parent.
-                 */
-                if (S_ISDIR(cob->co_nsrec.cnr_mode))
-                        pcob_src->co_nsrec.cnr_nlink--;
-                pcob_src->co_nsrec.cnr_mtime = now;
-                pcob_src->co_nsrec.cnr_ctime = now;
-                pcob_src->co_nsrec.cnr_atime = now;
-
-                /*
-                 * Update mtime and links in tgt parent.
-                 */
-                if (S_ISDIR(cob->co_nsrec.cnr_mode))
-                        pcob_tgt->co_nsrec.cnr_nlink++;
-                pcob_tgt->co_nsrec.cnr_mtime = now;
-                pcob_tgt->co_nsrec.cnr_ctime = now;
-                pcob_tgt->co_nsrec.cnr_atime = now;
-
-                /*
-                 * Update on-store cob so that updated statdata
-                 * is saved.
-                 */
-                rc = c2_cob_update(pcob_src, &pcob_src->co_nsrec,
-                                   NULL, NULL, tx);
-                if (rc)
-                        goto out;
-
-                /*
-                 * Update on-store cob so that updated statdata
-                 * is saved.
-                 */
-                rc = c2_cob_update(pcob_tgt, &pcob_tgt->co_nsrec,
-                                   NULL, NULL, tx);
-                if (rc)
-                        goto out;
-        }
-
-        /*
-         * Update cob on store to save changed cntr and ctime.
-         */
-        rc = c2_cob_update(cob, &cob->co_nsrec, NULL, NULL, tx);
-#endif
 out:
         c2_free(srckey);
         c2_free(tgtkey);
@@ -584,9 +454,9 @@ int c2_md_store_setattr(struct c2_md_store      *md,
                 if (attr->ca_flags & C2_MD_CTIME)
                         nsrec->cnr_ctime = attr->ca_ctime;
                 if (attr->ca_flags & C2_MD_SIZE)
-                        nsrec->u.cnr_size = attr->ca_size;
+                        nsrec->cnr_size = attr->ca_size;
                 if (attr->ca_flags & C2_MD_RDEV)
-                        nsrec->u.cnr_rdev = attr->ca_rdev;
+                        nsrec->cnr_rdev = attr->ca_rdev;
                 if (attr->ca_flags & C2_MD_BLOCKS)
                         nsrec->cnr_blocks = attr->ca_blocks;
                 if (attr->ca_flags & C2_MD_BLKSIZE)
@@ -654,23 +524,18 @@ int c2_md_store_getattr(struct c2_md_store      *md,
          */
         if (cob->co_valid & CA_NSREC) {
                 attr->ca_flags |= C2_MD_ATIME | C2_MD_CTIME | C2_MD_MTIME |
-                                  C2_MD_BLKSIZE | C2_MD_BLOCKS;
+                                  C2_MD_SIZE | C2_MD_BLKSIZE | C2_MD_BLOCKS |
+                                  C2_MD_RDEV;
                 attr->ca_atime = cob->co_nsrec.cnr_atime;
                 attr->ca_ctime = cob->co_nsrec.cnr_ctime;
                 attr->ca_mtime = cob->co_nsrec.cnr_mtime;
                 attr->ca_blksize = cob->co_nsrec.cnr_blksize;
                 attr->ca_blocks = cob->co_nsrec.cnr_blocks;
                 attr->ca_nlink = cob->co_nsrec.cnr_nlink;
+                attr->ca_rdev = cob->co_nsrec.cnr_rdev;
+                attr->ca_size = cob->co_nsrec.cnr_size;
                 attr->ca_version = cob->co_nsrec.cnr_version;
                 attr->ca_zombie = cob->co_nsrec.cnr_zombie;
-
-                if (S_ISCHR(attr->ca_mode) || S_ISBLK(attr->ca_mode)) {
-                        attr->ca_rdev = cob->co_nsrec.u.cnr_rdev;
-                        attr->ca_flags |= C2_MD_RDEV;
-                } else {
-                        attr->ca_size = cob->co_nsrec.u.cnr_size;
-                        attr->ca_flags |= C2_MD_SIZE;
-                }
         }
         
         /*
@@ -820,17 +685,13 @@ int c2_md_store_lookup(struct c2_md_store       *md,
                        struct c2_db_tx          *tx)
 {
         struct c2_cob_nskey *nskey;
-        int                  flags;
-        int                  rc;
 
-        if (pfid == NULL)        
-                c2_cob_make_nskey(&nskey, &C2_MD_ROOT_FID, name, namelen);
-        else
-                c2_cob_make_nskey(&nskey, pfid, name, namelen);
-        flags = (CA_NSKEY_FREE | CA_FABREC | CA_OMGREC);
-        rc = c2_cob_lookup(&md->md_dom, nskey, flags, cob, tx);
+        if (pfid == NULL)
+                pfid = &C2_MD_ROOT_FID;
 
-        return rc;
+        c2_cob_make_nskey(&nskey, pfid, name, namelen);
+        return c2_cob_lookup(&md->md_dom, nskey, 
+                             (CA_FABREC | CA_OMGREC), cob, tx);
 }
 
 /**
diff --git a/mdstore/ut/mdstore.c b/mdstore/ut/mdstore.c
index e0b1893..3477ebf 100644
--- a/mdstore/ut/mdstore.c
+++ b/mdstore/ut/mdstore.c
@@ -115,8 +115,7 @@ static void test_mkfs(void)
         nsrec.cnr_fid.f_key = root.f_oid;
 
         nsrec.cnr_nlink = 1;
-        nsrec.u.cnr_rdev = 0;
-        nsrec.u.cnr_size = 4096;
+        nsrec.cnr_size = 4096;
         nsrec.cnr_blksize = 4096;
         nsrec.cnr_blocks = 16;
         time(&now);
diff --git a/utils/mkfs.colibri.c b/utils/mkfs.colibri.c
index 8c6260d..0ce69e7 100644
--- a/utils/mkfs.colibri.c
+++ b/utils/mkfs.colibri.c
@@ -146,8 +146,7 @@ int main(int argc, char *argv[])
         nsrec.cnr_fid = C2_MD_ROOT_FID;
 
         nsrec.cnr_nlink = 1;
-        nsrec.u.cnr_rdev = 0;
-        nsrec.u.cnr_size = 4096;
+        nsrec.cnr_size = 4096;
         nsrec.cnr_blksize = 4096;
         nsrec.cnr_blocks = 16;
 
-- 
1.8.3.2

