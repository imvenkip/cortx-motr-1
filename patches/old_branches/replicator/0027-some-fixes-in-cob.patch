From ce6349102fabd1374b09bd5be063e913dcd1929c Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Tue, 29 Mar 2011 06:42:14 -0600
Subject: [PATCH 027/177] - some fixes in cob

---
 Makefile.am         |  6 +++---
 cob/cob.c           |  6 +++---
 ioservice/io_foms.c | 24 +++++++++++++++++-------
 3 files changed, 23 insertions(+), 13 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index f990c6a..9457dfb 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -2,9 +2,9 @@ SUBDIRS_BASE = m4 doc man patches
 
 # Order is important until fop is reached. Fop needs all libs before it in the 
 # list be build in order to use fop2c
-SUBDIRS_LIBS = lib addb fol db fid fop sm stob net dtm nrs sns mw reqh \
-               layout pool balloc desim cob capa udb site ioservice mdservice \
-               mdstore datastore  # rpc
+SUBDIRS_LIBS = lib addb fol db fid fop sm stob net dtm nrs sns mw \
+               layout pool balloc desim cob capa udb ioservice mdservice \
+               site reqh mdstore datastore  # rpc
 
 SUBDIR_KERNEL = build_kernel_modules
 SUBDIR_UT = fop/ut lib/ut stob/ut layout/ut balloc/ut db/ut \
diff --git a/cob/cob.c b/cob/cob.c
index f2d2720..f685128 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -570,7 +570,7 @@ int c2_cob_create(struct c2_cob        *cob,
         /* 
          * Add to fileattr-basic table. 
          */
-        c2_db_pair_setup(&pair, &dom->cd_fileattr_basic,
+        c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_basic,
 			 &oikey, sizeof oikey,
 			 &cob->co_fabrec, sizeof cob->co_fabrec);
 
@@ -589,7 +589,7 @@ int c2_cob_create(struct c2_cob        *cob,
         /* 
          * Add to fileattr-omg table. 
          */
-        c2_db_pair_setup(&pair, &dom->cd_fileattr_omg,
+        c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_omg,
 			 &oikey, sizeof oikey,
 			 &cob->co_omgrec, sizeof cob->co_omgrec);
 
@@ -601,7 +601,7 @@ int c2_cob_create(struct c2_cob        *cob,
 
 	return 0;
 out:
-        C2_ADDB_ADD(&dom->cd_addb, &cob_addb_loc, cob_create, rc == 0);
+        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_create, rc == 0);
         return rc;
 }
 
diff --git a/ioservice/io_foms.c b/ioservice/io_foms.c
index 7994dd9..435add7 100644
--- a/ioservice/io_foms.c
+++ b/ioservice/io_foms.c
@@ -128,11 +128,14 @@ int c2_fop_cob_rwv_fom_init(struct c2_fop *fop, struct c2_fom **m)
  */
 int c2_fom_cob_rwv_state(struct c2_fom *fom)
 {
+        struct c2_site                  *site;
+        struct c2_fop_ctx               *ctx;
 	struct c2_fop_file_fid		*ffid;
 	struct c2_fid 			 fid;
 	struct c2_fom_cob_rwv 		*fom_obj;
 	struct c2_stob_id		 stobid;
 	struct c2_db_tx                 *tx;
+	struct c2_dtx                    dtx;
 	uint32_t			 bshift;
 	uint64_t			 bmask;
 	int 				 result;
@@ -162,6 +165,11 @@ int c2_fom_cob_rwv_state(struct c2_fom *fom)
 	if(fom_obj->fcrw_st_io == NULL)
 		return -ENOMEM;
 
+        ctx = fom->fo_fop_ctx;
+        C2_ASSERT(ctx != NULL);
+        site = ctx->ft_site;
+        C2_ASSERT(site != NULL);
+
 	/*
 	 * Retrieve the request and reply FOPs.
 	 * Extract the on-write FID from the FOPs.
@@ -199,24 +207,26 @@ int c2_fom_cob_rwv_state(struct c2_fom *fom)
 	 * This is a transaction IO and should be a separate phase 
 	 * with full fledged FOM. 
 	 */
-	C2_ASSERT(fom->fo_fop_ctx != NULL && fom->fo_fop_ctx->ft_tx);
-	tx = fom->fo_fop_ctx->ft_tx;
+	C2_ASSERT(ctx != NULL && ctx->ft_tx);
+	dtx.tx_dbtx = tx = ctx->ft_tx;
+	
 
 	if(fom_obj->fcrw_fop->f_type->ft_code == c2_io_service_writev_opcode) {
 		/* 
 		 * Make an FOL transaction record.
 		 */
 		result = c2_fop_fol_rec_add(fom_obj->fcrw_fop, 
-				            fom->fo_fop_ctx->ft_fol, tx);
+				            ctx->ft_fol, tx);
 		C2_ASSERT(result == 0);
 	}
 
 	/*
 	 * Allocate and find out the c2_stob object from given domain. 
 	 */
-	result = c2_stob_find(fom->fo_domain, (const struct c2_stob_id*)&stobid, &fom_obj->fcrw_stob);
+	result = c2_stob_find(site->s_datastore->ds_stob, 
+	                      (const struct c2_stob_id *)&stobid, &fom_obj->fcrw_stob);
 	C2_ASSERT(result == 0);
-	result = c2_stob_locate(fom_obj->fcrw_stob, &tx);
+	result = c2_stob_locate(fom_obj->fcrw_stob, &dtx);
 	C2_ASSERT(result == 0);
 
 	/*
@@ -332,8 +342,8 @@ int c2_fom_cob_rwv_state(struct c2_fom *fom)
 	/*
 	 * Send reply FOP
 	 */
-	c2_net_reply_post(fom->fo_fop_ctx->ft_service, fom_obj->fcrw_rep_fop, 
-			  fom->fo_fop_ctx->fc_cookie);
+	c2_net_reply_post(ctx->ft_service, fom_obj->fcrw_rep_fop, 
+			  ctx->fc_cookie);
 
 	/* This goes into DONE phase */
 	fom_obj->fcrw_gen.fo_phase = FOPH_DONE;
-- 
1.8.3.2

