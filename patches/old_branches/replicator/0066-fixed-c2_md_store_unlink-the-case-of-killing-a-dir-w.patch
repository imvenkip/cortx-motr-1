From b66beb7cdda88ece0979e405c413e63af34dcd1f Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Mon, 18 Apr 2011 08:20:16 -0600
Subject: [PATCH 066/177] - fixed c2_md_store_unlink() the case of killing a
 dir which caused db engine to fail abort and set panic flag into dbenv; -
 some cleanups and fix about oipair mgmt; - in cob_oi_lookup() when cursor
 returns 0 check for fid. Return -ENOENT if wrong object found.

---
 cob/cob.c         | 22 ++++++++++++++++++----
 db/db.c           | 20 ++++++++++----------
 mdstore/mdstore.c | 14 ++++++--------
 3 files changed, 34 insertions(+), 22 deletions(-)

diff --git a/cob/cob.c b/cob/cob.c
index 36a809a..531ca56 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -372,11 +372,17 @@ static int cob_ns_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
 static int cob_oi_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
 {
         struct c2_db_cursor cursor;
+        struct c2_cob_oikey oldkey;
         int                 rc;
 
         if (cob->co_valid & CA_NSKEY)
                 return 0;
 
+        if (cob->co_valid & CA_NSKEY_DB) {
+                c2_db_pair_fini(&cob->co_oipair);
+                cob->co_valid &= ~CA_NSKEY_DB;
+        }
+
         /* 
          * Find the name from the object index table. Note the key buffer
          * is out of scope outside of this function, but the record is good
@@ -393,25 +399,33 @@ static int cob_oi_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
                 rc = c2_db_cursor_init(&cursor, 
                                        &cob->co_dom->cd_object_index, tx);
                 if (rc) {
-                        c2_db_pair_release(&cob->co_oipair);
                         c2_db_pair_fini(&cob->co_oipair);
                         return rc;
                 }
 
+                oldkey = cob->co_oikey;
                 rc = c2_db_cursor_get(&cursor, &cob->co_oipair);
-                c2_db_pair_release(&cob->co_oipair);
+                c2_db_cursor_fini(&cursor);
                 if (rc) {
                         c2_db_pair_fini(&cob->co_oipair);
-                        c2_db_cursor_fini(&cursor);
                         return rc;
                 }
+
+                /* 
+                 * Found position should have same fid and linkno not less
+                 * then requested. Otherwise we failed with lookup.
+                 */
+                if (!c2_fid_eq(&oldkey.cok_fid, &cob->co_oikey.cok_fid) ||
+                    oldkey.cok_linkno > cob->co_oikey.cok_linkno) {
+                        c2_db_pair_fini(&cob->co_oipair);
+                        return -ENOENT;
+                }
         } else {
                 /*
                  * Let's use lookup that can return meaningful error code
                  * for case that we need exact position.
                  */
                 rc = c2_table_lookup(tx, &cob->co_oipair);
-                c2_db_pair_release(&cob->co_oipair);
                 if (rc) {
                         c2_db_pair_fini(&cob->co_oipair);
                         return rc;
diff --git a/db/db.c b/db/db.c
index 21753ab..aabd1a3 100644
--- a/db/db.c
+++ b/db/db.c
@@ -98,17 +98,17 @@ static int dberr_conv(int db_error)
    db5 error code into errno and emits an ADDB event in a given context, if
    necessary.
  */
-static int db_call_tail(struct c2_addb_ctx *ctx, int rc, const char *name,
+static int db_call_tail(struct c2_addb_ctx *ctx, int err, const char *name,
 			int *tolerate)
 {
-	if (rc != 0) {
-		rc = dberr_conv(rc);
-		for (; *tolerate != 0 && *tolerate != rc; tolerate++)
+	if (err != 0) {
+		err = dberr_conv(err);
+		for (; *tolerate != 0 && *tolerate != err; tolerate++)
 			;
 		if (*tolerate == 0)
-			C2_ADDB_ADD(ctx, &db_loc, c2_addb_func_fail, name, rc);
+			C2_ADDB_ADD(ctx, &db_loc, c2_addb_func_fail, name, err);
 	}
-	return rc;
+	return err;
 }
 
 /**
@@ -117,7 +117,7 @@ static int db_call_tail(struct c2_addb_ctx *ctx, int rc, const char *name,
  */
 #define DBENV_CALL(dbenv, method, ...)					\
 ({									\
-	int rc;								\
+	int rc;	        					        \
 									\
 	rc = (dbenv)->d_i.d_env->method((dbenv)->d_i.d_env , ## __VA_ARGS__); \
 	db_call_tail(&(dbenv)->d_addb, rc, #method, dbenv_tol_ ## method); \
@@ -131,7 +131,7 @@ static int db_call_tail(struct c2_addb_ctx *ctx, int rc, const char *name,
  */
 #define TABLE_CALL(table, method, ...)					\
 ({									\
-	int rc;								\
+	int rc; 							\
 									\
 	rc = (table)->t_i.t_db->method((table)->t_i.t_db , ## __VA_ARGS__); \
 	db_call_tail(&(table)->t_addb, rc, #method, table_tol_ ## method); \
@@ -143,7 +143,7 @@ static int db_call_tail(struct c2_addb_ctx *ctx, int rc, const char *name,
  */
 #define TX_CALL(tx, method, ...)					\
 ({									\
-	int rc;								\
+	int rc;			        				\
 									\
 	rc = (tx)->dt_i.dt_txn->method((tx)->dt_i.dt_txn , ## __VA_ARGS__); \
 	db_call_tail(&(tx)->dt_addb, rc, #method, tx_tol_ ## method);	\
@@ -155,7 +155,7 @@ static int db_call_tail(struct c2_addb_ctx *ctx, int rc, const char *name,
  */
 #define CURSOR_CALL(cur, method, ...)					\
 ({									\
-	int rc;								\
+	int rc; 							\
 									\
 	rc = (cur)->c_i.c_dbc->method((cur)->c_i.c_dbc , ## __VA_ARGS__); \
 	db_call_tail(&(cur)->c_table->t_addb, rc, "dbc::" #method,	\
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index b6c0fef..7220a95 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -303,9 +303,6 @@ int c2_md_store_unlink(struct c2_md_store *md,
                           req->u_name.n_name,
                           req->u_name.n_count);
 
-        /*
-         * Copy "working copy" of stat data.
-         */
         C2_PRE(cob->co_nsrec.cnr_nlink > 0);
         cob->co_nsrec.cnr_nlink--;
         
@@ -322,14 +319,15 @@ int c2_md_store_unlink(struct c2_md_store *md,
         
         /*
          * Check if we're trying to kill stata data entry. We need to
-         * move stat data to next name if so.
+         * move stat data to another name if so.
          */
-        if (c2_cob_nskey_cmp(nskey, cob->co_nskey) == 0) {
+        if (!S_ISDIR(cob->co_omgrec.cor_mode) && 
+            c2_cob_nskey_cmp(nskey, cob->co_nskey) == 0) {
                 /*
-                 * Find next name (new stat data) in object index. Note
-                 * that ->cok_stoid is already set above.
+                 * Find another name (new stat data) in object index.
                  */
-                oikey.cok_linkno++;
+                oikey.cok_fid = cob->co_fid;
+                oikey.cok_linkno = cob->co_nsrec.cnr_linkno + 1;
                 
                 rc = c2_cob_locate(&md->md_dom, &oikey, &ncob, 
                                    &ctx->fc_tx->tx_dbtx);
-- 
1.8.3.2

