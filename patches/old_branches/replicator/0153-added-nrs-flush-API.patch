From 628555375c82847970aa7d837ab475fbbd59d643 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Mon, 27 Jun 2011 10:13:23 -0600
Subject: [PATCH 153/177] - added nrs flush API.

---
 addb/addb.c         |  2 +-
 mdservice/md_foms.c |  2 +-
 nrs/nrs.c           | 17 ++++++++++++-----
 nrs/nrs.h           |  6 ++++++
 4 files changed, 20 insertions(+), 7 deletions(-)

diff --git a/addb/addb.c b/addb/addb.c
index 3f35226..a282801 100644
--- a/addb/addb.c
+++ b/addb/addb.c
@@ -47,7 +47,7 @@
 /*
  * This can be changed.
  */
-enum c2_addb_ev_level c2_addb_level_default = AEL_ERROR;
+enum c2_addb_ev_level c2_addb_level_default = AEL_NONE;
 C2_EXPORTED(c2_addb_level_default);
 
 /**
diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index d12ba23..47d301b 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -154,7 +154,7 @@ static int c2_md_create(struct c2_md_store  *md,
         struct c2_cob *ncob = NULL;
         int rc;
 
-restart:        
+restart:
         rc = c2_md_store_lookup(md, pfid, attr->ca_name, 
                                 attr->ca_namelen, &ncob, tx);
         if (rc == -ENOENT) {
diff --git a/nrs/nrs.c b/nrs/nrs.c
index a82cf2e..d96df46 100644
--- a/nrs/nrs.c
+++ b/nrs/nrs.c
@@ -46,14 +46,18 @@ static const struct c2_addb_loc nrs_addb = {
 	.al_name = "nrs"
 };
 
-int  c2_nrs_init(struct c2_nrs *nrs, struct c2_nrs_policy *pol, 
-                 c2_nrs_fhcb_t fhcb, struct c2_reqh *reqh)
+int c2_nrs_init(struct c2_nrs *nrs, struct c2_nrs_policy *pol, 
+                c2_nrs_fhcb_t fhcb, struct c2_reqh *reqh)
 {
         int rc;
         
+	C2_ASSERT(nrs != NULL);
+	C2_ASSERT(pol != NULL);
+
         C2_SET0(nrs);        
         c2_mutex_init(&nrs->s_guard);
 	c2_cond_init(&nrs->s_gotwork);
+	c2_cond_init(&nrs->s_flush);
         c2_queue_init(&nrs->s_queue);
         nrs->s_shutdown = false;
 	nrs->s_reqh = reqh;
@@ -81,14 +85,17 @@ void c2_nrs_fini(struct c2_nrs *nrs)
 
 void c2_nrs_enqueue(struct c2_nrs *nrs, struct c2_fop *fop, void *cookie)
 {
-	C2_ASSERT(nrs->s_pol != NULL);
-	if (fop != NULL) {
+	if (fop != NULL)
                 C2_ADDB_ADD(&fop->f_addb, &nrs_addb, 
                             c2_addb_func_fail, "nrs_enqueue", 0);
-        }
 	nrs->s_pol->sp_enqueue(nrs, fop, cookie);
 }
 
+void c2_nrs_flush(struct c2_nrs *nrs, void *cookie)
+{
+	nrs->s_pol->sp_flush(nrs, cookie);
+}
+
 /** @} end of nrs group */
 
 /* 
diff --git a/nrs/nrs.h b/nrs/nrs.h
index c0ea73a..45b93dc 100644
--- a/nrs/nrs.h
+++ b/nrs/nrs.h
@@ -50,6 +50,8 @@ struct c2_nrs {
 	struct c2_mutex       s_guard;
         /** More work condition. */
 	struct c2_cond        s_gotwork;
+        /** Flush wait condition. */
+	struct c2_cond        s_flush;
 	/** Nrs policy passed in init time. */
 	struct c2_nrs_policy *s_pol;
         /** The thread shutdown flag. */
@@ -62,13 +64,17 @@ struct c2_nrs_policy {
         char  *sp_name;
         int  (*sp_thread_init)(struct c2_nrs *);
         void (*sp_thread_main)(struct c2_nrs *);
+        void (*sp_flush) (struct c2_nrs *, void *);
         int  (*sp_enqueue) (struct c2_nrs *, struct c2_fop *, void *);
 };
 
 int  c2_nrs_init(struct c2_nrs *nrs, struct c2_nrs_policy *pol, 
                  c2_nrs_fhcb_t fhcb, struct c2_reqh *reqh);
+
 void c2_nrs_enqueue(struct c2_nrs *nrs, struct c2_fop *fop, 
                     void *cookie);
+
+void c2_nrs_flush(struct c2_nrs *nrs, void *cookie);
 void c2_nrs_fini(struct c2_nrs *nrs);
 
 /** @} end of nrs group */
-- 
1.8.3.2

