From 2715196a0731ef9cca1c6eaf4531f40a96cda5af Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Tue, 7 Jun 2011 10:31:29 -0600
Subject: [PATCH 110/177] - fixed comments in mdstore.

---
 mdstore/mdstore.c | 95 +++++++++++++++++++++++++++++++++++++++++++++++++++++--
 mdstore/mdstore.h | 41 +++++++++++-------------
 2 files changed, 111 insertions(+), 25 deletions(-)

diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 2197279..a489b52 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -80,6 +80,9 @@ int c2_md_store_init(struct c2_md_store         *md,
         return rc;
 }
 
+/**
+   Finalize mdstore
+ */
 void c2_md_store_fini(struct c2_md_store *md)
 {
         if (md->md_root)
@@ -88,6 +91,12 @@ void c2_md_store_fini(struct c2_md_store *md)
 	c2_addb_ctx_fini(&md->md_addb);
 }
 
+/**
+   Handle create operation described by @attr on @cob. Input @cob
+   is returned by c2_cob_alloc().
+   
+   Error code is returned in error case or zero otherwise.
+*/
 int c2_md_store_create(struct c2_md_store       *md,
                        struct c2_fid            *pfid,
                        struct c2_cob            *cob,
@@ -135,6 +144,11 @@ int c2_md_store_create(struct c2_md_store       *md,
         return rc;
 }
 
+/**
+   Handle link operation described by @pfid and @name. Input
+   cob is so called statdata cob and returned by c2_cob_locate(). 
+   Error code is returned in error case or zero otherwise.
+*/
 int c2_md_store_link(struct c2_md_store         *md, 
                      struct c2_fid              *pfid,
                      struct c2_cob              *cob,
@@ -178,6 +192,16 @@ int c2_md_store_link(struct c2_md_store         *md,
         if (rc)
                 goto out;
 
+        /*
+         * This is what needs updating in parent in normal case but
+         * don't do this because of the following reasons:
+         * - we may not have parent in moment of op execution;
+         * - we can't update times when using it with replicator
+         *   as replicator will do it in setattr fop obtained from
+         *   lustre source fs.
+         * Still we keep this code in place for now in case we need
+         * it for normal mdstore API based on this one.
+         */
 #if 0
         /*
          * Update mtime in parent.
@@ -198,6 +222,11 @@ out:
         return rc;
 }
 
+/**
+   Handle unlink operation described by @pfid and @name. Input
+   cob is so called statdata cob and returned by c2_cob_locate(). 
+   Error code is returned in error case or zero otherwise.
+*/
 int c2_md_store_unlink(struct c2_md_store       *md,
                        struct c2_fid            *pfid,
                        struct c2_cob            *cob,
@@ -287,6 +316,16 @@ int c2_md_store_unlink(struct c2_md_store       *md,
                         goto out;
         }
 
+        /*
+         * This is what needs updating in parent in normal case but
+         * don't do this because of the following reasons:
+         * - we may not have parent in moment of op execution;
+         * - we can't update times when using it with replicator
+         *   as replicator will do it in setattr fop obtained from
+         *   lustre source fs.
+         * Still we keep this code in place for now in case we need
+         * it for normal mdstore API based on this one.
+         */
 #if 0        
         /*
          * Update mtime in parent.
@@ -307,6 +346,11 @@ out:
         return rc;
 }
 
+/**
+   Handle open operation described by @flags on @cob. Input @cob
+   is so called statdata cob and returned by c2_cob_locate(). 
+   Error code is returned in error case or zero otherwise.
+*/
 int c2_md_store_open(struct c2_md_store         *md, 
                      struct c2_cob              *cob,
                      int                         flags,
@@ -325,6 +369,12 @@ int c2_md_store_open(struct c2_md_store         *md,
         return rc;
 }
 
+/**
+   Handle close operation on @cob. Input @cob is so called statdata
+   cob and returned by c2_cob_locate(). 
+
+   Error code is returned in error case or zero otherwise.
+*/
 int c2_md_store_close(struct c2_md_store        *md, 
                       struct c2_cob             *cob,
                       struct c2_db_tx           *tx)
@@ -344,6 +394,13 @@ int c2_md_store_close(struct c2_md_store        *md,
         return rc;
 }
 
+/**
+   Handle rename operation described by params. Input cobs are
+   statdata cobs and returned by c2_cob_locate(). Rest of the
+   arguments are self explanatory.
+
+   Error code is returned in error case or zero otherwise.
+*/
 int c2_md_store_rename(struct c2_md_store       *md, 
                        struct c2_fid            *pfid_tgt,
                        struct c2_fid            *pfid_src,
@@ -386,6 +443,16 @@ int c2_md_store_rename(struct c2_md_store       *md,
         if (rc)
                 goto out;
 
+        /*
+         * This is what needs updating in parent in normal case but
+         * don't do this because of the following reasons:
+         * - we may not have parent in moment of op execution;
+         * - we can't update times when using it with replicator
+         *   as replicator will do it in setattr fop obtained from
+         *   lustre source fs.
+         * Still we keep this code in place for now in case we need
+         * it for normal mdstore API based on this one.
+         */
 #if 0
         cob->co_nsrec.cnr_ctime = now;
 
@@ -457,6 +524,12 @@ out:
         return rc;
 }
 
+/**
+   Handle setattr operation described by @attr on @cob. Input @cob
+   is so called statdata cob and returned by c2_cob_locate(). 
+   
+   Error code is returned in error case or zero otherwise.
+*/
 int c2_md_store_setattr(struct c2_md_store      *md,
                         struct c2_cob           *cob,
                         struct c2_cob_attr      *attr,
@@ -521,6 +594,12 @@ int c2_md_store_setattr(struct c2_md_store      *md,
         return rc;
 }
 
+/**
+   Get attributes of @cob into passed @attr. Input @cob
+   is so called statdata cob and returned by c2_cob_locate(). 
+   
+   Error code is returned in error case or zero otherwise.
+*/
 int c2_md_store_getattr(struct c2_md_store      *md, 
                         struct c2_cob           *cob,
                         struct c2_cob_attr      *attr,
@@ -574,6 +653,12 @@ int c2_md_store_getattr(struct c2_md_store      *md,
         return rc;
 }
 
+/**
+   Handle readdir operation described by @rdpg on @cob. Input @cob
+   is so called statdata cob and returned by c2_cob_locate(). 
+   
+   Error code is returned in error case or something >= 0 otherwise.
+*/
 int c2_md_store_readdir(struct c2_md_store      *md, 
                         struct c2_cob           *cob,
                         struct c2_rdpg          *rdpg,
@@ -721,7 +806,7 @@ int c2_md_store_lookup(struct c2_md_store       *md,
 }
 
 /**
-   Allocate new cob on mdstore @md.
+   Allocate new cob with fid @fid.
 */
 int c2_md_store_alloc(struct c2_md_store        *md, 
                       struct c2_fid             *fid, 
@@ -735,8 +820,12 @@ int c2_md_store_alloc(struct c2_md_store        *md,
         return rc;
 }
 
-/*
- * Get path by fid.
+/**
+   Get path by @fid. Path @path is allocated by c2_alloc() on
+   success and path is saved there. When it is not longer needed
+   it may be freed with c2_free().
+   
+   Error code is returned on error or zero on success.
  */
 int c2_md_store_path(struct c2_md_store *md,
                      struct c2_fid *fid,
diff --git a/mdstore/mdstore.h b/mdstore/mdstore.h
index ea355df..74bf0fb 100644
--- a/mdstore/mdstore.h
+++ b/mdstore/mdstore.h
@@ -196,10 +196,8 @@ int c2_md_store_init(struct c2_md_store *md,
 void c2_md_store_fini(struct c2_md_store *md);
 
 /**
-   Handle link operation described by @req. Input cobs are
-   so called statdata cobs and returned by c2_cob_locate(). 
-   Save result to @rep.
-   
+   Handle link operation described by @pfid and @name. Input
+   cob is so called statdata cob and returned by c2_cob_locate(). 
    Error code is returned in error case or zero otherwise.
 */
 int c2_md_store_link(struct c2_md_store *md, 
@@ -209,10 +207,8 @@ int c2_md_store_link(struct c2_md_store *md,
                      struct c2_db_tx *tx);
                      
 /**
-   Handle unlink operation described by @req. Input cobs are
-   so called statdata cobs and returned by c2_cob_locate(). 
-   Save result to @rep.
-   
+   Handle unlink operation described by @pfid and @name. Input
+   cob is so called statdata cob and returned by c2_cob_locate(). 
    Error code is returned in error case or zero otherwise.
 */
 int c2_md_store_unlink(struct c2_md_store *md, 
@@ -222,9 +218,10 @@ int c2_md_store_unlink(struct c2_md_store *md,
                        struct c2_db_tx *tx);
                        
 /**
-   Handle rename operation described by params. Input cob is
-   statdata cob and returned by c2_cob_locate(). 
-   
+   Handle rename operation described by params. Input cobs are
+   statdata cobs and returned by c2_cob_locate(). Rest of the
+   arguments are self explanatory.
+
    Error code is returned in error case or zero otherwise.
 */
 int c2_md_store_rename(struct c2_md_store *md, 
@@ -238,7 +235,7 @@ int c2_md_store_rename(struct c2_md_store *md,
 
 /**
    Handle create operation described by @attr on @cob. Input @cob
-   is returned by c2_cob_alloc(). Save result to @rep.
+   is returned by c2_cob_alloc().
    
    Error code is returned in error case or zero otherwise.
 */
@@ -249,10 +246,8 @@ int c2_md_store_create(struct c2_md_store *md,
                        struct c2_db_tx *tx);
 
 /**
-   Handle open operation described by @req on @cob. Input @cob
+   Handle open operation described by @flags on @cob. Input @cob
    is so called statdata cob and returned by c2_cob_locate(). 
-   Save result to @rep.
-   
    Error code is returned in error case or zero otherwise.
 */
 int c2_md_store_open(struct c2_md_store *md, 
@@ -261,10 +256,9 @@ int c2_md_store_open(struct c2_md_store *md,
                      struct c2_db_tx *tx);
 
 /**
-   Handle close operation described by @req on @cob. Input @cob
-   is so called statdata cob and returned by c2_cob_locate(). 
-   Save result to @rep. Orphans handled.
-   
+   Handle close operation on @cob. Input @cob is so called statdata
+   cob and returned by c2_cob_locate(). 
+
    Error code is returned in error case or zero otherwise.
 */
 int c2_md_store_close(struct c2_md_store *md, 
@@ -274,7 +268,6 @@ int c2_md_store_close(struct c2_md_store *md,
 /**
    Handle setattr operation described by @attr on @cob. Input @cob
    is so called statdata cob and returned by c2_cob_locate(). 
-   Save result to @rep.
    
    Error code is returned in error case or zero otherwise.
 */
@@ -286,7 +279,6 @@ int c2_md_store_setattr(struct c2_md_store *md,
 /**
    Get attributes of @cob into passed @attr. Input @cob
    is so called statdata cob and returned by c2_cob_locate(). 
-   Save result to @rep.
    
    Error code is returned in error case or zero otherwise.
 */
@@ -298,7 +290,6 @@ int c2_md_store_getattr(struct c2_md_store *md,
 /**
    Handle readdir operation described by @rdpg on @cob. Input @cob
    is so called statdata cob and returned by c2_cob_locate(). 
-   Save result to @rep.
    
    Error code is returned in error case or something >= 0 otherwise.
 */
@@ -332,6 +323,12 @@ int c2_md_store_alloc(struct c2_md_store *md,
                       struct c2_fid *fid,
                       struct c2_cob **cob);
 
+/**
+   Get path by @fid. Path @path is allocated by
+   c2_alloc() on success and path is saved there.
+   When it is not longer needed it may be freed
+   with c2_free().
+ */
 int c2_md_store_path(struct c2_md_store *md,
                      struct c2_fid *fid,
                      char **path);
-- 
1.8.3.2

