From ea9c9c834573ee636f9b640edc3268bad8075669 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Tue, 24 May 2011 09:15:37 -0600
Subject: [PATCH 092/177] - delete fab and omg only if c2_cob_delete() was
 called against zero nsrec; - no pcob is initialized for link and unlink
 operations, parents may not exist in initial scan time; - fixed handling of
 link and unlink cases in intial scan when no objects existing yet.

---
 cob/cob.c           | 59 ++++++++++++++++++-------------------
 mdservice/md_foms.c | 83 ++++++++++++++++++++++++++++-------------------------
 mdstore/mdstore.c   | 30 +++++++++++++------
 mdstore/mdstore.h   |  4 +--
 4 files changed, 97 insertions(+), 79 deletions(-)

diff --git a/cob/cob.c b/cob/cob.c
index 6a9d9dc..9497e25 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -854,39 +854,40 @@ int c2_cob_delete(struct c2_cob *cob, struct c2_db_tx *tx)
         if (rc)
                 goto out;
 
-        /* 
-         * Remove from the fileattr_basic table. 
-         */
-        fabkey.cfb_fid = *cob->co_fid;
-
-        c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_basic,
-			 &fabkey, sizeof fabkey, NULL, 0);
+        if (cob->co_nsrec.cnr_linkno == 0) {
+                /* 
+                 * Remove from the fileattr_basic table. 
+                 */
+                fabkey.cfb_fid = *cob->co_fid;
+                c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_basic,
+			         &fabkey, sizeof fabkey, NULL, 0);
         
-        /* 
-         * Ignore errors; it's a dangling table entry but causes 
-         * no harm. 
-         */
-        c2_table_delete(tx, &pair);
-	c2_db_pair_fini(&pair);
+                /* 
+                 * Ignore errors; it's a dangling table entry but causes 
+                 * no harm. 
+                 */
+                c2_table_delete(tx, &pair);
+	        c2_db_pair_fini(&pair);
 
-        /*
-         * @todo: Omgrec may be shared between multiple objects.
-         * Delete should take this into account as well as update.
-         */
-        omgkey.cok_omgid = cob->co_nsrec.cnr_omgid;
+                /*
+                 * @todo: Omgrec may be shared between multiple objects.
+                 * Delete should take this into account as well as update.
+                 */
+                omgkey.cok_omgid = cob->co_nsrec.cnr_omgid;
 
-        /* 
-         * Remove from the fileattr_omg table. 
-         */
-        c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_omg,
-			 &omgkey, sizeof omgkey, NULL, 0);
+                /* 
+                 * Remove from the fileattr_omg table. 
+                 */
+                c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_omg,
+			         &omgkey, sizeof omgkey, NULL, 0);
         
-        /* 
-         * Ignore errors; it's a dangling table entry but causes 
-         * no harm. 
-         */
-        c2_table_delete(tx, &pair);
-	c2_db_pair_fini(&pair);
+                /* 
+                 * Ignore errors; it's a dangling table entry but causes 
+                 * no harm. 
+                 */
+                c2_table_delete(tx, &pair);
+	        c2_db_pair_fini(&pair);
+	}
 out:
         C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, 
                     c2_addb_func_fail, "cob_delete", rc);
diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index 9e9be95..ff8bba7 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -295,7 +295,6 @@ static int c2_md_link_fom_state(struct c2_fom *fom)
         struct c2_fop_cob        *body;
         struct c2_site           *site;
         struct c2_cob            *cob;
-        struct c2_cob            *pcob;
         struct c2_fop_link       *req;
         struct c2_fop_link_rep   *rep;
         struct c2_fom_md         *fom_obj;
@@ -325,31 +324,39 @@ static int c2_md_link_fom_state(struct c2_fom *fom)
         body = &req->l_body;
 
         c2_md_make_fid(&pfid, &body->b_pfid);
-        rc = c2_md_store_locate(site->s_mdstore, &pfid, &pcob, 
-                                C2_MD_STORE_LOCATE_STORED,
-                                &ctx->fc_tx->tx_dbtx);
-        if (rc)
-                goto out;
-
         c2_md_make_fid(&tfid, &body->b_tfid);
-        rc = c2_md_store_locate(site->s_mdstore, &tfid, &cob, 
-                                C2_MD_STORE_LOCATE_STORED,
-                                &ctx->fc_tx->tx_dbtx);
-        if (rc) {
-                c2_cob_put(pcob);
-                goto out;
-        }
 
         rep = c2_fop_data(fop_rep);
         attr.ca_name = req->l_name.n_name;
         attr.ca_namelen = req->l_name.n_count;
 
-        if (req->l_body.b_version > cob->co_nsrec.cnr_version) {
-                rc = c2_md_store_link(site->s_mdstore, pcob,
-                                      cob, &attr, &ctx->fc_tx->tx_dbtx);
+        rc = c2_md_store_locate(site->s_mdstore, &tfid, &cob, 
+                                C2_MD_STORE_LOCATE_STORED,
+                                &ctx->fc_tx->tx_dbtx);
+        if (rc == 0) {
+                if (req->l_body.b_version > cob->co_nsrec.cnr_version) {
+                        rc = c2_md_store_link(site->s_mdstore, &pfid,
+                                              cob, &attr, 
+                                              &ctx->fc_tx->tx_dbtx);
+                }
+        } else if (rc == -ENOENT) {
+                /*
+                 * No object may exist in db yet. Let's convert this
+                 * link into a create. Later when initial scan finds
+                 * other names of this object we will handle it in
+                 * create state function.
+                 */
+                C2_ASSERT(body->b_bias & C2_MD_BIAS_SCAN_IN_PROGRESS);
+                rc = c2_md_store_alloc(site->s_mdstore, &tfid, &cob);
+                if (rc)
+                        goto out;
+
+                rc = c2_md_store_create(site->s_mdstore, &pfid,
+                                        cob, &attr, &ctx->fc_tx->tx_dbtx);
+        } else {
+                goto out;
         }
         c2_cob_put(cob);
-        c2_cob_put(pcob);
         if (rc == 0) {
                 svc = fom->fo_fop_ctx->fc_service;
 	        svc->s_ops->so_reply_post(svc, fop_rep, ctx->fc_cookie);
@@ -384,7 +391,6 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
         struct c2_site           *site;
         struct c2_cob            *cob;
         struct c2_cob            *ncob;
-        struct c2_cob            *pcob;
         struct c2_fop_unlink     *req;
         struct c2_fop_unlink_rep *rep;
         struct c2_fom_md         *fom_obj;
@@ -414,27 +420,23 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
         body = &req->u_body;
 
         c2_md_make_fid(&pfid, &body->b_pfid);
-        rc = c2_md_store_locate(site->s_mdstore, &pfid, &pcob, 
-                                C2_MD_STORE_LOCATE_STORED,
-                                &ctx->fc_tx->tx_dbtx);
-        if (rc)
-                goto out;
-
         c2_md_make_fid(&tfid, &body->b_tfid);
 
-        rc = c2_md_store_locate(site->s_mdstore, &tfid, &cob, 
-                                C2_MD_STORE_LOCATE_STORED,
-                                &ctx->fc_tx->tx_dbtx);
-        if (rc) {
-                c2_cob_put(pcob);
-                goto out;
-        }
-
         rep = c2_fop_data(fop_rep);
         attr.ca_name = req->u_name.n_name;
         attr.ca_namelen = req->u_name.n_count;
 
+        rc = c2_md_store_locate(site->s_mdstore, &tfid, &cob, 
+                                C2_MD_STORE_LOCATE_STORED,
+                                &ctx->fc_tx->tx_dbtx);
         if (body->b_bias & C2_MD_BIAS_SCAN_IN_PROGRESS) {
+                if (rc == -ENOENT) {
+                        rc = 0;
+                        goto out;
+                } else if (rc) {
+                        goto out;
+                }
+                
                 c2_cob_make_nskey(&nskey, &pfid, attr.ca_name, 
                                   attr.ca_namelen);
                 
@@ -443,27 +445,30 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
                                    &ctx->fc_tx->tx_dbtx);
                 c2_free(nskey);
                 if (rc)
-                        goto out_put_cobs;
+                        goto out_put_cob;
                 
                 rc = c2_md_store_getattr(site->s_mdstore, ncob, 
                                          &attr, &ctx->fc_tx->tx_dbtx);
                 if (rc) {
                         c2_cob_put(ncob);
-                        goto out_put_cobs;
+                        goto out_put_cob;
                 }
                 attr.ca_zombie = 1;
                 rc = c2_md_store_setattr(site->s_mdstore, ncob, 
                                          &attr, &ctx->fc_tx->tx_dbtx);
                 c2_cob_put(ncob);
         } else {
+                if (rc)
+                        goto out;
+
                 if (req->u_body.b_version > cob->co_nsrec.cnr_version) {
-                        rc = c2_md_store_unlink(site->s_mdstore, pcob,
-                                                cob, &attr, &ctx->fc_tx->tx_dbtx);
+                        rc = c2_md_store_unlink(site->s_mdstore, &pfid,
+                                                cob, &attr, 
+                                                &ctx->fc_tx->tx_dbtx);
                 }
         }
-out_put_cobs:
+out_put_cob:
         c2_cob_put(cob);
-        c2_cob_put(pcob);
         if (rc == 0) {
                 svc = fom->fo_fop_ctx->fc_service;
 	        svc->s_ops->so_reply_post(svc, fop_rep, ctx->fc_cookie);
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 75c5d2d..8d4466a 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -136,7 +136,7 @@ int c2_md_store_create(struct c2_md_store       *md,
 }
 
 int c2_md_store_link(struct c2_md_store         *md, 
-                     struct c2_cob              *pcob,
+                     struct c2_fid              *pfid,
                      struct c2_cob              *cob,
                      struct c2_cob_attr         *attr,
                      struct c2_db_tx            *tx)
@@ -145,13 +145,15 @@ int c2_md_store_link(struct c2_md_store         *md,
         time_t                 now;
         int                    rc;
         
-        C2_ASSERT(pcob != NULL);
+        C2_ASSERT(pfid != NULL);
         C2_ASSERT(cob != NULL);
 
+        time(&now);
+
         /*
          * Link @nskey to a file described with @cob
          */        
-        c2_cob_make_nskey(&nskey, pcob->co_fid, attr->ca_name, 
+        c2_cob_make_nskey(&nskey, pfid, attr->ca_name, 
                           attr->ca_namelen);
         rc = c2_cob_add_name(cob, nskey, tx);
         c2_free(nskey);
@@ -168,16 +170,20 @@ int c2_md_store_link(struct c2_md_store         *md,
         if (rc)
                 goto out;
 
+#if 0
         /*
          * Update mtime in parent.
          */
-        pcob->co_nsrec.cnr_mtime = time(&now);
+        pcob->co_nsrec.cnr_mtime = now;
+        pcob->co_nsrec.cnr_ctime = now;
+        pcob->co_nsrec.cnr_atime = now;
                          
         /*
          * Update on-store cob so that updated time
          * is saved.
          */
         rc = c2_cob_update(pcob, &pcob->co_nsrec,  NULL, NULL, tx);
+#endif
 out:
         C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, 
                     c2_addb_func_fail, "md_link", rc);
@@ -185,7 +191,7 @@ out:
 }
 
 int c2_md_store_unlink(struct c2_md_store       *md,
-                       struct c2_cob            *pcob,
+                       struct c2_fid            *pfid,
                        struct c2_cob            *cob,
                        struct c2_cob_attr       *attr,
                        struct c2_db_tx          *tx)
@@ -196,16 +202,18 @@ int c2_md_store_unlink(struct c2_md_store       *md,
         time_t                 now;
         int                    rc;
     
-        C2_ASSERT(pcob != NULL);
+        C2_ASSERT(pfid != NULL);
         C2_ASSERT(cob != NULL);
 
         C2_PRE(cob->co_nsrec.cnr_nlink > 0);
         
+        time(&now);
+        
         /*
          * Check for hardlinks.
          */
         if (!S_ISDIR(cob->co_omgrec.cor_mode)) {
-                c2_cob_make_nskey(&nskey, pcob->co_fid, 
+                c2_cob_make_nskey(&nskey, pfid, 
                                   attr->ca_name, attr->ca_namelen);
 
                 /*
@@ -263,17 +271,21 @@ int c2_md_store_unlink(struct c2_md_store       *md,
                 if (rc)
                         goto out;
         }
-        
+
+#if 0        
         /*
          * Update mtime in parent.
          */
-        pcob->co_nsrec.cnr_mtime = time(&now);
+        pcob->co_nsrec.cnr_mtime = now;
+        pcob->co_nsrec.cnr_ctime = now;
+        pcob->co_nsrec.cnr_atime = now;
                          
         /*
          * Update on-store cob so that updated time and nlink
          * are saved.
          */
         rc = c2_cob_update(pcob, &pcob->co_nsrec,  NULL, NULL, tx);
+#endif
 out:
         C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, 
                     c2_addb_func_fail, "md_unlink", rc);
diff --git a/mdstore/mdstore.h b/mdstore/mdstore.h
index 4344c01..c3e44c6 100644
--- a/mdstore/mdstore.h
+++ b/mdstore/mdstore.h
@@ -197,7 +197,7 @@ void c2_md_store_fini(struct c2_md_store *md);
    Error code is returned in error case or zero otherwise.
 */
 int c2_md_store_link(struct c2_md_store *md, 
-                     struct c2_cob *pcob, 
+                     struct c2_fid *pfid, 
                      struct c2_cob *cob, 
                      struct c2_cob_attr *attr,
                      struct c2_db_tx *tx);
@@ -210,7 +210,7 @@ int c2_md_store_link(struct c2_md_store *md,
    Error code is returned in error case or zero otherwise.
 */
 int c2_md_store_unlink(struct c2_md_store *md, 
-                       struct c2_cob *pcob, 
+                       struct c2_fid *pfid, 
                        struct c2_cob *cob,
                        struct c2_cob_attr *attr,
                        struct c2_db_tx *tx);
-- 
1.8.3.2

