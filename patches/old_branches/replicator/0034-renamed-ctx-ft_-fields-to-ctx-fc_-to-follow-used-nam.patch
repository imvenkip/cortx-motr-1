From 3f43918161f778653e88f002d27be63f6a2325a2 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Thu, 31 Mar 2011 03:08:15 -0600
Subject: [PATCH 034/177] - renamed ctx->ft_* fields to ctx->fc_* to follow
 used naming pattern

---
 addb/addb_fop.c     |  2 +-
 fop/fop.h           | 10 +++++-----
 ioservice/io_foms.c | 16 ++++++++--------
 mdservice/md_foms.c | 34 +++++++++++++++++-----------------
 mdstore/mdstore.c   | 20 ++++++++++----------
 net/ut/client.c     |  4 ++--
 reqh/reqh.c         | 24 ++++++++++++------------
 stob/ut/server.c    | 12 ++++++------
 8 files changed, 61 insertions(+), 61 deletions(-)

diff --git a/addb/addb_fop.c b/addb/addb_fop.c
index caefd27..11dca5b 100644
--- a/addb/addb_fop.c
+++ b/addb/addb_fop.c
@@ -131,7 +131,7 @@ int c2_addb_handler(struct c2_fop *fop, struct c2_fop_ctx *ctx)
 		ex->ar_rc = 0;
 	}
 
-	c2_net_reply_post(ctx->ft_service, reply, ctx->fc_cookie);
+	c2_net_reply_post(ctx->fc_service, reply, ctx->fc_cookie);
 	return 1;
 }
 #endif
diff --git a/fop/fop.h b/fop/fop.h
index 5c790fa..b262549 100644
--- a/fop/fop.h
+++ b/fop/fop.h
@@ -102,24 +102,24 @@ struct c2_fop_ctx {
         /**
            Service that fop is executed on behlf of.
         */
-	struct c2_service  *ft_service;
+	struct c2_service  *fc_service;
 	/**
 	   Fol that reqh uses.
 	*/
-	struct c2_fol      *ft_fol;
+	struct c2_fol      *fc_fol;
 	/**
 	   Site that fop is executed on behalf of. Site contains devices
 	   stack and allows accessing them from ->fop_execute().
 	*/
-        struct c2_site     *ft_site;
+        struct c2_site     *fc_site;
         /**
            Transaction handle.
         */
-        struct c2_dtx      *ft_tx;
+        struct c2_dtx      *fc_tx;
         /**
            Fop handling environment.
         */
-        struct c2_fop_env  *ft_env;
+        struct c2_fop_env  *fc_env;
 	/**
 	   Service-dependent cookie identifying fop execution. Passed to
 	   c2_service_ops::so_reply_post() to post a reply.
diff --git a/ioservice/io_foms.c b/ioservice/io_foms.c
index 5c0f9e2..f1a6895 100644
--- a/ioservice/io_foms.c
+++ b/ioservice/io_foms.c
@@ -196,7 +196,7 @@ int c2_io_fom_cob_rwv_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
 	/*
@@ -236,10 +236,10 @@ int c2_io_fom_cob_rwv_state(struct c2_fom *fom)
 	 */
 	 
 	/*
-	 * @todo: Use ctx->ft_tx prepared by reqh.
+	 * @todo: Use ctx->fc_tx prepared by reqh.
 	 */
 	result = site->s_datastore->ds_dom->sd_ops->sdo_tx_make(
-	        site->s_datastore->ds_dom, ctx->ft_tx);
+	        site->s_datastore->ds_dom, ctx->fc_tx);
 	C2_ASSERT(result == 0);
 
 	/*
@@ -248,7 +248,7 @@ int c2_io_fom_cob_rwv_state(struct c2_fom *fom)
 	result = c2_stob_find(site->s_datastore->ds_dom, 
 	        (const struct c2_stob_id*)&stobid, &fom_obj->fcrw_stob);
 	C2_ASSERT(result == 0);
-	result = c2_stob_locate(fom_obj->fcrw_stob, ctx->ft_tx);
+	result = c2_stob_locate(fom_obj->fcrw_stob, ctx->fc_tx);
 	C2_ASSERT(result == 0);
 
 	/*
@@ -320,7 +320,7 @@ int c2_io_fom_cob_rwv_state(struct c2_fom *fom)
 	 * Launch IO and wait for status. 
 	 */
 	result = c2_stob_io_launch(fom_obj->fcrw_st_io, fom_obj->fcrw_stob, 
-	                           ctx->ft_tx, NULL);
+	                           ctx->fc_tx, NULL);
 	if (result == 0)
 		c2_chan_wait(&clink);
 
@@ -347,10 +347,10 @@ int c2_io_fom_cob_rwv_state(struct c2_fom *fom)
 	c2_stob_put(fom_obj->fcrw_stob);
 
 	if (result != -EDEADLK)	{
-		rc = c2_db_tx_commit(&ctx->ft_tx->tx_dbtx);
+		rc = c2_db_tx_commit(&ctx->fc_tx->tx_dbtx);
 		C2_ASSERT(rc == 0);
 	} else {
-		rc = c2_db_tx_abort(&ctx->ft_tx->tx_dbtx);
+		rc = c2_db_tx_abort(&ctx->fc_tx->tx_dbtx);
 		C2_ASSERT(rc == 0);
 		/* This should go into FAILURE phase */
 		fom_obj->fcrw_gen.fo_phase = FOPH_FAILED;
@@ -360,7 +360,7 @@ int c2_io_fom_cob_rwv_state(struct c2_fom *fom)
 	/*
 	 * Send reply FOP
 	 */
-	c2_net_reply_post(fom->fo_fop_ctx->ft_service, fom_obj->fcrw_rep_fop, 
+	c2_net_reply_post(fom->fo_fop_ctx->fc_service, fom_obj->fcrw_rep_fop, 
 			  fom->fo_fop_ctx->fc_cookie);
 
 	/* This goes into DONE phase */
diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index 67a7c89..ef8ebf0 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -84,7 +84,7 @@ static int c2_md_create_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         rc = c2_md_store_alloc(site->s_mdstore, &cob);
@@ -131,7 +131,7 @@ static int c2_md_link_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         req = c2_fop_data(fop);
@@ -141,7 +141,7 @@ static int c2_md_link_fom_state(struct c2_fom *fom)
 
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_STORE_LOCATE_STORE,
-                                &ctx->ft_tx->tx_dbtx);
+                                &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
 
@@ -184,7 +184,7 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         req = c2_fop_data(fop);
@@ -194,7 +194,7 @@ static int c2_md_unlink_fom_state(struct c2_fom *fom)
 
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_STORE_LOCATE_STORE,
-                                &ctx->ft_tx->tx_dbtx);
+                                &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
 
@@ -237,7 +237,7 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         req = c2_fop_data(fop);
@@ -247,7 +247,7 @@ static int c2_md_rename_fom_state(struct c2_fom *fom)
 
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_STORE_LOCATE_STORE,
-                                &ctx->ft_tx->tx_dbtx);
+                                &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
 
@@ -290,7 +290,7 @@ static int c2_md_open_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         req = c2_fop_data(fop);
@@ -300,7 +300,7 @@ static int c2_md_open_fom_state(struct c2_fom *fom)
 
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_STORE_LOCATE_STORE,
-                                &ctx->ft_tx->tx_dbtx);
+                                &ctx->fc_tx->tx_dbtx);
         if (rc == -ENOENT) {
                 /*
                  * @todo: create file if open mode says so.
@@ -343,7 +343,7 @@ static int c2_md_close_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         req = c2_fop_data(fop);
@@ -353,7 +353,7 @@ static int c2_md_close_fom_state(struct c2_fom *fom)
 
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_STORE_LOCATE_OPEN,
-                                &ctx->ft_tx->tx_dbtx);
+                                &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
         rep = c2_fop_data(fop_rep);
@@ -395,7 +395,7 @@ static int c2_md_setattr_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         req = c2_fop_data(fop);
@@ -405,7 +405,7 @@ static int c2_md_setattr_fom_state(struct c2_fom *fom)
 
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_STORE_LOCATE_STORE,
-                                &ctx->ft_tx->tx_dbtx);
+                                &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
 
@@ -448,7 +448,7 @@ static int c2_md_getattr_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         req = c2_fop_data(fop);
@@ -458,7 +458,7 @@ static int c2_md_getattr_fom_state(struct c2_fom *fom)
 
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_STORE_LOCATE_STORE,
-                                &ctx->ft_tx->tx_dbtx);
+                                &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
 
@@ -501,7 +501,7 @@ static int c2_md_readdir_fom_state(struct c2_fom *fom)
         ctx = fom->fo_fop_ctx;
         C2_ASSERT(ctx != NULL);
 
-        site = ctx->ft_site;
+        site = ctx->fc_site;
         C2_ASSERT(site != NULL);
 
         req = c2_fop_data(fop);
@@ -511,7 +511,7 @@ static int c2_md_readdir_fom_state(struct c2_fom *fom)
 
         rc = c2_md_store_locate(site->s_mdstore, &fid, &cob, 
                                 C2_MD_STORE_LOCATE_STORE,
-                                &ctx->ft_tx->tx_dbtx);
+                                &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
 
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 6fd5ff6..7490a71 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -111,7 +111,7 @@ int c2_md_store_create(struct c2_md_store *md,
         omgrec.cor_mode = body->b_mode;
 
         rc = c2_cob_create(cob, nskey, &nsrec, &fabrec, &omgrec, 0,
-                           &ctx->ft_tx->tx_dbtx);
+                           &ctx->fc_tx->tx_dbtx);
         c2_free(nskey);
         return rc;
 }
@@ -132,14 +132,14 @@ int c2_md_store_link(struct c2_md_store *md,
          * Link @nskey to a file described with @cob
          */        
         c2_md_make_nskey(&nskey, &body->b_pfid, &req->l_name);
-        rc = c2_cob_add_name(cob, nskey, &ctx->ft_tx->tx_dbtx);
+        rc = c2_cob_add_name(cob, nskey, &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
         /*
          * Update nlink in statdata and save it to storage. 
          */
         cob->co_nsrec.cnr_nlink++;
-        rc = c2_cob_update(cob, &ctx->ft_tx->tx_dbtx);
+        rc = c2_cob_update(cob, &ctx->fc_tx->tx_dbtx);
 out:
         c2_free(nskey);
         return rc;
@@ -175,7 +175,7 @@ int c2_md_store_unlink(struct c2_md_store *md,
                 /*
                  * @todo: orphans handling.
                  */
-                rc = c2_cob_delete(cob, &ctx->ft_tx->tx_dbtx);
+                rc = c2_cob_delete(cob, &ctx->fc_tx->tx_dbtx);
                 goto out;
         }
         
@@ -191,7 +191,7 @@ int c2_md_store_unlink(struct c2_md_store *md,
                 oikey.cok_linkno++;
                 
                 rc = c2_cob_locate(&md->md_dom, &oikey, &ncob, 
-                                   &ctx->ft_tx->tx_dbtx);
+                                   &ctx->fc_tx->tx_dbtx);
                 if (rc)
                         goto out;
                 cob = ncob;
@@ -201,14 +201,14 @@ int c2_md_store_unlink(struct c2_md_store *md,
          * Update stat data on store. 
          */
         cob->co_nsrec = nsrec;
-        rc = c2_cob_update(cob, &ctx->ft_tx->tx_dbtx);
+        rc = c2_cob_update(cob, &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
 
         /*
          * Kill name whatever it was.
          */
-        rc = c2_cob_del_name(cob, nskey, &ctx->ft_tx->tx_dbtx);
+        rc = c2_cob_del_name(cob, nskey, &ctx->fc_tx->tx_dbtx);
 out:
         if (ncob)
                 c2_cob_put(ncob);
@@ -277,7 +277,7 @@ static int c2_md_store_rename_sanity(struct c2_md_store *md,
                 oikey.cok_linkno = 0;
 
                 rc = c2_cob_locate(&md->md_dom, &oikey, &tgt, 
-                                   &ctx->ft_tx->tx_dbtx);
+                                   &ctx->fc_tx->tx_dbtx);
                 if (rc)
                         return rc;
                 /*
@@ -329,7 +329,7 @@ int c2_md_store_rename(struct c2_md_store *md,
         c2_md_make_nskey(&srckey, &sbody->b_pfid, &req->r_sname);
         c2_md_make_nskey(&tgtkey, &tbody->b_pfid, &req->r_tname);
 
-        rc = c2_cob_update_name(cob, srckey, tgtkey, &ctx->ft_tx->tx_dbtx);
+        rc = c2_cob_update_name(cob, srckey, tgtkey, &ctx->fc_tx->tx_dbtx);
         c2_free(srckey);
         c2_free(tgtkey);
         
@@ -371,7 +371,7 @@ int c2_md_store_setattr(struct c2_md_store *md,
         C2_SET0(&omgrec);
 
         rc = c2_cob_setattr(cob, &nsrec, &fabrec, &omgrec, 
-                            &ctx->ft_tx->tx_dbtx);
+                            &ctx->fc_tx->tx_dbtx);
         
         return rc;
 }
diff --git a/net/ut/client.c b/net/ut/client.c
index ed95ccf..87d649e 100644
--- a/net/ut/client.c
+++ b/net/ut/client.c
@@ -98,7 +98,7 @@ int nettest_handler(struct c2_fop *fop, struct c2_fop_ctx *ctx)
 	/* return the square of the requested number */
         ex->siq_rc =in->siq_rc * in->siq_rc;
 
-        c2_net_reply_post(ctx->ft_service, reply, ctx->fc_cookie);
+        c2_net_reply_post(ctx->fc_service, reply, ctx->fc_cookie);
         return 1;
 }
 
@@ -108,7 +108,7 @@ static int nettest_service_handler(struct c2_service *service,
 {
         struct c2_fop_ctx ctx;
 
-        ctx.ft_service = service;
+        ctx.fc_service = service;
         ctx.fc_cookie  = cookie;
         /* printf("Got fop: code = %d, name = %s\n", */
 	/*        fop->f_type->ft_code, fop->f_type->ft_name); */
diff --git a/reqh/reqh.c b/reqh/reqh.c
index 5ee89ae..c82afbf 100644
--- a/reqh/reqh.c
+++ b/reqh/reqh.c
@@ -46,21 +46,14 @@ int c2_reqh_fop_handle(struct c2_reqh *reqh, struct c2_fop *fop)
 
         c2_db_tx_init(&tx.tx_dbtx, reqh->rh_site->s_mdstore->md_dom.cd_dbenv, 0);
 
-        ctx.ft_site = reqh->rh_site;
-        ctx.ft_fol  = reqh->rh_fol;
-        ctx.ft_env = &env;
-        ctx.ft_tx = &tx;
+        ctx.fc_site = reqh->rh_site;
+        ctx.fc_fol  = reqh->rh_fol;
+        ctx.fc_env = &env;
+        ctx.fc_tx = &tx;
 
-//	ctx.ft_service = s;
+//	ctx.fc_service = s;
 //	ctx.fc_cookie  = cookie;
 
-        /*
-         * Add this fop to the fol.
-         */
-        result = c2_fop_fol_rec_add(fop, ctx.ft_fol, &tx.tx_dbtx);
-        if (result)
-                goto out;
-
 	/*
 	 * Reqh generic phases will be run here that will do 
 	 * the standard actions like authentication, authorization,
@@ -80,6 +73,13 @@ int c2_reqh_fop_handle(struct c2_reqh *reqh, struct c2_fop *fop)
                         goto out_fini;
         }
 
+        /*
+         * Add this fop to the fol.
+         */
+        result = c2_fop_fol_rec_add(fop, ctx.fc_fol, &tx.tx_dbtx);
+        if (result)
+                goto out_fini;
+
 	/* 
 	 * Start the FOM.
 	 */
diff --git a/stob/ut/server.c b/stob/ut/server.c
index d0b398c..7125327 100644
--- a/stob/ut/server.c
+++ b/stob/ut/server.c
@@ -89,7 +89,7 @@ int create_handler(struct c2_fop *fop, struct c2_fop_ctx *ctx)
 	result = c2_stob_create(obj, &tx);
 	C2_ASSERT(result == 0);
 	ex->sicr_rc = 0;
-	c2_net_reply_post(ctx->ft_service, reply, ctx->fc_cookie);
+	c2_net_reply_post(ctx->fc_service, reply, ctx->fc_cookie);
 
 	c2_stob_put(obj);
 
@@ -182,7 +182,7 @@ int read_handler(struct c2_fop *fop, struct c2_fop_ctx *ctx)
 			C2_ASSERT(rc == 0);
 		}
 	}
-	c2_net_reply_post(ctx->ft_service, reply, ctx->fc_cookie);
+	c2_net_reply_post(ctx->fc_service, reply, ctx->fc_cookie);
 
 	return 1;
 }
@@ -268,7 +268,7 @@ int write_handler(struct c2_fop *fop, struct c2_fop_ctx *ctx)
 			C2_ASSERT(rc == 0);
 		}
 	}
-	c2_net_reply_post(ctx->ft_service, reply, ctx->fc_cookie);
+	c2_net_reply_post(ctx->fc_service, reply, ctx->fc_cookie);
 
 	return 1;
 }
@@ -287,7 +287,7 @@ int quit_handler(struct c2_fop *fop, struct c2_fop_ctx *ctx)
 	ex->siq_rc = 42;
 	stop = true;
 
-	c2_net_reply_post(ctx->ft_service, reply, ctx->fc_cookie);
+	c2_net_reply_post(ctx->fc_service, reply, ctx->fc_cookie);
 	return 1;
 }
 
@@ -297,14 +297,14 @@ static int io_handler(struct c2_service *service, struct c2_fop *fop,
 	struct c2_fop_ctx ctx;
 	int               result;
 
-	ctx.ft_service = service;
+	ctx.fc_service = service;
 	ctx.fc_cookie  = cookie;
 
 	/* 
 	 * FOMs are implemented only for read and write operations 
 	 */
 	if ((fop->f_type->ft_code >= c2_io_service_readv_opcode)) {
-	        result = c2_reqh_fop_handle(NULL/*service->reqh*/, fop);
+	        result = c2_reqh_fop_handle(NULL/*reqh*/, fop);
 		return result;
 	} else {
 	        result = fop->f_type->ft_ops->fto_execute(fop, &ctx);
-- 
1.8.3.2

