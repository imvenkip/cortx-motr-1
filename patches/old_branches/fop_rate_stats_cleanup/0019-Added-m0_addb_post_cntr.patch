From fb5937c47087dd92babbe65e9430cc01c63c73ca Mon Sep 17 00:00:00 2001
From: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
Date: Tue, 1 Apr 2014 18:23:43 +0530
Subject: [PATCH 19/20]  - Added m0_addb_post_cntr().

---
 addb/addb.h                | 10 ++++++++++
 addb/addb_counter.c        | 11 +++++++++++
 fop/fom.c                  |  9 +++------
 ioservice/io_service.c     | 12 ++++--------
 m0t1fs/linux_kernel/file.c |  8 +++-----
 net/tm.c                   | 11 +++--------
 rm/rm_service.c            |  6 ++----
 rpc/rpc_machine.c          |  9 ++-------
 8 files changed, 38 insertions(+), 38 deletions(-)

diff --git a/addb/addb.h b/addb/addb.h
index 0e66318..b51247b 100644
--- a/addb/addb.h
+++ b/addb/addb.h
@@ -686,6 +686,16 @@ M0_INTERNAL uint64_t m0_addb_counter_nr(const struct m0_addb_counter *c);
 M0_INTERNAL void m0__addb_counter_reset(struct m0_addb_counter *c);
 
 /**
+ * Post ADDB counter values if samples collected.
+ * @param mc Specify ADDB machine.
+ * @param cv Specify ADDB context vector.
+ * @param c  Specify ADDB counter.
+ */
+M0_INTERNAL void m0_addb_post_cntr(struct m0_addb_mc       *mc,
+                                   struct m0_addb_ctx     **cv,
+                                   struct m0_addb_counter  *c);
+
+/**
  * State machine counter data object
  *
  * This object efficiently maintains the equivalent of an array
diff --git a/addb/addb_counter.c b/addb/addb_counter.c
index 50f49ba..6dcd5f7 100644
--- a/addb/addb_counter.c
+++ b/addb/addb_counter.c
@@ -313,6 +313,17 @@ M0_INTERNAL void m0__addb_counter_reset(struct m0_addb_counter *c)
 }
 M0_EXPORTED(m0__addb_counter_reset);
 
+M0_INTERNAL void m0_addb_post_cntr(struct m0_addb_mc       *mc,
+				   struct m0_addb_ctx     **cv,
+				   struct m0_addb_counter  *c)
+{
+	M0_PRE(addb_counter_invariant(c));
+
+	if (m0_addb_counter_nr(c) > 0)
+                M0_ADDB_POST_CNTR(mc, cv, c);
+}
+M0_EXPORTED(m0_addb_post_cntr);
+
 M0_INTERNAL void m0_addb_sm_counter_init(struct m0_addb_sm_counter *c,
 					 const struct m0_addb_rec_type *rt,
 					 void *data, size_t data_sz)
diff --git a/fop/fom.c b/fop/fom.c
index dae82cd..2be1dde 100644
--- a/fop/fom.c
+++ b/fop/fom.c
@@ -867,12 +867,9 @@ static void loc_ast_post_stats(struct m0_sm_group *grp, struct m0_sm_ast *ast)
 	struct m0_addb_ctx         *cv[] = {&loc->fl_addb_ctx, NULL};
 	struct m0_addb_mc          *mc = &loc->fl_dom->fd_reqh->rh_addb_mc;
 
-	if (m0_addb_counter_nr(&loc->fl_stat_run_times) > 0)
-		M0_ADDB_POST_CNTR(mc, cv, &loc->fl_stat_run_times);
-	if (m0_addb_counter_nr(&loc->fl_stat_sched_wait_times) > 0)
-		M0_ADDB_POST_CNTR(mc, cv, &loc->fl_stat_sched_wait_times);
-	if (m0_addb_counter_nr(&fop_rate_monitor->frm_addb_ctr) > 0)
-		M0_ADDB_POST_CNTR(mc, cv, &fop_rate_monitor->frm_addb_ctr);
+	m0_addb_post_cntr(mc, cv, &loc->fl_stat_run_times);
+	m0_addb_post_cntr(mc, cv, &loc->fl_stat_sched_wait_times);
+	m0_addb_post_cntr(mc, cv, &fop_rate_monitor->frm_addb_ctr);
 
 	M0_ADDB_POST(mc, &m0_addb_rt_fl_runq_nr, cv, loc->fl_runq_nr);
 	M0_ADDB_POST(mc, &m0_addb_rt_fl_wail_nr, cv, loc->fl_wail_nr);
diff --git a/ioservice/io_service.c b/ioservice/io_service.c
index bcb678d..8b6363e 100644
--- a/ioservice/io_service.c
+++ b/ioservice/io_service.c
@@ -597,6 +597,7 @@ static void ios_stats_post_addb(struct m0_reqh_service *service)
 	struct m0_reqh_io_service *serv_obj;
 	struct m0_reqh            *reqh = service->rs_reqh;
 	struct m0_addb_ctx        *cv[] = { &service->rs_addb_ctx, NULL };
+	struct m0_addb_mc         *mc = &reqh->rh_addb_mc;
 	int                        i;
 
 	serv_obj = container_of(service, struct m0_reqh_io_service, rios_gen);
@@ -606,14 +607,9 @@ static void ios_stats_post_addb(struct m0_reqh_service *service)
 		struct m0_addb_io_stats *stats;
 
 		stats = &serv_obj->rios_rwfom_stats[i];
-#undef CNTR_POST
-#define CNTR_POST(n)							\
-		if (m0_addb_counter_nr(&stats->ais_##n##_cntr) > 0)	\
-			M0_ADDB_POST_CNTR(&reqh->rh_addb_mc, cv,	\
-					  &stats->ais_##n##_cntr)
-		CNTR_POST(sizes);
-		CNTR_POST(times);
-#undef CNTR_POST
+
+		m0_addb_post_cntr(mc, cv, &stats->ais_sizes_cntr);
+		m0_addb_post_cntr(mc, cv, &stats->ais_times_cntr);
 	}
 }
 
diff --git a/m0t1fs/linux_kernel/file.c b/m0t1fs/linux_kernel/file.c
index a903361..e8ebf25 100644
--- a/m0t1fs/linux_kernel/file.c
+++ b/m0t1fs/linux_kernel/file.c
@@ -4247,11 +4247,9 @@ static void m0t1fs_addb_stat_post_counters(struct m0t1fs_sb *csb)
 #undef CNTR_POST
 #define CNTR_POST(_mode_, _n_)						\
 	io_stats = &csb->csb_##_mode_##_stats[i];			\
-	if (m0_addb_counter_nr(&io_stats->ais_##_n_##_cntr) > 0) {	\
-		M0_ADDB_POST_CNTR(&m0_addb_gmc,				\
-				  M0_ADDB_CTX_VEC(&m0t1fs_addb_ctx),	\
-				  &io_stats->ais_##_n_##_cntr);		\
-	}
+	m0_addb_post_cntr(&m0_addb_gmc,					\
+			  M0_ADDB_CTX_VEC(&m0t1fs_addb_ctx),		\
+			  &io_stats->ais_##_n_##_cntr);
 
 	if (now >= next_post || next_post == 0) {
 		for (i = 0; i < ARRAY_SIZE(csb->csb_io_stats); ++i) {
diff --git a/net/tm.c b/net/tm.c
index fda8cb9..eba5511 100644
--- a/net/tm.c
+++ b/net/tm.c
@@ -385,14 +385,9 @@ M0_INTERNAL void m0_net__tm_stats_post_addb(struct m0_net_transfer_mc *tm)
 	cv[0] = &tm->ntm_addb_ctx;
 	cv[1] = NULL;
 
-#undef POST_CNTR_NZ
-#define POST_CNTR_NZ(n)							\
-	if (m0_addb_counter_nr(&tm->ntm_cntr_##n) > 0)			\
-		M0_ADDB_POST_CNTR(tm->ntm_addb_mc, cv, &tm->ntm_cntr_##n)
-	POST_CNTR_NZ(msg);
-	POST_CNTR_NZ(data);
-	POST_CNTR_NZ(rb);
-#undef POST_CNTR_NZ
+	m0_addb_post_cntr(tm->ntm_addb_mc, cv, &tm->ntm_cntr_msg);
+	m0_addb_post_cntr(tm->ntm_addb_mc, cv, &tm->ntm_cntr_data);
+	m0_addb_post_cntr(tm->ntm_addb_mc, cv, &tm->ntm_cntr_rb);
 
 	for (i = 0; i < M0_NET_QT_NR; ++i) {
 		struct m0_net_qstats qs;
diff --git a/rm/rm_service.c b/rm/rm_service.c
index 5737330..2f2f6f4 100644
--- a/rm/rm_service.c
+++ b/rm/rm_service.c
@@ -352,11 +352,9 @@ static void rms_stats_post_addb(struct m0_reqh_service *service)
 
 #undef CNTR_POST
 #define CNTR_POST(counter)						\
-	if (m0_addb_counter_nr(&counter) > 0) {				\
-		M0_ADDB_POST_CNTR(&m0_addb_gmc,                         \
+		m0_addb_post_cntr(&m0_addb_gmc,                         \
 				  M0_ADDB_CTX_VEC(&m0_rm_addb_ctx),	\
-				  &counter);				\
-	}
+				  &counter);
 
 	for (i = 0; i < ARRAY_SIZE(dom->rd_types); ++i) {
 		struct m0_rm_resource_type *rt = dom->rd_types[i];
diff --git a/rpc/rpc_machine.c b/rpc/rpc_machine.c
index 095f9aa..488fc28 100644
--- a/rpc/rpc_machine.c
+++ b/rpc/rpc_machine.c
@@ -522,13 +522,8 @@ static void __rpc_machine_stats_post_addb(struct m0_rpc_machine *machine)
 	addb_mc = machine->rm_reqh != NULL ?
 		  &machine->rm_reqh->rh_addb_mc :
 		  &m0_addb_gmc;
-	if (m0_addb_counter_nr(&machine->rm_cntr_sent_item_sizes) > 0)
-		M0_ADDB_POST_CNTR(addb_mc, cv,
-				  &machine->rm_cntr_sent_item_sizes);
-
-	if (m0_addb_counter_nr(&machine->rm_cntr_rcvd_item_sizes) > 0)
-		M0_ADDB_POST_CNTR(addb_mc, cv,
-				  &machine->rm_cntr_rcvd_item_sizes);
+	m0_addb_post_cntr(addb_mc, cv, &machine->rm_cntr_sent_item_sizes);
+	m0_addb_post_cntr(addb_mc, cv, &machine->rm_cntr_rcvd_item_sizes);
 
 	__rpc_machine_get_stats(machine, &rm_stats, true);
 	if (rm_stats.rs_nr_rcvd_items +
-- 
1.8.3.2

