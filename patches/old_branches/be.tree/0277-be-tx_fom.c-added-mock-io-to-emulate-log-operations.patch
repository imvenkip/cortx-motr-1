From a5d0f0de1a708444e701d492fd7d51be4149e0bc Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Thu, 4 Jul 2013 12:25:52 +0300
Subject: [PATCH 277/290] be: tx_fom.c added mock io to emulate log operations.

---
 be/tx_fom.c | 33 ++++++++++++++++++++++++++++++---
 1 file changed, 30 insertions(+), 3 deletions(-)

diff --git a/be/tx_fom.c b/be/tx_fom.c
index b79e7e7..a000426 100644
--- a/be/tx_fom.c
+++ b/be/tx_fom.c
@@ -36,6 +36,29 @@
  * @{
  */
 
+#define XXX_MOCK_IO 1
+#if XXX_MOCK_IO /* XXX <<<<<<< */
+#  include "lib/thread.h"
+#  include "lib/mutex.h"
+#  include "lib/chan.h"
+#  include <unistd.h>
+
+static struct m0_thread g_thread;
+static void g_handler(struct m0_be_op *op)
+{
+        M0_LOG(M0_DEBUG, "io emulation started");
+        sleep(3);
+	m0_be_op_state_set(op, M0_BOS_SUCCESS);
+        M0_LOG(M0_DEBUG, "io emulation ended");
+}
+
+M0_UNUSED static void _arm_io(struct m0_be_op *op)
+{
+	M0_THREAD_INIT(&g_thread, struct m0_be_op *, NULL, &g_handler, op, "X");
+}
+#endif /* XXX >>>>>>> */
+
+
 static struct tx_group_fom *tx_group_fom(const struct m0_fom *fom);
 static void tx_group_fom_fini(struct m0_fom *fom);
 
@@ -355,9 +378,11 @@ static int logging_st_in(struct m0_sm *mach)
 	 */
 
 	/* XXX: max has to integrate */
-#if 0
+#if !XXX_MOCK_IO
 	m0_be_log_payload_prepare(&eng->te_log, gr);
 	m0_be_log_submit(&eng->te_log, op, gr);
+#else
+	_arm_io(op);
 #endif
 	rc = m0_be_op_tick_ret(op, &fom->tgf_gen, TGS_COMMITTING);
 	M0_ASSERT(rc == M0_FSO_WAIT);
@@ -375,7 +400,7 @@ static int logging_st_in(struct m0_sm *mach)
 static int committing_st_in(struct m0_sm *mach)
 {
 	struct tx_group_fom    *fom = tx_group_fom(sm_to_fom(mach));
-#if 0
+#if !XXX_MOCK_IO
 	struct m0_be_tx_engine *eng = fom->tgf_engine;
 	struct m0_be_tx_group  *gr  = &eng->te_group;
 #endif
@@ -393,9 +418,11 @@ static int committing_st_in(struct m0_sm *mach)
 	 */
 
 	/* XXX: max has to integrate */
-#if 0
+#if !XXX_MOCK_IO
 	m0_be_log_commit_block_prepare(&eng->te_log, gr);
 	m0_be_log_submit(&eng->te_log, op, gr);
+#else
+	_arm_io(op);
 #endif
 	rc = m0_be_op_tick_ret(op, &fom->tgf_gen, TGS_PLACED);
 	M0_ASSERT(rc == M0_FSO_WAIT);
-- 
1.8.3.2

