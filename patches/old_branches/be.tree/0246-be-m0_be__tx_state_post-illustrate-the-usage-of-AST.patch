From 005dbf2419016419382e32178dd06851cd546456 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 27 Jun 2013 16:54:57 +0300
Subject: [PATCH 246/290] be (m0_be__tx_state_post): illustrate the usage of
 AST

---
 be/tx.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/be/tx.c b/be/tx.c
index 9bf19c2..4badd08 100644
--- a/be/tx.c
+++ b/be/tx.c
@@ -570,6 +570,27 @@ static void _state_set(struct m0_sm_group *grp M0_UNUSED, struct m0_sm_ast *ast)
 M0_INTERNAL void
 m0_be__tx_state_post(struct m0_be_tx *tx, enum m0_be_tx_state state)
 {
+	/*
+	 * tx_group's fom and tx's sm may be processed by different
+	 * localities (these machines may belong different sm_groups).
+	 * See the picture:
+	 *
+	 *             locality    locality    locality
+	 *             --------    --------    --------
+	 *             sm_group    sm_group    sm_group
+	 *                | |           |         | |
+	 *                | |           |         | |
+	 *      tx_group  | |           |         | |
+	 *      --------  | |           |         | |
+	 *           fom -' |           |         | |
+	 *                  |  tx   tx  |     tx  | |  tx
+	 *                  |  --   --  |     --  | |  --
+	 *                  `- sm   sm -'     sm -' `- sm
+	 *
+	 * ->fo_tick() of tx_group's fom may not assume that sm_group of
+	 * tx's sm is locked. In order to advance tx's sm, ->fo_tick()
+	 * implementation posts an AST to tx's sm_group.
+	 */
 	M0_ENTRY("state=%u", state);
 	M0_PRE(M0_IN(state, (M0_BTS_SUBMITTED, M0_BTS_LOGGED, M0_BTS_PLACED,
 			     M0_BTS_STABLE)));
-- 
1.8.3.2

