From a135c066ada4a3ae4ebcc73d97fa028824c15f71 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Fri, 31 May 2013 01:34:38 +0300
Subject: [PATCH 076/290] be (seg UT): finalise stob domain correctly

This change fixes one of two memory leaks. The remaining leak
should be plugged by completing the implementation of
m0_be_seg_destroy().

$ m0 run-ut -t be-seg-ut
[...]
$ sudo m0t1fs/linux_kernel/st/st insmod
$ sudo valgrind --leak-check=full utils/.libs/lt-ut -t be-seg-ut
[...]
==31884== 16 bytes in 1 blocks are definitely lost in loss record 2 of 2
==31884==    at 0x9E23820: memalign (vg_replace_malloc.c:581)
==31884==    by 0x9E238D7: posix_memalign (vg_replace_malloc.c:709)
==31884==    by 0xA313266: m0_alloc_aligned (memory.c:154)
==31884==    by 0xA2D0129: m0_be_seg_create (seg.c:103)
==31884==    by 0x443F60: test_open_close (seg.c:132)
==31884==    by 0xA031F5A: run_single_test (in /mnt/hgfs/vvv/src/mero/extra-libs/cunit/CUnit/Sources/.libs/libcunit.so.1.0.1)
==31884==    by 0xA031BD9: run_single_suite (in /mnt/hgfs/vvv/src/mero/extra-libs/cunit/CUnit/Sources/.libs/libcunit.so.1.0.1)
==31884==    by 0xA02FBAD: CU_run_suite (in /mnt/hgfs/vvv/src/mero/extra-libs/cunit/CUnit/Sources/.libs/libcunit.so.1.0.1)
==31884==    by 0xA0338C9: basic_run_suite (in /mnt/hgfs/vvv/src/mero/extra-libs/cunit/CUnit/Sources/.libs/libcunit.so.1.0.1)
==31884==    by 0xA03364F: CU_basic_run_suite (in /mnt/hgfs/vvv/src/mero/extra-libs/cunit/CUnit/Sources/.libs/libcunit.so.1.0.1)
==31884==    by 0x4C6CB7: ut_traverse_test_list (ut.c:114)
==31884==    by 0x4C6E25: m0_ut_run (ut.c:146)
==31884==
==31884== LEAK SUMMARY:
==31884==    definitely lost: 32 bytes in 2 blocks
==31884==    indirectly lost: 0 bytes in 0 blocks
==31884==      possibly lost: 0 bytes in 0 blocks
==31884==    still reachable: 0 bytes in 0 blocks
==31884==         suppressed: 0 bytes in 0 blocks
[...]
$ sudo m0t1fs/linux_kernel/st/st rmmod
---
 be/seg.c    | 7 ++++---
 be/ut/seg.c | 2 +-
 2 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/be/seg.c b/be/seg.c
index 090d245..86ed585 100644
--- a/be/seg.c
+++ b/be/seg.c
@@ -86,8 +86,8 @@ static int stob_io_single_write(void *buf, m0_bcount_t bufsize,
 	return rc;
 }
 
-static int seg_header_create(struct m0_be_seg *seg, void *addr,
-			     m0_bcount_t size)
+static int
+seg_header_create(struct m0_be_seg *seg, void *addr, m0_bcount_t size)
 {
 	uint32_t           st_block_shift;
 	size_t             st_block_size;
@@ -133,9 +133,10 @@ M0_INTERNAL int m0_be_seg_destroy(struct m0_be_seg *seg)
 	M0_PRE(M0_IN(seg->bs_state, (M0_BSS_INIT, M0_BSS_CLOSED)));
 
 	m0_stob_put(seg->bs_stob);
+
 	/* XXX TODO: stob destroy ... */
 
-	return 0; /*XXX*/
+	return 0;
 }
 
 M0_INTERNAL void
diff --git a/be/ut/seg.c b/be/ut/seg.c
index 16a5eff..94c003f 100644
--- a/be/ut/seg.c
+++ b/be/ut/seg.c
@@ -94,7 +94,7 @@ static void seg_fini_helper(struct m0_be_seg *seg, bool stob_put)
 	if (stob_put)
 		m0_stob_put(stob);
 	m0_dtx_fini(&dtx);
-	m0_stob_domain_fini(dom);
+	dom->sd_ops->sdo_fini(dom);
 }
 
 static void test_init_fini(void)
-- 
1.8.3.2

