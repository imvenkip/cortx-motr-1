From 8dfdae732955ce27f3ad5df3583cc0004dbd8c90 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Wed, 26 Jun 2013 23:08:20 +0300
Subject: [PATCH 240/290] be/ut (be-tx-ut): add m0_sm_group_{,un}lock()

m0_be_tx_{prep,open,{,un}capture,close,timedwait}() require
transaction's sm_group to be locked.

[WIP] be-tx-ut fails: tx_fom_tick() makes tx_state_set() call, which
results in unmet tx_is_locked() assertion. This code is not right.
tx_fom_tick() should post an AST to transaction's sm_group instead.
---
 be/ut/tx.c | 26 +++++++++-----------------
 1 file changed, 9 insertions(+), 17 deletions(-)

diff --git a/be/ut/tx.c b/be/ut/tx.c
index c43717d..1b3f79e 100644
--- a/be/ut/tx.c
+++ b/be/ut/tx.c
@@ -66,24 +66,20 @@ static void tx_test(struct m0_be *be)
 	void noop(const struct m0_be_tx *tx) {}
 
 	M0_ENTRY();
-	/*
-	 * Init BE, BE IO, credits
-	 */
+
 	be_init(be);
 	m0_be_op_init(&op);
 	m0_be_tx_credit_init(&cred);
 
-	/*
-	 * Init transaction and its credits
-	 */
 	m0_be_tx_init(&tx, ++g_tid, be, &g_grp, noop, noop, NULL, NULL);
 	m0_be_allocator_credit(alloc, M0_BAO_ALLOC, sizeof *p, 0, &cred);
+
+	m0_sm_group_lock(&g_grp);
+
 	m0_be_tx_prep(&tx, &cred);
 	M0_LOG(M0_DEBUG, "prepared");
 
-	/*
-	 * Open tx, allocate, dirty and capture region
-	 */
+	/* Open transaction, allocate, dirty and capture region. */
 	m0_be_tx_open(&tx);
 	rc = m0_be_tx_timedwait(&tx, M0_BITS(M0_BTS_ACTIVE), M0_TIME_NEVER);
 	M0_UT_ASSERT(rc == 0);
@@ -93,23 +89,19 @@ static void tx_test(struct m0_be *be)
 	M0_UT_ASSERT(p != NULL);
 	M0_UT_ASSERT(M0_IN(m0_be_op_state(&op), (M0_BOS_SUCCESS,
 						 M0_BOS_FAILURE)));
-
 	p->u_hi = 0xdeadd00d8badf00d;
 	p->u_lo = 0x5ca1ab1e7e1eca57;
 	M0_BE_TX_CAPTURE_PTR(&be_ut_tx_h.buh_seg, &tx, p);
 	M0_LOG(M0_DEBUG, "captured");
 
-	/*
-	 * Make things persistent
-	 */
-	m0_be_tx_close(&tx);
+	m0_be_tx_close(&tx); /* Make things persistent. */
+
 	rc = m0_be_tx_timedwait(&tx, M0_BITS(M0_BTS_PLACED), M0_TIME_NEVER);
 	M0_UT_ASSERT(rc == 0);
 	M0_LOG(M0_DEBUG, "closed");
 
-	/*
-	 * Cleanup
-	 */
+	m0_sm_group_unlock(&g_grp);
+
 	m0_be_op_fini(&op);
 	be_fini(be);
 
-- 
1.8.3.2

