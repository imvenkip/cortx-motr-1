From 97340b12835f34665bcfad47a270b0208f69496c Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Tue, 2 Jul 2013 16:14:10 +0300
Subject: [PATCH 260/290] be: rename m0_be_tx_group::tg_tx to ->tg_txs

`s' suffix denotes the plurals of nouns.
---
 be/tx.c       |  6 +++---
 be/tx.h       | 12 +++---------
 be/tx_fom.c   |  2 +-
 be/tx_group.c |  6 +++---
 be/tx_group.h |  2 +-
 5 files changed, 11 insertions(+), 17 deletions(-)

diff --git a/be/tx.c b/be/tx.c
index fe43b32..6aebd05 100644
--- a/be/tx.c
+++ b/be/tx.c
@@ -489,7 +489,7 @@ tx_engine_got_closed(struct m0_be_tx_engine *eng, struct m0_be_tx *tx)
 	struct m0_be_tx_group *gr = &eng->te_group;
 #if 0 /* Nikita's code */
 	m0_bcount_t used = tx_log_size(tx, &tx->t_used,
-				       gr_tlist_is_empty(&gr->tg_tx));
+				       gr_tlist_is_empty(&gr->tg_txs));
 
 	M0_PRE(m0_be__tx_state(tx) == M0_BTS_CLOSED);
 
@@ -649,8 +649,8 @@ M0_INTERNAL bool m0_be__tx_invariant(const struct m0_be_tx *tx)
 		m0_be_reg_area__invariant(&tx->t_reg_area) &&
 		(tx->t_group != NULL) == (state >= M0_BTS_GROUPED) &&
 		(tx->t_leader == (tx->t_group != NULL &&
-				  tx == gr_tlist_head(&tx->t_group->tg_tx))) &&
-		(tx->t_group != NULL) == gr_tlist_contains(&tx->t_group->tg_tx,
+				  tx == gr_tlist_head(&tx->t_group->tg_txs))) &&
+		(tx->t_group != NULL) == gr_tlist_contains(&tx->t_group->tg_txs,
 							   tx)
 		);
 }
diff --git a/be/tx.h b/be/tx.h
index 35bd9c7..36bbe00 100644
--- a/be/tx.h
+++ b/be/tx.h
@@ -346,13 +346,9 @@ struct m0_be_tx {
 	 */
 	uint64_t               t_lsn;
 	struct m0_be          *t_be;
-	/**
-	 * Linkage in one of m0_be_tx_engine::te_txs[] lists.
-	 */
+	/** Linkage in one of m0_be_tx_engine::te_txs[] lists. */
 	struct m0_tlink        t_linkage;
-	/**
-	 * Linkage in m0_be_tx_group::tg_tx.
-	 */
+	/** Linkage in m0_be_tx_group::tg_txs. */
 	struct m0_tlink        t_group_linkage;
 	/**
 	 * Size (in bytes) of "payload area" in the transaction log header,
@@ -362,9 +358,7 @@ struct m0_be_tx {
 	 * ACTIVE state.
 	 */
 	m0_bcount_t            t_payload_size;
-	/**
-	 * Updates prepared for at PREPARE state.
-	 */
+	/** Updates prepared for at PREPARE state. */
 	struct m0_be_tx_credit t_prepared;
 	struct m0_be_reg_area  t_reg_area;
 	/**
diff --git a/be/tx_fom.c b/be/tx_fom.c
index b86fb0d..98183ce 100644
--- a/be/tx_fom.c
+++ b/be/tx_fom.c
@@ -183,7 +183,7 @@ static int tx_group_tick(struct m0_fom *fom)
 	if (state == TGS_FINISH) {
 		M0_IMPOSSIBLE("XXX Not implemented");
 	} else if (state != TGS_PLACED ||
-		   m0_tlist_forall(&gr_tl, tx, &gr->tg_tx,
+		   m0_tlist_forall(&gr_tl, tx, &gr->tg_txs,
 				   m0_be__tx_state(tx) == M0_BTS_STABLE)) {
 		M0_LOG(M0_DEBUG, "Move to state %d", next_state[state]);
 		m0_fom_phase_set(fom, next_state[state]);
diff --git a/be/tx_group.c b/be/tx_group.c
index 04c051e..af3b542 100644
--- a/be/tx_group.c
+++ b/be/tx_group.c
@@ -41,7 +41,7 @@ M0_INTERNAL void tx_group_init(struct m0_be_tx_group *gr)
 #else /*XXX*/
 	gr->tg_lsn = 0ULL;
 	m0_be_tx_credit_init(&gr->tg_used);
-	gr_tlist_init(&gr->tg_tx);
+	gr_tlist_init(&gr->tg_txs);
 	gr->tg_opened = true;
 #endif
 }
@@ -55,9 +55,9 @@ M0_INTERNAL void tx_group_add(struct m0_be_tx_engine *eng,
 {
 
 	tx->t_group  = gr;
-	tx->t_leader = gr_tlist_is_empty(&gr->tg_tx);
+	tx->t_leader = gr_tlist_is_empty(&gr->tg_txs);
 	tx_state_set(tx, M0_BTS_GROUPED);
-	gr_tlist_add(&gr->tg_tx, tx);
+	gr_tlist_add(&gr->tg_txs, tx);
 	/* gr->tg_used.     XXX: what's here? */
 }
 
diff --git a/be/tx_group.h b/be/tx_group.h
index be2c886..db9b69f 100644
--- a/be/tx_group.h
+++ b/be/tx_group.h
@@ -64,7 +64,7 @@ struct m0_be_tx_group {
 	/** Total size of all updates in all transactions in this group. */
 	struct m0_be_tx_credit  tg_used;
 	/** List of transactions in the group. */
-	struct m0_tl            tg_tx;
+	struct m0_tl            tg_txs;
 };
 
 M0_INTERNAL void tx_group_init(struct m0_be_tx_group *gr);
-- 
1.8.3.2

