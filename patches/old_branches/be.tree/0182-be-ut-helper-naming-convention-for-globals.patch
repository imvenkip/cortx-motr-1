From 7da1daf8d203ef4e0055b38b68dbaeac85c8798b Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Thu, 20 Jun 2013 13:25:30 +0300
Subject: [PATCH 182/290] be/ut/helper: naming convention for globals

---
 be/ut/helper.c | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/be/ut/helper.c b/be/ut/helper.c
index 1f534f9..6dc8ded 100644
--- a/be/ut/helper.c
+++ b/be/ut/helper.c
@@ -29,21 +29,21 @@
 #include <sys/stat.h>	/* mkdir */
 #include <sys/types.h>	/* mkdir */
 
-#define SEG_UT_STORAGE_DIR "./__seg_ut_stob"
+#define BE_UT_H_STORAGE_DIR "./__seg_ut_stob"
 
 enum {
-	BE_SEG_UT_DOM_ID   = 42,
-	BE_SEG_UT_STOB_ID  = 42,
-	BE_SEG_UT_SEG_SIZE = 0x1000000	/* 16 MiB */
+	BE_UT_H_DOM_ID   = 42,
+	BE_UT_H_STOB_ID  = 42,
+	BE_UT_H_SEG_SIZE = 0x1000000	/* 16 MiB */
 };
 
-static struct m0_stob_id id = {
-	.si_bits = M0_UINT128(0, BE_SEG_UT_STOB_ID)
+static struct m0_stob_id be_ut_h_stob_id = {
+	.si_bits = M0_UINT128(0, BE_UT_H_STOB_ID)
 };
 
 void m0_be_ut_seg_storage_fini(void)
 {
-	int rc = system("rm -rf " SEG_UT_STORAGE_DIR);
+	int rc = system("rm -rf " BE_UT_H_STORAGE_DIR);
 	M0_ASSERT(rc == 0);
 }
 
@@ -53,10 +53,10 @@ void m0_be_ut_seg_storage_init(void)
 
 	m0_be_ut_seg_storage_fini();
 
-	rc = mkdir(SEG_UT_STORAGE_DIR, 0700);
+	rc = mkdir(BE_UT_H_STORAGE_DIR, 0700);
 	M0_ASSERT(rc == 0);
 
-	rc = mkdir(SEG_UT_STORAGE_DIR "/o", 0700);
+	rc = mkdir(BE_UT_H_STORAGE_DIR "/o", 0700);
 	M0_ASSERT(rc == 0);
 }
 
@@ -65,15 +65,15 @@ void m0_be_ut_seg_initialize(struct m0_be_ut_seg_helper *h,
 {
 	int rc;
 
-	rc = m0_linux_stob_domain_locate(SEG_UT_STORAGE_DIR, &h->bus_dom);
+	rc = m0_linux_stob_domain_locate(BE_UT_H_STORAGE_DIR, &h->bus_dom);
 	M0_ASSERT(rc == 0);
 	m0_dtx_init(&h->bus_dtx);
 	if (!stob_create) {
-		m0_stob_init(&h->bus_stob_, &id, h->bus_dom);
+		m0_stob_init(&h->bus_stob_, &be_ut_h_stob_id, h->bus_dom);
 		h->bus_stob = &h->bus_stob_;
 	} else {
-		rc = m0_stob_create_helper(h->bus_dom, &h->bus_dtx, &id,
-					   &h->bus_stob);
+		rc = m0_stob_create_helper(h->bus_dom, &h->bus_dtx,
+					   &be_ut_h_stob_id, &h->bus_stob);
 		M0_ASSERT(rc == 0);
 	}
 	m0_be_seg_init(seg, h->bus_stob, &h->bus_be);
@@ -95,7 +95,7 @@ void m0_be_ut_seg_create(struct m0_be_ut_seg_helper *h, struct m0_be_seg *seg)
 
 	m0_be_ut_seg_storage_init();
 	m0_be_ut_seg_initialize(h, seg, false);
-	rc = m0_be_seg_create(seg, BE_SEG_UT_SEG_SIZE);
+	rc = m0_be_seg_create(seg, BE_UT_H_SEG_SIZE);
 	M0_ASSERT(rc == 0);
 }
 
-- 
1.8.3.2

