From e8ec9f5d4ae367217fe9c7b33bad61cc018c79c9 Mon Sep 17 00:00:00 2001
From: Maxim Medved <Max_Medved@xyratex.com>
Date: Wed, 19 Jun 2013 08:11:58 +0300
Subject: [PATCH 174/290] added tx_regmap interface

---
 be/tx_regmap.c | 34 ++++++++++++++++++++++++++++++++++
 be/tx_regmap.h | 18 ++++++++++++++++++
 2 files changed, 52 insertions(+)

diff --git a/be/tx_regmap.c b/be/tx_regmap.c
index b288cee..9862e20 100644
--- a/be/tx_regmap.c
+++ b/be/tx_regmap.c
@@ -21,6 +21,7 @@
 #include "be/tx_regmap.h"
 #include "be/tx.h"
 #include "lib/ext.h"  /* m0_ext */
+#include "lib/errno.h"	/* EFAULT */
 
 /**
  * @addtogroup be
@@ -33,6 +34,39 @@
 	.e_end   = (uint64_t)(rd)->rd_reg.br_addr + (rd)->rd_reg.br_size - 1 \
 }
 
+M0_INTERNAL int m0_be_regmap_init(struct m0_be_regmap *rm, size_t size_max)
+{
+	return -EFAULT;
+}
+
+M0_INTERNAL void m0_be_regmap_fini(struct m0_be_regmap *rm)
+{
+}
+
+M0_INTERNAL void m0_be_regmap_add(struct m0_be_regmap *rm, struct m0_be_reg_d r)
+{
+}
+
+M0_INTERNAL void m0_be_regmap_del(struct m0_be_regmap *rm, struct m0_be_reg_d r)
+{
+}
+
+M0_INTERNAL struct m0_be_reg_d *m0_be_regmap_first(struct m0_be_regmap *rm)
+{
+	return NULL;
+}
+
+M0_INTERNAL struct m0_be_reg_d *m0_be_regmap_next(struct m0_be_regmap *rm,
+						  struct m0_be_reg_d *r)
+{
+	return NULL;
+}
+
+M0_INTERNAL size_t m0_be_regmap_size(struct m0_be_regmap *rm)
+{
+	return 0;
+}
+
 M0_INTERNAL int tx_reg_cmp(const void *p0, const void *p1)
 {
 	const struct m0_be_reg_d *r0   = p0;
diff --git a/be/tx_regmap.h b/be/tx_regmap.h
index d2dffe1..8f2505d 100644
--- a/be/tx_regmap.h
+++ b/be/tx_regmap.h
@@ -44,6 +44,24 @@ struct m0_be_regdtree_node {
 	struct m0_be_reg_d *bn_reg_d;
 };
 
+struct m0_be_regmap {
+	size_t size;
+	size_t size_max;
+};
+
+M0_INTERNAL int m0_be_regmap_init(struct m0_be_regmap *rm, size_t size_max);
+M0_INTERNAL void m0_be_regmap_fini(struct m0_be_regmap *rm);
+
+M0_INTERNAL void m0_be_regmap_add(struct m0_be_regmap *rm,
+				  struct m0_be_reg_d r);
+M0_INTERNAL void m0_be_regmap_del(struct m0_be_regmap *rm,
+				  struct m0_be_reg_d r);
+
+M0_INTERNAL struct m0_be_reg_d *m0_be_regmap_first(struct m0_be_regmap *rm);
+M0_INTERNAL struct m0_be_reg_d *m0_be_regmap_next(struct m0_be_regmap *rm,
+						  struct m0_be_reg_d *r);
+M0_INTERNAL size_t m0_be_regmap_size(struct m0_be_regmap *rm);
+
 M0_INTERNAL int tx_reg_cmp(const void *p0, const void *p1);
 M0_INTERNAL void tx_reg_ext(const struct m0_be_reg_d *rd, struct m0_ext *out);
 
-- 
1.8.3.2

