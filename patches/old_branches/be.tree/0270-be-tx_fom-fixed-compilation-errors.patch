From f20d4734800dfff190cf0957494ca8a020770127 Mon Sep 17 00:00:00 2001
From: Anatoliy Bilenko <anatoliy_bilenko@xyratex.com>
Date: Wed, 3 Jul 2013 16:43:44 +0300
Subject: [PATCH 270/290] be: tx_fom: fixed compilation errors.

---
 be/tx.c       |  8 ++++----
 be/tx.h       |  1 +
 be/tx_fom.c   | 10 +++++++---
 be/tx_group.c |  1 +
 4 files changed, 13 insertions(+), 7 deletions(-)

diff --git a/be/tx.c b/be/tx.c
index 39e680a..2f92822 100644
--- a/be/tx.c
+++ b/be/tx.c
@@ -78,7 +78,7 @@ static struct m0_sm_state_descr tx_states[M0_BTS_NR] = {
 		.sd_name      = "M0_BTS_ACTIVE",
 		.sd_in        = active_st_in,
 		.sd_invariant = tx_state_invariant,
-		.sd_alloved   = M0_BITS(M0_BTS_ACTIVE, M0_BTS_CLOSED)
+		.sd_allowed   = M0_BITS(M0_BTS_ACTIVE, M0_BTS_CLOSED)
 	},
 	_S(M0_BTS_CLOSED,    0, M0_BITS(M0_BTS_GROUPED)),
 	_S(M0_BTS_GROUPED,   0, M0_BITS(M0_BTS_SUBMITTED)),
@@ -88,7 +88,7 @@ static struct m0_sm_state_descr tx_states[M0_BTS_NR] = {
 		.sd_name      = "M0_BTS_PLACED",
 		.sd_in        = placed_st_in,
 		.sd_invariant = tx_state_invariant,
-		.sd_alloved   = M0_BITS(M0_BTS_STABLE)
+		.sd_allowed   = M0_BITS(M0_BTS_STABLE)
 	},
 	_S(M0_BTS_STABLE, M0_SDF_TERMINAL, 0)
 #undef _S
@@ -669,7 +669,7 @@ static int active_st_in(struct m0_sm *mach)
 	struct m0_be_tx *tx = container_of(mach, struct m0_be_tx, t_sm);
 	M0_ENTRY();
 
-	m0_be__tx_get(&tx->t_ref);
+	m0_be__tx_get(tx);
 
 	M0_LEAVE();
 	return -1;
@@ -680,7 +680,7 @@ static int placed_st_in(struct m0_sm *mach)
 	struct m0_be_tx *tx = container_of(mach, struct m0_be_tx, t_sm);
 	M0_ENTRY();
 
-	m0_be__tx_put(&tx->t_ref);
+	m0_be__tx_put(tx);
 
 	M0_LEAVE();
 	return -1;
diff --git a/be/tx.h b/be/tx.h
index 4e998fc..8fd2fe7 100644
--- a/be/tx.h
+++ b/be/tx.h
@@ -25,6 +25,7 @@
 #include "lib/rwlock.h"
 #include "lib/tlist.h"
 #include "lib/types.h"
+#include "lib/refs.h"
 #include "sm/sm.h"
 #include "be/tx_group.h"
 #include "be/tx_log.h"
diff --git a/be/tx_fom.c b/be/tx_fom.c
index e15c788..65d0ab3 100644
--- a/be/tx_fom.c
+++ b/be/tx_fom.c
@@ -36,6 +36,9 @@
  * @{
  */
 
+static struct tx_group_fom *tx_group_fom(const struct m0_fom *fom);
+static void tx_group_fom_fini(struct m0_fom *fom);
+
 /* ------------------------------------------------------------------
  * State definitions
  * ------------------------------------------------------------------ */
@@ -148,7 +151,7 @@ static struct m0_sm_state_descr _tx_group_states[TGS_NR] = {
 #undef _S
 };
 
-static const struct m0_sm_conf _tx_group_conf = {
+static struct m0_sm_conf _tx_group_conf = {
 	.scf_name      = "phases of tx_group",
 	.scf_nr_states = ARRAY_SIZE(_tx_group_states),
 	.scf_state     = _tx_group_states
@@ -199,7 +202,7 @@ static int tx_group_tick(struct m0_fom *fom)
 	return M0_FSO_WAIT;
 }
 
-static void tx_fom_fini(struct m0_fom *fom)
+static void tx_group_fom_fini(struct m0_fom *fom)
 {
 	M0_ENTRY();
 	m0_fom_fini(fom);
@@ -217,7 +220,7 @@ tx_group_addb_init(struct m0_fom *fom, struct m0_addb_mc *mc M0_UNUSED)
 	fom->fo_addb_ctx.ac_magic = M0_ADDB_CTX_MAGIC;
 }
 
-static const struct m0_fom_ops tx_fom_ops = {
+static const struct m0_fom_ops tx_group_fom_ops = {
 	.fo_fini          = tx_group_fom_fini,
 	.fo_tick          = tx_group_tick,
 	.fo_home_locality = tx_group_locality,
@@ -292,6 +295,7 @@ static struct tx_group_fom *tx_group_fom(const struct m0_fom *fom)
 static int open_st_in(struct m0_sm *mach)
 {
 	M0_ENTRY();
+	(void)sm_to_fom; /*XXX*/
 
 	/* XXX TODO: Send "Add itself to a tx_group" AST to all
 	 * M0_BTS_CLOSED transactions of the tx_engine. */
diff --git a/be/tx_group.c b/be/tx_group.c
index d14fb23..2eed5df 100644
--- a/be/tx_group.c
+++ b/be/tx_group.c
@@ -18,6 +18,7 @@
  * Original creation date: 17-Jun-2013
  */
 
+#include "fop/fom.h"
 #include "be/tx_group.h"
 #include "be/tx.h"
 
-- 
1.8.3.2

