From a6a6b7ca3c6857c0f35ef1ff3a89270bbdad1058 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Wed, 29 May 2013 11:49:03 +0300
Subject: [PATCH 004/290] be: create makefiles; add ut/

---
 Kbuild.in                      |  4 ++++
 Makefile.am                    |  4 ++++
 be/Kbuild.sub                  |  1 +
 be/Makefile.sub                |  3 +++
 be/alloc.h                     |  6 ++++++
 be/seg.c                       |  4 ++--
 be/seg.h                       |  5 +++++
 be/ut/Kbuild.sub               |  1 +
 be/ut/Makefile.sub             |  1 +
 be/ut/seg.c                    | 35 +++++++++++++++++++++++++++++++++++
 utils/linux_kernel/m0ut_main.c |  2 ++
 utils/ut_main.c                |  2 ++
 12 files changed, 66 insertions(+), 2 deletions(-)
 create mode 100644 be/Kbuild.sub
 create mode 100644 be/Makefile.sub
 create mode 100644 be/ut/Kbuild.sub
 create mode 100644 be/ut/Makefile.sub
 create mode 100644 be/ut/seg.c

diff --git a/Kbuild.in b/Kbuild.in
index ac513f4..2e89870 100644
--- a/Kbuild.in
+++ b/Kbuild.in
@@ -1,3 +1,5 @@
+## -*- makefile -*-
+
 #
 # global vars
 #
@@ -57,6 +59,7 @@ include $(src)/mero/Kbuild.sub
 include $(src)/m0t1fs/Kbuild.sub
 
 include $(src)/addb/Kbuild.sub
+include $(src)/be/Kbuild.sub
 include $(src)/cob/Kbuild.sub
 include $(src)/conf/Kbuild.sub
 include $(src)/db/Kbuild.sub
@@ -102,6 +105,7 @@ utils/linux_kernel/m0ut-y = utils/linux_kernel/m0ut_main.o \
 m0ut_objects :=
 
 include $(src)/addb/ut/Kbuild.sub
+include $(src)/be/ut/Kbuild.sub
 include $(src)/ioservice/ut/Kbuild.sub
 include $(src)/layout/ut/Kbuild.sub
 include $(src)/lib/ut/Kbuild.sub
diff --git a/Makefile.am b/Makefile.am
index 2c5ab7d..3b04dcf 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -164,6 +164,7 @@ nobase_mero_include_HEADERS =
 mero_libmero_la_SOURCES  =
 
 include $(top_srcdir)/balloc/Makefile.sub
+include $(top_srcdir)/be/Makefile.sub
 include $(top_srcdir)/capa/Makefile.sub
 include $(top_srcdir)/cfg/Makefile.sub
 include $(top_srcdir)/cm/Makefile.sub
@@ -217,6 +218,7 @@ ut_libmero_ut_la_SOURCES   =
 
 include $(top_srcdir)/addb/ut/Makefile.sub
 include $(top_srcdir)/balloc/ut/Makefile.sub
+include $(top_srcdir)/be/ut/Makefile.sub
 include $(top_srcdir)/capa/ut/Makefile.sub
 include $(top_srcdir)/cm/ut/Makefile.sub
 include $(top_srcdir)/cob/ut/Makefile.sub
@@ -1023,6 +1025,8 @@ help:
 
 EXTRA_DIST += addb/Kbuild.sub \
               addb/ut/Kbuild.sub \
+              be/Kbuild.sub \
+              be/ut/Kbuild.sub \
               cob/Kbuild.sub \
               conf/Kbuild.sub \
               db/Kbuild.sub \
diff --git a/be/Kbuild.sub b/be/Kbuild.sub
new file mode 100644
index 0000000..b735d89
--- /dev/null
+++ b/be/Kbuild.sub
@@ -0,0 +1 @@
+m0mero_objects += be/seg.o
diff --git a/be/Makefile.sub b/be/Makefile.sub
new file mode 100644
index 0000000..fba0fbd
--- /dev/null
+++ b/be/Makefile.sub
@@ -0,0 +1,3 @@
+nobase_mero_include_HEADERS += be/seg.h
+
+mero_libmero_la_SOURCES += be/seg.c
diff --git a/be/alloc.h b/be/alloc.h
index cb90618..3993e42 100644
--- a/be/alloc.h
+++ b/be/alloc.h
@@ -22,6 +22,12 @@
 #ifndef __MERO_BE_ALLOC_H__
 #define __MERO_BE_ALLOC_H__
 
+#include "lib/types.h"  /* m0_bcount_t */
+
+struct m0_be_seg;
+struct m0_be_tx;
+struct m0_be_tx_credit;
+
 /**
  * @defgroup be
  *
diff --git a/be/seg.c b/be/seg.c
index 42081b0..c77e7fa 100644
--- a/be/seg.c
+++ b/be/seg.c
@@ -18,6 +18,7 @@
  * Original creation date: 29-May-2013
  */
 
+#include "be/seg.h"
 
 /**
  * @addtogroup be
@@ -26,7 +27,7 @@
  */
 
 void m0_be_seg_init(struct m0_be_seg *seg, struct m0_stob *stob,
-					   struct m0_be   *be)
+		    struct m0_be *be)
 {
 	seg->bs_be   = be;
 	seg->bs_stob = stob;
@@ -62,7 +63,6 @@ void m0_be_reg_put(const struct m0_be_reg *reg)
 
 /** @} end of be group */
 
-
 /*
  *  Local variables:
  *  c-indentation-style: "K&R"
diff --git a/be/seg.h b/be/seg.h
index 7a0132b..78020b7 100644
--- a/be/seg.h
+++ b/be/seg.h
@@ -22,6 +22,11 @@
 #ifndef __MERO_BE_SEG_H__
 #define __MERO_BE_SEG_H__
 
+#include "be/alloc.h"   /* m0_be_allocator */
+
+struct m0_be;
+struct m0_be_op;
+
 /**
  * @defgroup be
  *
diff --git a/be/ut/Kbuild.sub b/be/ut/Kbuild.sub
new file mode 100644
index 0000000..12dda12
--- /dev/null
+++ b/be/ut/Kbuild.sub
@@ -0,0 +1 @@
+m0ut_objects += be/ut/seg.o
diff --git a/be/ut/Makefile.sub b/be/ut/Makefile.sub
new file mode 100644
index 0000000..60ca7f5
--- /dev/null
+++ b/be/ut/Makefile.sub
@@ -0,0 +1 @@
+ut_libmero_ut_la_SOURCES += be/ut/seg.c
diff --git a/be/ut/seg.c b/be/ut/seg.c
new file mode 100644
index 0000000..d8b853c
--- /dev/null
+++ b/be/ut/seg.c
@@ -0,0 +1,35 @@
+/* -*- C -*- */
+/*
+ * COPYRIGHT 2013 XYRATEX TECHNOLOGY LIMITED
+ *
+ * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
+ * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
+ * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
+ * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
+ * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
+ * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
+ * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
+ *
+ * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
+ * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
+ * http://www.xyratex.com/contact
+ *
+ * Original author: Valery V. Vorotyntsev <valery_vorotyntsev@xyratex.com>
+ * Original creation date: 29-May-2013
+ */
+
+#include "be/seg.h"
+#include "ut/ut.h"
+
+static void test_seg(void)
+{
+}
+
+const struct m0_test_suite be_ut = {
+        .ts_name = "be-ut",
+        .ts_tests = {
+                { "seg", test_seg },
+                { NULL, NULL }
+        }
+};
+M0_EXPORTED(be_ut);
diff --git a/utils/linux_kernel/m0ut_main.c b/utils/linux_kernel/m0ut_main.c
index a3df329..cb06646 100644
--- a/utils/linux_kernel/m0ut_main.c
+++ b/utils/linux_kernel/m0ut_main.c
@@ -33,6 +33,7 @@ MODULE_LICENSE("proprietary");
 /* sort test suites in alphabetic order */
 extern const struct m0_test_suite m0_klibm0_ut; /* test lib first */
 extern const struct m0_test_suite m0_addb_ut;
+extern const struct m0_test_suite m0_be_ut;
 extern const struct m0_test_suite buffer_pool_ut;
 extern const struct m0_test_suite bulkio_client_ut;
 extern const struct m0_test_suite m0_net_bulk_if_ut;
@@ -63,6 +64,7 @@ static void run_kernel_ut(int ignored)
 	/* sort test suites in alphabetic order */
 	m0_ut_add(&m0_klibm0_ut);  /* test lib first */
 	m0_ut_add(&m0_addb_ut);
+	m0_ut_add(&be_ut);
 	m0_ut_add(&file_io_ut);
 	m0_ut_add(&buffer_pool_ut);
 	m0_ut_add(&bulkio_client_ut);
diff --git a/utils/ut_main.c b/utils/ut_main.c
index c110cab..176d198 100644
--- a/utils/ut_main.c
+++ b/utils/ut_main.c
@@ -38,6 +38,7 @@ extern const struct m0_test_suite ad_ut;
 extern const struct m0_test_suite addb_ut;
 extern const struct m0_test_suite adieu_ut;
 extern const struct m0_test_suite balloc_ut;
+extern const struct m0_test_suite be_ut;
 extern const struct m0_test_suite buffer_pool_ut;
 extern const struct m0_test_suite bulkio_client_ut;
 extern const struct m0_test_suite bulkio_server_ut;
@@ -103,6 +104,7 @@ void add_uts(void)
 	m0_ut_add(&ad_ut);
 	m0_ut_add(&adieu_ut);
 	m0_ut_add(&balloc_ut);
+	m0_ut_add(&be_ut);
 	m0_ut_add(&buffer_pool_ut);
 	m0_ut_add(&bulkio_client_ut);
 	m0_ut_add(&bulkio_server_ut);
-- 
1.8.3.2

