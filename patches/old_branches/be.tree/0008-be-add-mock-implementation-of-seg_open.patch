From 04ad0de0160de7bcc989a517e0db62f809fa5d4c Mon Sep 17 00:00:00 2001
From: Alexander Gattin <alexander_gattin@xyratex.com>
Date: Fri, 24 May 2013 15:05:14 +0300
Subject: [PATCH 008/290] be: add mock implementation of seg_open().

---
 be/seg.c | 32 ++++++++++++++++++++++++++++++++
 be/seg.h |  1 +
 2 files changed, 33 insertions(+)

diff --git a/be/seg.c b/be/seg.c
index 0bc5e9c..86f2206 100644
--- a/be/seg.c
+++ b/be/seg.c
@@ -48,6 +48,38 @@ bool m0_be__reg_invariant(const struct m0_be_reg *reg)
 		reg->br_addr != NULL;
 }
 
+/* "on-disk" header for segment, stored in STOB at zero offset */
+struct be_seg_hdr {
+	void        *bh_addr;
+	m0_bcount_t  bh_size;
+};
+
+int m0_be_seg_open(struct m0_be_seg *seg);
+	struct m0_stob_io io;
+	struct m0_clink   clink;
+	int               r;
+	uint32_t          st_block_shift;
+	/* XXX: need to declare buffers/vectors etc for STOBIO */
+	m0_bcount_t       rdvec[1];
+
+       	st_block_shift = seg->bs_stob->so_op->sop_block_shift(seg->bs_stob);
+	m0_stob_io_init(&io);
+	/* TODO: prepare buffer for stob IO, align etc */
+	io->si_flags  = 0;
+	io->si_opcode = SIO_READ;
+	io->si_user.ov_buf = (void **) buf;
+
+	m0_clink_init(&clink, NULL);
+	m0_clink_add_lock(&io.si_wait, &clink);
+	r = m0_stob_io_launch(&io, seg->bs_stob, NULL, NULL);
+	m0_chan_wait(&clink);
+	m0_clink_del_lock(&clink);
+	m0_clink_fini(&clink);
+	m0_stob_io_fini(&io);
+
+	/* TODO: mmap an area at bh_addr of bh_size */
+}
+
 void m0_be_reg_get(struct m0_be_reg *reg, struct m0_be_op *op)
 {
 	M0_PRE(m0_be__reg_invariant(reg));
diff --git a/be/seg.h b/be/seg.h
index fc5d3db..c17c061 100644
--- a/be/seg.h
+++ b/be/seg.h
@@ -23,6 +23,7 @@
 #define __MERO_BE_SEG_H__
 
 #include "be/alloc.h"   /* m0_be_allocator */
+#include "stob/stob.h"  /* m0_stob, m0_stob_io */
 
 struct m0_be;
 struct m0_be_op;
-- 
1.8.3.2

