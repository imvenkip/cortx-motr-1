From 2f333f337f754c218aef5a44c1af087ab11da469 Mon Sep 17 00:00:00 2001
From: Alexander Gattin <alexander_gattin@xyratex.com>
Date: Thu, 6 Jun 2013 19:00:17 +0300
Subject: [PATCH 119/290] be/list: rewrite m0_be_list_put()'s loop using
 m0_tlist_for()/endfor.

Reported-by: Nikita Danilov <nikita_danilov@xyratex.com>
---
 be/list.c | 44 +++++++++++++++++++++++++-------------------
 1 file changed, 25 insertions(+), 19 deletions(-)

diff --git a/be/list.c b/be/list.c
index 904338b..280cc9d 100644
--- a/be/list.c
+++ b/be/list.c
@@ -89,33 +89,39 @@ M0_INTERNAL void m0_be_list_get(const struct m0_be_list *list,
 	m0_sm_state_set(&op->bo_sm, M0_BOS_SUCCESS);
 }
 
+static void be_list_reg_put(const struct m0_be_reg *reg)
+{
+	M0_PRE(reg != NULL);
+	if (reg->br_addr != NULL) {
+		/* Check list node's reg before doing mem access. */
+		M0_ASSERT(m0_be__reg_is_pinned(reg));
+		m0_be_reg_put(reg);
+	}
+}
+
 M0_INTERNAL void m0_be_list_put(const struct m0_be_list *list,
 				m0_bcount_t nelems)
 {
-	struct m0_list_link *ll;
-	struct m0_list_link *prvll;
-	uint64_t            *ll_magic;
+	void                *lnode;
+	void                *prvnode = NULL;
 	struct m0_be_reg     l_reg;
 
 	M0_PRE(list != NULL);
 
-       	l_reg = M0_BE_REG(list->bl_seg, list->bl_descr->td_container_size, 0);
+	l_reg = M0_BE_REG(list->bl_seg, list->bl_descr->td_container_size,
+			  NULL);
 
-	for (ll = list->bl_list.t_head.l_head;
-	     ll != NULL && (void*)ll != &list->bl_list.t_head
-	     && nelems > 0;
-	     nelems--) {
-		l_reg.br_addr = (void *)ll - list->bl_descr->td_link_offset;
-		ll_magic = l_reg.br_addr +
-			list->bl_descr->td_link_magic_offset;
-		/* Check list node's reg before doing mem access. */
-		M0_ASSERT(m0_be__reg_is_pinned(&l_reg));
-		M0_ASSERT(list->bl_descr->td_link_magic == 0
-			  || *ll_magic == list->bl_descr->td_link_magic);
-		prvll = ll;
-		ll = ll->ll_next;
-		m0_be_reg_put(&l_reg);
-	}
+	m0_tlist_for(list->bl_descr, &list->bl_list, lnode) {
+		if (--nelems == 0) break;
+		/* Put previous region. */
+		l_reg.br_addr = prvnode;
+		be_list_reg_put(&l_reg);
+		prvnode = lnode;
+	} m0_tlist_endfor;
+
+	/* Put last region. */
+	l_reg.br_addr = prvnode;
+	be_list_reg_put(&l_reg);
 }
 
 M0_INTERNAL void m0_be_list_credit(const struct m0_be_list *list,
-- 
1.8.3.2

