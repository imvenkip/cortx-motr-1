From 3bf19336cbdccccedf09c73eea4c6579a63ddcb7 Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Tue, 2 Jul 2013 23:04:32 +0300
Subject: [PATCH 264/290] be (tx_fom.c): describe logic of *_st_in() functions

+ committing_sd_ex(): new function.
+ tx.h: Add SUBMITTED state to the state diagram.
---
 be/tx.h     |  5 +++++
 be/tx_fom.c | 53 +++++++++++++++++++++++++++++++++++++++++++++--------
 2 files changed, 50 insertions(+), 8 deletions(-)

diff --git a/be/tx.h b/be/tx.h
index 6fdd715..321f0b4 100644
--- a/be/tx.h
+++ b/be/tx.h
@@ -136,6 +136,11 @@ struct m0_be_reg;
  *                        V
  *                     GROUPED
  *                        |
+ *                        | log io is launched
+ *                        |
+ *                        V
+ *                     SUBMITTED
+ *                        |
  *                        | log io completes
  *                        |
  *                        V
diff --git a/be/tx_fom.c b/be/tx_fom.c
index 98183ce..26000a2 100644
--- a/be/tx_fom.c
+++ b/be/tx_fom.c
@@ -57,8 +57,9 @@
  *   |              |          |
  *   |              v [4]      |   [4] Initiate 2nd log IO (commit block).
  *   |           COMMITTING    |
- *   |              | [5]      |   [5] 2nd log IO completes.
- *   |              |          |
+ *   |              | [5]      |   [5] 2nd log IO completes. Invoke
+ *   |              |          |       m0_be_tx::t_persistent() for each
+ *   |              |          |       transaction of the tx_group.
  *   |              v [6]      |   [6] Initiate in-place IO.
  *   |            PLACING      |
  *   |              | [7]      |   [7] In-place IO completes.
@@ -94,7 +95,7 @@ enum tx_group_state {
 	 *
 	 * Log representation of the tx_group is being written to the log.
 	 * If the log is wrapping around (i.e., when a record is known to
-	 * reach the end of the log), then this stobio will also include
+	 * reach the end of the log), then the stobio will also include
 	 * log header.
 	 */
 	TGS_LOGGING,
@@ -115,10 +116,11 @@ enum tx_group_state {
 	TGS_NR
 };
 
-static int       open_st_in(struct m0_sm *mach);
-static int    logging_st_in(struct m0_sm *mach);
-static int committing_st_in(struct m0_sm *mach);
-static int    placing_st_in(struct m0_sm *mach);
+static int        open_st_in(struct m0_sm *mach);
+static int     logging_st_in(struct m0_sm *mach);
+static int  committing_st_in(struct m0_sm *mach);
+static void committing_st_ex(struct m0_sm *mach);
+static int     placing_st_in(struct m0_sm *mach);
 
 static struct m0_sm_state_descr _tx_group_states[TGS_NR] = {
 #define _S(name, flags, in, allowed)  \
@@ -133,7 +135,13 @@ static struct m0_sm_state_descr _tx_group_states[TGS_NR] = {
 	_S(TGS_FINISH, M0_SDF_TERMINAL, NULL, 0),
 	_S(TGS_OPEN,    0, open_st_in,    M0_BITS(TGS_LOGGING, TGS_FINISH)),
 	_S(TGS_LOGGING, 0, logging_st_in, M0_BITS(TGS_COMMITTING)),
-	_S(TGS_COMMITTING, 0, committing_st_in, M0_BITS(TGS_PLACING)),
+	[TGS_COMMITTING] = {
+		.sd_flags   = 0,
+		.sd_name    = "TGS_COMMITTING",
+		.sd_in      = committing_st_in,
+		.sd_ex      = committing_st_ex,
+		.sd_allowed = M0_BITS(TGS_PLACING)
+	},
 	_S(TGS_PLACING, 0, placing_st_in, M0_BITS(TGS_PLACED)),
 	_S(TGS_PLACED,  0, NULL, M0_BITS(TGS_PLACED, TGS_STABLE, TGS_FINISH)),
 	_S(TGS_STABLE,  0, NULL, M0_BITS(TGS_OPEN))
@@ -285,6 +293,11 @@ static struct tx_group_fom *tx_group_fom(const struct m0_fom *fom)
 static int open_st_in(struct m0_sm *mach)
 {
 	M0_ENTRY();
+
+	/* XXX TODO: Send "Add itself to a tx_group" AST to all
+	 * M0_BTS_CLOSED transactions of the tx_engine. */
+	M0_IMPOSSIBLE("XXX Not implemented");
+
 	M0_LEAVE();
 	return -1;
 }
@@ -292,6 +305,11 @@ static int open_st_in(struct m0_sm *mach)
 static int logging_st_in(struct m0_sm *mach)
 {
 	M0_ENTRY();
+
+	/* XXX TODO: Initiate 1st log IO (tx_group and, when the log is
+	 * wrapped, log header). */
+	M0_IMPOSSIBLE("XXX Not implemented");
+
 	M0_LEAVE();
 	return -1;
 }
@@ -299,13 +317,32 @@ static int logging_st_in(struct m0_sm *mach)
 static int committing_st_in(struct m0_sm *mach)
 {
 	M0_ENTRY();
+
+	/* XXX TODO: Initiate 2nd log IO (commit block). */
+	M0_IMPOSSIBLE("XXX Not implemented");
+
 	M0_LEAVE();
 	return -1;
 }
 
+static void committing_st_ex(struct m0_sm *mach)
+{
+	M0_ENTRY();
+
+	/* XXX TODO: Invoke m0_be_tx::t_persistent() for each transaction
+	 * of the tx_group. */
+	M0_IMPOSSIBLE("XXX Not implemented");
+
+	M0_LEAVE();
+}
+
 static int placing_st_in(struct m0_sm *mach)
 {
 	M0_ENTRY();
+
+	/* XXX TODO: Initiate in-place IO. */
+	M0_IMPOSSIBLE("XXX Not implemented");
+
 	M0_LEAVE();
 	return -1;
 }
-- 
1.8.3.2

