From 9fcf58a0f09ef3cea7b08defb6e640ab94a97d29 Mon Sep 17 00:00:00 2001
From: Alexander Gattin <alexander_gattin@xyratex.com>
Date: Thu, 20 Jun 2013 15:55:01 +0300
Subject: [PATCH 183/290] be/seg: complete m0_be_seg_write()'s stob i/o
 asynchronously.

---
 be/seg.c | 40 ++++++++++++++++++++++------------------
 1 file changed, 22 insertions(+), 18 deletions(-)

diff --git a/be/seg.c b/be/seg.c
index bafa063..1cd91eb 100644
--- a/be/seg.c
+++ b/be/seg.c
@@ -361,6 +361,26 @@ static inline m0_bcount_t be_seg_blkno(const struct m0_be_seg *seg, void *addr)
 	return (addr - seg->bs_addr) >> seg->bs_bshift;
 }
 
+static bool be_seg_stobio_cb(struct m0_clink *link)
+{
+	struct m0_be_op   *op = container_of(link, struct m0_be_op,
+					     bo_u.u_segio.si_clink);
+	struct m0_stob_io *io = &op->bo_u.u_segio.si_stobio;
+	int                rc;
+
+	rc = io->si_rc;
+	m0_clink_del_lock(link);
+	m0_clink_fini(link);
+	m0_stob_io_fini(io);
+	op->bo_sm.sm_rc = rc;
+	if (rc == 0) {
+		m0_sm_state_set(&op->bo_sm, M0_BOS_SUCCESS);
+	} else {
+		m0_sm_state_set(&op->bo_sm, M0_BOS_FAILURE);
+	}
+	return rc;
+}
+
 M0_INTERNAL int m0_be_seg_write(struct m0_be_seg *seg,
 				void *regd_tree,
 				struct m0_be_op *op)
@@ -375,7 +395,7 @@ M0_INTERNAL int m0_be_seg_write(struct m0_be_seg *seg,
 	op->bo_utype        = M0_BOP_SEGIO;
 	clink               = &op->bo_u.u_segio.si_clink;
 	io                  = &op->bo_u.u_segio.si_stobio;
-	m0_clink_init(clink, NULL);
+	m0_clink_init(clink, &be_seg_stobio_cb);
 	m0_stob_io_init(io);
 	io->si_flags        = 0;
 	io->si_opcode       = SIO_WRITE;
@@ -393,24 +413,8 @@ M0_INTERNAL int m0_be_seg_write(struct m0_be_seg *seg,
 	/* Add clink and start STOB i/o. */
 	m0_clink_add_lock(&io->si_wait, clink);
 	rc = m0_stob_io_launch(io, seg->bs_stob, NULL, NULL);
-	if (rc != 0)
-		goto fin;
-	else
+	if (rc == 0)
 		m0_sm_state_set(&op->bo_sm, M0_BOS_ACTIVE);
-
-	/* XXX: Complete STOB i/o synchronously. */
-	m0_chan_wait(clink);
-	rc = io->si_rc;
-fin:
-	m0_clink_del_lock(clink);
-	m0_clink_fini(clink);
-	m0_stob_io_fini(io);
-	op->bo_sm.sm_rc = rc;
-	if (rc == 0) {
-		m0_sm_state_set(&op->bo_sm, M0_BOS_SUCCESS);
-	} else {
-		m0_sm_state_set(&op->bo_sm, M0_BOS_FAILURE);
-	}
 	return rc;
 }
 
-- 
1.8.3.2

