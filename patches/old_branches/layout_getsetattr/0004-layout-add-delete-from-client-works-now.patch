From a6eded8e2b4f944b077d63335ba01dcbca0b3ca2 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Wed, 30 Jan 2013 17:38:38 +0800
Subject: [PATCH 04/11] layout add/delete from client works now.

---
 m0t1fs/linux_kernel/dir.c   |  4 ++--
 m0t1fs/linux_kernel/super.c |  4 ++--
 mdservice/md_foms.c         | 41 ++++++++++++++++++++++++++++++++---------
 3 files changed, 36 insertions(+), 13 deletions(-)

diff --git a/m0t1fs/linux_kernel/dir.c b/m0t1fs/linux_kernel/dir.c
index 7104ea7..51dfaa3 100644
--- a/m0t1fs/linux_kernel/dir.c
+++ b/m0t1fs/linux_kernel/dir.c
@@ -1079,7 +1079,7 @@ int m0t1fs_layout_op(struct m0t1fs_sb *csb, enum m0_layout_opcode op,
 
 	M0_ENTRY();
 
-	M0_LOG(M0_ERROR, "layout op = %u lid = %llu", op, lid);
+	M0_LOG(M0_DEBUG, "layout op = %u lid = %llu", op, lid);
 	if (op == M0_LAYOUT_OP_CREATE || op == M0_LAYOUT_OP_DELETE) {
 		layout = m0_layout_find(&m0t1fs_globals.g_layout_dom, lid);
 		if (layout == NULL)
@@ -1093,7 +1093,7 @@ int m0t1fs_layout_op(struct m0t1fs_sb *csb, enum m0_layout_opcode op,
 	m0t1fs_fs_lock(csb);
         rc = m0t1fs_mds_cob_op(csb, &mo, &m0_fop_layout_fopt, (void **)&rep);
 	if (rc == 0) {
-		M0_LOG(M0_ERROR, "layout rep rc = %d", rep->lr_rc);
+		M0_LOG(M0_DEBUG, "layout rep rc = %d", rep->lr_rc);
 
 		if (op == M0_LAYOUT_OP_LOOKUP)
 			(void)rep; /* decode layout from rep */
diff --git a/m0t1fs/linux_kernel/super.c b/m0t1fs/linux_kernel/super.c
index 2d62f18..ef70c56 100644
--- a/m0t1fs/linux_kernel/super.c
+++ b/m0t1fs/linux_kernel/super.c
@@ -686,9 +686,9 @@ static int m0t1fs_root_alloc(struct super_block *sb)
 	if (rc != 0)
 		M0_RETURN(rc);
 
-	/* create the new layout on mds. */
+	/* create the new layout on mds: -EEXIST is OK */
 	rc = m0t1fs_layout_op(csb, M0_LAYOUT_OP_CREATE, csb->csb_layout_id);
-	if (rc != 0)
+	if (rc != 0 && rc != -EEXIST)
 		M0_RETURN(rc);
 
 	sb->s_magic = rep->f_type;
diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index 15aa518..eaecec2 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -39,6 +39,7 @@
 #include "fop/fom_generic.h"
 #include "layout/layout.h"
 #include "layout/pdclust.h"
+#include "layout/layout_db.h"
 #include "mdservice/md_fops.h"
 #include "mdservice/md_fops_xc.h"
 #include "mdservice/md_foms.h"
@@ -1009,6 +1010,15 @@ out:
         return M0_FSO_AGAIN;
 }
 
+static void layout_pair_set(struct m0_db_pair *pair, uint64_t *lid,
+                            void *area, m0_bcount_t num_bytes)
+{
+        pair->dp_key.db_buf.b_addr = lid;
+        pair->dp_key.db_buf.b_nob  = sizeof *lid;
+        pair->dp_rec.db_buf.b_addr = area;
+        pair->dp_rec.db_buf.b_nob  = num_bytes;
+}
+
 static int m0_md_tick_layout(struct m0_fom *fom)
 {
         struct m0_fop_layout          *req;
@@ -1021,6 +1031,7 @@ static int m0_md_tick_layout(struct m0_fom *fom)
         struct m0_layout              *l;
         struct m0_layout_type         *lt;
         struct m0_reqh_md_service     *serv_obj;
+	struct m0_db_pair              pair;
 
         rc = m0_md_tick_generic(fom);
         if (rc != 0)
@@ -1038,7 +1049,7 @@ static int m0_md_tick_layout(struct m0_fom *fom)
         if (rc != 0)
                 goto out;
 
-	M0_LOG(M0_ERROR, "This is a layout fop op = %u, lid = %llu",
+	M0_LOG(M0_DEBUG, "This is a layout fop op = %u, lid = %llu",
 		req->l_op, (unsigned long long)req->l_lid);
 
         serv_obj = container_of(fom->fo_service, struct m0_reqh_md_service,
@@ -1057,24 +1068,36 @@ static int m0_md_tick_layout(struct m0_fom *fom)
 		switch (req->l_op) {
 		case M0_LAYOUT_OP_CREATE:
 			rc = m0_layout_decode(l, &cur, M0_LXO_BUFFER_OP, NULL);
-			if (rc == 0)
-				M0_LOG(M0_ERROR, "Creation Done");
-				//m0_layout_add()
+	                m0_mutex_unlock(&l->l_lock);/* release lock held by ->lto_allocate() */
+			if (rc == 0) {
+				M0_LOG(M0_DEBUG, "Start creating");
+				layout_pair_set(&pair, &req->l_lid,
+						req->l_buf.b_addr,
+						req->l_buf.b_count);
+				rc = m0_layout_add(l, &fom->fo_tx.tx_dbtx, &pair);
+				M0_LOG(M0_DEBUG, "Creation Done");
+			}
 			break;
 		case M0_LAYOUT_OP_DELETE:
 			rc = m0_layout_decode(l, &cur, M0_LXO_BUFFER_OP, NULL);
-			if (rc == 0)
-				M0_LOG(M0_ERROR, "Deletion Done");
-				//m0_layout_delete()
+	                m0_mutex_unlock(&l->l_lock);/* release lock held by ->lto_allocate() */
+			if (rc == 0) {
+				M0_LOG(M0_DEBUG, "Start deleting");
+				layout_pair_set(&pair, &req->l_lid,
+						req->l_buf.b_addr,
+						req->l_buf.b_count);
+				rc = m0_layout_delete(l, &fom->fo_tx.tx_dbtx, &pair);
+				M0_LOG(M0_DEBUG, "Deletion Done");
+			}
 			break;
 		case M0_LAYOUT_OP_LOOKUP:
-			M0_LOG(M0_ERROR, "Lookup Done");
+	                m0_mutex_unlock(&l->l_lock);/* release lock held by ->lto_allocate() */
 			// Lookup from db and encode into reply.
 			// m0_layout_lookup()
 			// m0_layout_encode()
+			M0_LOG(M0_DEBUG, "Lookup Done");
 			break;
 		}
-                m0_mutex_unlock(&l->l_lock);
                 m0_layout_put(l);
 	}
         m0_fom_block_leave(fom);
-- 
1.8.3.2

