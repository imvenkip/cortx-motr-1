From 3a46ab993c01b638376818cfbbdd16c6d6460dcb Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Fri, 1 Feb 2013 14:57:47 +0800
Subject: [PATCH 07/11] unify space/tab

---
 m0t1fs/linux_kernel/dir.c    |  8 +++----
 m0t1fs/linux_kernel/m0t1fs.h |  6 ++---
 mdservice/md_foms.c          | 54 ++++++++++++++++++++++----------------------
 3 files changed, 34 insertions(+), 34 deletions(-)

diff --git a/m0t1fs/linux_kernel/dir.c b/m0t1fs/linux_kernel/dir.c
index 6fca70f..49535a6 100644
--- a/m0t1fs/linux_kernel/dir.c
+++ b/m0t1fs/linux_kernel/dir.c
@@ -896,8 +896,8 @@ static int m0t1fs_mds_cob_fop_populate(const struct m0t1fs_mdop *mo,
                 rc = name_mem2wire(&readdir->r_pos, &mo->mo_attr.ca_name);
                 break;
          case M0_LAYOUT_OPCODE: {
-                struct m0_bufvec          bv;
-                struct m0_bufvec_cursor   cur;
+		struct m0_bufvec          bv;
+		struct m0_bufvec_cursor   cur;
 		struct m0_layout         *l = mo->mo_layout;
 
 		layout = m0_fop_data(fop);
@@ -926,7 +926,7 @@ static int m0t1fs_mds_cob_fop_populate(const struct m0t1fs_mdop *mo,
 			m0_mutex_unlock(&l->l_lock);
 		}
 		break;
-		}
+	}
         default:
                 rc = -ENOSYS;
                 break;
@@ -1106,7 +1106,7 @@ int m0t1fs_layout_op(struct m0t1fs_sb *csb, enum m0_layout_opcode op,
 	mo.mo_layout_id = lid;
 	mo.mo_layout    = layout;
 
-        rc = m0t1fs_mds_cob_op(csb, &mo, &m0_fop_layout_fopt, (void **)&rep);
+	rc = m0t1fs_mds_cob_op(csb, &mo, &m0_fop_layout_fopt, (void **)&rep);
 	M0_LOG(M0_DEBUG, "layout rep rc = %d", rc);
 	if (rc == 0) {
 		M0_LOG(M0_DEBUG, "layout rep->lr_rc = %d", rep->lr_rc);
diff --git a/m0t1fs/linux_kernel/m0t1fs.h b/m0t1fs/linux_kernel/m0t1fs.h
index a891d16..96b7ba4 100644
--- a/m0t1fs/linux_kernel/m0t1fs.h
+++ b/m0t1fs/linux_kernel/m0t1fs.h
@@ -613,9 +613,9 @@ struct m0t1fs_filedata {
  */
 struct m0t1fs_mdop {
         struct m0_cob_attr         mo_attr;
-	enum m0_layout_opcode      mo_layout_op;
-	uint64_t                   mo_layout_id;
-	struct m0_layout          *mo_layout;
+        enum m0_layout_opcode      mo_layout_op;
+        uint64_t                   mo_layout_id;
+        struct m0_layout          *mo_layout;
 };
 
 /**
diff --git a/mdservice/md_foms.c b/mdservice/md_foms.c
index 23d6c11..46b7218 100644
--- a/mdservice/md_foms.c
+++ b/mdservice/md_foms.c
@@ -1021,33 +1021,33 @@ static void layout_pair_set(struct m0_db_pair *pair, uint64_t *lid,
 
 static int m0_md_tick_layout(struct m0_fom *fom)
 {
-        struct m0_fop_layout          *req;
-        struct m0_fop_layout_rep      *rep;
-        struct m0_fop                 *fop;
-        struct m0_fop                 *fop_rep;
-        int                            rc;
-        struct m0_bufvec               bv;
-        struct m0_bufvec_cursor        cur;
-        struct m0_layout              *l;
-        struct m0_layout_type         *lt;
-        struct m0_reqh_md_service     *serv_obj;
+	struct m0_fop_layout          *req;
+	struct m0_fop_layout_rep      *rep;
+	struct m0_fop                 *fop;
+	struct m0_fop                 *fop_rep;
+	int                            rc;
+	struct m0_bufvec               bv;
+	struct m0_bufvec_cursor        cur;
+	struct m0_layout              *l;
+	struct m0_layout_type         *lt;
+	struct m0_reqh_md_service     *serv_obj;
 	struct m0_db_pair              pair;
 
-        rc = m0_md_tick_generic(fom);
-        if (rc != 0)
-                return rc;
+	rc = m0_md_tick_generic(fom);
+	if (rc != 0)
+		return rc;
 
-        fop = fom->fo_fop;
-        M0_ASSERT(fop != NULL);
-        req = m0_fop_data(fop);
+	fop = fom->fo_fop;
+	M0_ASSERT(fop != NULL);
+	req = m0_fop_data(fop);
 
-        fop_rep = fom->fo_rep_fop;
-        M0_ASSERT(fop_rep != NULL);
-        rep = m0_fop_data(fop_rep);
+	fop_rep = fom->fo_rep_fop;
+	M0_ASSERT(fop_rep != NULL);
+	rep = m0_fop_data(fop_rep);
 
-        rc = m0_md_fop_init(fop, fom);
-        if (rc != 0)
-                goto out;
+	rc = m0_md_fop_init(fop, fom);
+	if (rc != 0)
+		goto out;
 
 	M0_LOG(M0_DEBUG, "This is a layout fop op = %u, lid = %llu",
 		req->l_op, (unsigned long long)req->l_lid);
@@ -1055,7 +1055,7 @@ static int m0_md_tick_layout(struct m0_fom *fom)
         serv_obj = container_of(fom->fo_service, struct m0_reqh_md_service,
 				rmds_gen);
 
-        m0_fom_block_enter(fom);
+	m0_fom_block_enter(fom);
 	switch (req->l_op) {
 	case M0_LAYOUT_OP_CREATE:
 	case M0_LAYOUT_OP_DELETE:
@@ -1112,11 +1112,11 @@ static int m0_md_tick_layout(struct m0_fom *fom)
 		break;
 	}
 
-        m0_fom_block_leave(fom);
+	m0_fom_block_leave(fom);
 out:
-        rep->lr_rc = rc;
-        m0_fom_phase_moveif(fom, rc, M0_FOPH_SUCCESS, M0_FOPH_FAILURE);
-        return M0_FSO_AGAIN;
+	rep->lr_rc = rc;
+	m0_fom_phase_moveif(fom, rc, M0_FOPH_SUCCESS, M0_FOPH_FAILURE);
+	return M0_FSO_AGAIN;
 }
 
 
-- 
1.8.3.2

