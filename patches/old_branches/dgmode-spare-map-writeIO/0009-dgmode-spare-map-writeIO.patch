From 7f3388ae12e3520389a4c58e5c1e2c800f98b5cd Mon Sep 17 00:00:00 2001
From: Nachiket Sahasrabuddhe <nachiket_sahasrabuddhe@xyratex.com>
Date: Fri, 14 Feb 2014 14:04:13 +0530
Subject: [PATCH 09/14] dgmode-spare-map-writeIO -A common script for dgmode
 read and write IO is prepared. -'diff' after second repair fails. -A common
 code from m0_sns_repair_mf.sh and m0_dgmode_io.sh  has been put into a
 separate file named m0t1fs_sns_common_inc.sh -Many M0_LOG() messages have
 been added for debugging purpose and shall  be removed. -Prospective
 locations leading to erronous behaviour in future  (when we test IO for
 fragmented IO requests) have been marked.

---
 m0t1fs/linux_kernel/file.c                      |   6 +-
 m0t1fs/linux_kernel/st/m0t1fs_dgmode_io.sh      | 330 ++++++++++++++++++++++++
 m0t1fs/linux_kernel/st/m0t1fs_sns_common_inc.sh |  63 +++++
 m0t1fs/linux_kernel/st/m0t1fs_sns_repair_mf.sh  |  72 +-----
 4 files changed, 398 insertions(+), 73 deletions(-)
 create mode 100755 m0t1fs/linux_kernel/st/m0t1fs_dgmode_io.sh
 create mode 100644 m0t1fs/linux_kernel/st/m0t1fs_sns_common_inc.sh

diff --git a/m0t1fs/linux_kernel/file.c b/m0t1fs/linux_kernel/file.c
index 28d6259..a93efb5 100644
--- a/m0t1fs/linux_kernel/file.c
+++ b/m0t1fs/linux_kernel/file.c
@@ -2133,6 +2133,7 @@ static int pargrp_iomap_populate(struct pargrp_iomap	  *map,
 			if (rc != 0)
 				M0_RETERR(rc, "readrest failed");
 		} else {
+			M0_LOG(M0_FATAL,"Read-old approach selected");
 			map->pi_rtype = PIR_READOLD;
 			rc = map->pi_ops->pi_readold_auxbuf_alloc(map);
 		}
@@ -3564,7 +3565,6 @@ static int ioreq_iosm_handle(struct io_request *req)
 		rc = req->ir_ops->iro_parity_recalc(req);
 		if (rc != 0)
 			goto fail_locked;
-
 		rc = req->ir_nwxfer.nxr_ops->nxo_dispatch(&req->ir_nwxfer);
 		if (rc != 0)
 			goto fail_locked;
@@ -4191,10 +4191,6 @@ static void target_ioreq_seg_add(struct target_ioreq              *ti,
 			pattr[seg] |= PA_DATA;
 			M0_LOG(M0_DEBUG, "Data seg added");
 		} else {
-			/*
-			 * @todo Need to change this to make it work
-			 * irrespective of parity algorithm used.
-			 */
 			buf = map->pi_paritybufs[page_id(goff)]
 						[unit % data_col_nr(play)];
 			pattr[seg] |= PA_PARITY;
diff --git a/m0t1fs/linux_kernel/st/m0t1fs_dgmode_io.sh b/m0t1fs/linux_kernel/st/m0t1fs_dgmode_io.sh
new file mode 100755
index 0000000..c084324
--- /dev/null
+++ b/m0t1fs/linux_kernel/st/m0t1fs_dgmode_io.sh
@@ -0,0 +1,330 @@
+#!/bin/sh
+
+#set -x
+
+. `dirname $0`/common.sh
+. `dirname $0`/m0t1fs_common_inc.sh
+. `dirname $0`/m0t1fs_client_inc.sh
+. `dirname $0`/m0t1fs_server_inc.sh
+. `dirname $0`/m0t1fs_sns_common_inc.sh
+
+dgwrite_test_module()
+{
+	#dd bs=$unit_size count=50 \
+	$@ \
+	   if=./sandbox/source of=./sandbox/file_to_compare >> $MERO_TEST_LOGFILE || {
+		echo "Failed: dd failed.."
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	}
+	sleep 2
+	$@ \
+	  if=./sandbox/source  of=$MERO_M0T1FS_MOUNT_DIR/file_to_compare >> $MERO_TEST_LOGFILE || {
+		echo "Failed: dd failed.."
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	}
+	rm -f ./messages
+	cp /var/log/messages ./messages
+	diff ./sandbox/file_to_compare $MERO_M0T1FS_MOUNT_DIR/file_to_compare
+	echo $?
+}
+
+dgwrite_test()
+{
+	local rc=0
+	local fail_device1=1
+	local fail_device2=9
+	local fail_device3=2
+	local N=3
+	local K=3
+	local P=9
+	local stride=32
+	local unit_size=$((stride * 1024))
+
+	echo "Starting SNS repair testing ..."
+	mount_m0t1fs $MERO_M0T1FS_MOUNT_DIR $stride $N $K $P &>> $MERO_TEST_LOGFILE || {
+		cat $MERO_TEST_LOGFILE
+		return 1
+	}
+	rm -rf ./sandbox
+	mkdir sandbox
+	dd if=/dev/urandom bs=$unit_size count=50 \
+	of=./sandbox/source >> $MERO_TEST_LOGFILE || {
+		echo "Failed: dd failed.."
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	}
+
+	echo "Creating a file"
+	dgwrite_test_module dd bs=$unit_size count=40
+	du -sh ./sandbox/file_to_compare
+	dd if=/dev/urandom bs=$unit_size count=10 \
+	   of=$MERO_M0T1FS_MOUNT_DIR/file2_to_repair >> $MERO_TEST_LOGFILE || {
+		echo "Failed: dd failed.."
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	}
+
+	for ((i=1; i < ${#EP[*]}; i++)) ; do
+		IOSEP="$IOSEP -S ${lnet_nid}:${EP[$i]}"
+	done
+
+####### Set Failure device
+	pool_mach_set_failure $fail_device1
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "IO dgmode-write test 1: writing after first failure"
+	dgwrite_test_module dd bs=$unit_size count=5 seek=25
+
+#	echo "IO dgmode-write test 2: Writing to a file after first failure"
+#	sleep 2
+	sns_repair
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "Taking diff after first repair"
+	diff ./sandbox/file_to_compare $MERO_M0T1FS_MOUNT_DIR/file_to_compare
+	echo $?
+####### Query device state
+	pool_mach_query $fail_device1
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "IO dgmode-write test 2: writing after first repair"
+	dgwrite_test_module dd bs=$unit_size count=40
+	du -sh ./sandbox/file_to_compare
+
+	pool_mach_set_failure $fail_device2
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+
+	echo "IO dgmode-write test 3: writing after second failure"
+	dgwrite_test_module dd bs=$unit_size count=5 seek=25
+	du -sh ./sandbox/file_to_compare
+
+######################################
+dd if=/root/48Kfile of=./sandbox/file_to_compare \
+	bs=$unit_size count=1 seek=25 conv=notrunc 
+
+
+	dd if=/root/48Kfile of=$MERO_M0T1FS_MOUNT_DIR/file_to_compare \
+	bs=$unit_size count=1 seek=25 conv=notrunc 
+
+	echo "Taking diff after putting ascii values and after second failure"
+	diff ./sandbox/file_to_compare $MERO_M0T1FS_MOUNT_DIR/file_to_compare
+######################################
+md5sum $MERO_M0T1FS_MOUNT_DIR/file_to_compare | \
+		tee $MERO_M0T1FS_TEST_DIR/md5
+	sns_repair
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "Checking md5sum after repair"
+	md5sum -c < $MERO_M0T1FS_TEST_DIR/md5
+	pool_mach_query $fail_device2
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+######################################
+	echo "Taking diff after putting ascii values and after second repair"
+	diff  ./sandbox/file_to_compare $MERO_M0T1FS_MOUNT_DIR/file_to_compare
+	echo $?
+######################################
+
+	echo "IO dgmode-write test 4: writing after second repair"
+	echo "" >/var/log/messages
+	dgwrite_test_module dd bs=$unit_size count=5 seek=25
+#	dd if=/root/48Kfile of=./sandbox/file_to_compare \
+#	bs=$unit_size count=1 seek=25 conv=notrunc 
+#
+#
+#	dd if=/root/48Kfile of=$MERO_M0T1FS_MOUNT_DIR/file_to_compare \
+#	bs=$unit_size count=1 seek=25 conv=notrunc 
+
+	echo "Taking diff after putting ascii values"
+	diff ./sandbox/file_to_compare $MERO_M0T1FS_MOUNT_DIR/file_to_compare
+	echo $?
+
+	#md5sum -c < $MERO_M0T1FS_TEST_DIR/md5
+	cp ./sandbox/file_to_compare ./sandbox/file_to_compare_orig
+	du -sh ./sandbox/file_to_compare
+
+	for ((i=8; i < 9; i++)) ; do
+		for ((j=0; j < 3; j++)); do
+			cp ./sandbox/file_to_compare_orig ./sandbox/file_to_compare
+			dd if=$MERO_M0T1FS_MOUNT_DIR/file_to_compare of=./sandbox/file_to_compare \
+			bs=$unit_size count=1 ibs=$unit_size skip=`expr 3 \* $i \+ $j` obs=$unit_size seek=`expr 3 \* $i \+ $j` conv=notrunc
+			du -sh ./sandbox/file_to_compare
+			echo "comparing ["$i", "$j"]"
+			diff ./sandbox/file_to_compare ./sandbox/file_to_compare_orig
+			echo $?
+		done
+	done
+#	pool_mach_set_failure $fail_device3
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "IO dgmode-write test 5: writing after third failure"
+#	dgwrite_test_module dd bs=$unit_size count=5 seek=25
+#	echo "IO dgmode-read test 5: Reading after third failure"
+#	md5sum -c < $MERO_M0T1FS_TEST_DIR/md5
+#
+	echo "unmounting and cleaning.."
+	unmount_and_clean &>> $MERO_TEST_LOGFILE
+
+	return $rc
+}
+
+dgread_test()
+{
+	local rc=0
+	local fail_device1=1
+	local fail_device2=9
+	local fail_device3=2
+	local N=3
+	local K=3
+	local P=9
+	local stride=32
+	local unit_size=$((stride * 1024))
+
+	echo "Starting SNS repair testing ..."
+	mount_m0t1fs $MERO_M0T1FS_MOUNT_DIR $stride $N $K $P &>> $MERO_TEST_LOGFILE || {
+		cat $MERO_TEST_LOGFILE
+		return 1
+	}
+	dd if=/dev/urandom bs=$unit_size count=50 \
+	of=$MERO_M0T1FS_MOUNT_DIR/file1_to_repair >> $MERO_TEST_LOGFILE || {
+		echo "Failed: dd failed.."
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	}
+
+	dd if=/dev/urandom bs=$unit_size count=50 \
+	   of=$MERO_M0T1FS_MOUNT_DIR/file2_to_repair >> $MERO_TEST_LOGFILE || {
+		echo "Failed: dd failed.."
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	}
+
+	dd if=/dev/urandom bs=$unit_size count=50 \
+	   of=$MERO_M0T1FS_MOUNT_DIR/file3_to_repair >> $MERO_TEST_LOGFILE || {
+		echo "Failed: dd failed.."
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	}
+
+md5sum $MERO_M0T1FS_MOUNT_DIR/file1_to_repair | \
+		tee $MERO_M0T1FS_TEST_DIR/md5
+md5sum $MERO_M0T1FS_MOUNT_DIR/file2_to_repair | \
+		tee $MERO_M0T1FS_TEST_DIR/md5
+md5sum $MERO_M0T1FS_MOUNT_DIR/file3_to_repair | \
+		tee $MERO_M0T1FS_TEST_DIR/md5
+
+	for ((i=1; i < ${#EP[*]}; i++)) ; do
+		IOSEP="$IOSEP -S ${lnet_nid}:${EP[$i]}"
+	done
+
+####### Set Failure device
+	pool_mach_set_failure $fail_device1
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "IO dgmode-read test 1: Reading after first failure"
+	md5sum -c < $MERO_M0T1FS_TEST_DIR/md5
+	sleep 2
+	sns_repair
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+####### Query device state
+	pool_mach_query $fail_device1
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "IO dgmode-read test 2: Reading after repair"
+	md5sum -c < $MERO_M0T1FS_TEST_DIR/md5
+
+	pool_mach_set_failure $fail_device2
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "IO dgmode-read test 3: Reading after second failure"
+	md5sum -c < $MERO_M0T1FS_TEST_DIR/md5
+
+	sns_repair
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+
+	pool_mach_query $fail_device2
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "IO dgmode-read test 4: Reading after second repair"
+	md5sum -c < $MERO_M0T1FS_TEST_DIR/md5
+
+	pool_mach_set_failure $fail_device3
+	if [ $? -ne "0" ]
+	then
+		return $?
+	fi
+	echo "IO dgmode-read test 5: Reading after third failure"
+	md5sum -c < $MERO_M0T1FS_TEST_DIR/md5
+
+	echo "unmounting and cleaning.."
+	unmount_and_clean &>> $MERO_TEST_LOGFILE
+
+	return $rc
+}
+
+main()
+{
+	NODE_UUID=`uuidgen`
+	mero_service start 9
+	if [ $? -ne "0" ]
+	then
+		echo "Failed to start Mero Service."
+		return 1
+	fi
+
+	rc=0
+#	dgread_test || {
+#		echo "Failed: SNS repair failed.."
+#		rc=1
+#	}
+#
+	dgwrite_test || {
+		echo "Failed: SNS repair failed.."
+		rc=1
+	}
+	mero_service stop
+	if [ $? -ne "0" ]
+	then
+		echo "Failed to stop Mero Service."
+		return 1
+	fi
+
+	echo "Test log available at $MERO_TEST_LOGFILE."
+
+	return $rc
+}
+
+trap unprepare EXIT
+
+main
diff --git a/m0t1fs/linux_kernel/st/m0t1fs_sns_common_inc.sh b/m0t1fs/linux_kernel/st/m0t1fs_sns_common_inc.sh
new file mode 100644
index 0000000..25a1e63
--- /dev/null
+++ b/m0t1fs/linux_kernel/st/m0t1fs_sns_common_inc.sh
@@ -0,0 +1,63 @@
+pool_mach_set_failure()
+{
+	DEVICES=""
+	STATE=""
+	for i in "$@"
+	do
+		DEVICES="$DEVICES -I $i"
+		STATE="$STATE -s 1"
+	done
+	poolmach="$MERO_CORE_ROOT/pool/m0poolmach -O Set -T device -N $# \
+		 $DEVICES $STATE -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $poolmach
+	if ! $poolmach ; then
+		echo "m0poolmach failed"
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	fi
+
+	return 0
+}
+
+pool_mach_query()
+{
+	DEVICES=""
+	for i in "$@"
+	do
+		DEVICES="$DEVICES -I $i"
+	done
+	poolmach="$MERO_CORE_ROOT/pool/m0poolmach -O Query -T device -N $# \
+		 $DEVICES -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $poolmach
+	if ! $poolmach ; then
+		echo "m0poolmach failed"
+		unmount_and_clean &>> $MERO_TEST_LOGFILE
+		return 1
+	fi
+
+	return 0
+}
+
+sns_repair()
+{
+	repair_trigger="$MERO_CORE_ROOT/sns/cm/st/m0repair -O 2 -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+	echo $repair_trigger
+	if ! $repair_trigger ; then
+		echo "SNS Repair failed"
+		return 1
+	fi
+
+	return 0
+}
+
+sns_rebalance()
+{
+        rebalance_trigger="$MERO_CORE_ROOT/sns/cm/st/m0repair -O 4 -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
+        echo $rebalance_trigger
+        if ! $rebalance_trigger ; then
+                echo "SNS Re-balance failed"
+                return 1
+        fi
+
+	return 0
+}
diff --git a/m0t1fs/linux_kernel/st/m0t1fs_sns_repair_mf.sh b/m0t1fs/linux_kernel/st/m0t1fs_sns_repair_mf.sh
index ec2dda3..249356c 100755
--- a/m0t1fs/linux_kernel/st/m0t1fs_sns_repair_mf.sh
+++ b/m0t1fs/linux_kernel/st/m0t1fs_sns_repair_mf.sh
@@ -6,71 +6,7 @@
 . `dirname $0`/m0t1fs_common_inc.sh
 . `dirname $0`/m0t1fs_client_inc.sh
 . `dirname $0`/m0t1fs_server_inc.sh
-
-pool_mach_set_failure()
-{
-	DEVICES=""
-	STATE=""
-	for i in "$@"
-	do
-		DEVICES="$DEVICES -I $i"
-		STATE="$STATE -s 1"
-	done
-	poolmach="$MERO_CORE_ROOT/pool/m0poolmach -O Set -T device -N $# \
-		 $DEVICES $STATE -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
-	echo $poolmach
-	if ! $poolmach ; then
-		echo "m0poolmach failed"
-		unmount_and_clean &>> $MERO_TEST_LOGFILE
-		return 1
-	fi
-
-	return 0
-}
-
-pool_mach_query()
-{
-	DEVICES=""
-	for i in "$@"
-	do
-		DEVICES="$DEVICES -I $i"
-	done
-	poolmach="$MERO_CORE_ROOT/pool/m0poolmach -O Query -T device -N $# \
-		 $DEVICES -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
-	echo $poolmach
-	if ! $poolmach ; then
-		echo "m0poolmach failed"
-		unmount_and_clean &>> $MERO_TEST_LOGFILE
-		return 1
-	fi
-
-	return 0
-}
-
-sns_repair()
-{
-	repair_trigger="$MERO_CORE_ROOT/sns/cm/st/m0repair -O 2 -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
-	echo $repair_trigger
-	if ! $repair_trigger ; then
-		echo "SNS Repair failed"
-		return 1
-	fi
-
-	return 0
-}
-
-sns_rebalance()
-{
-        rebalance_trigger="$MERO_CORE_ROOT/sns/cm/st/m0repair -O 4 -C ${lnet_nid}:${SNS_CLI_EP} $IOSEP"
-        echo $rebalance_trigger
-        if ! $rebalance_trigger ; then
-                echo "SNS Re-balance failed"
-                return 1
-        fi
-
-	return 0
-}
-
+. `dirname $0`/m0t1fs_sns_common_inc.sh
 sns_repair_test()
 {
 	local rc=0
@@ -169,7 +105,7 @@ sns_repair_test()
 	fi
 	echo "IO dgmode-write test 2: Writing after second failure"
 	echo "">/var/log/messages
-	dd if=/dev/urandom bs=$unit_size count=50 conv=notrunc \
+	dd if=/dev/urandom bs=$unit_size count=50 \
 	of=$MERO_M0T1FS_MOUNT_DIR/file1_to_repair >> $MERO_TEST_LOGFILE || {
 		echo "Failed: dd failed.."
 		cp /var/log/messages .
@@ -203,8 +139,8 @@ sns_repair_test()
 	fi
 	echo "IO dgmode-write test 3: Writing after last failure"
 #	cp /root/48Kfile $MERO_M0T1FS_MOUNT_DIR/file1_to_repair
-	dd if=/dev/urandom bs=$unit_size count=20 conv=notrunc \
-	of=$MERO_M0T1FS_MOUNT_DIR/file1_to_repair >> $MERO_TEST_LOGFILE || {
+	dd if=/dev/urandom bs=$unit_size count=1 conv=notrunc \
+	of=$MERO_M0T1FS_MOUNT_DIR/file1_to_repair seek=10>> $MERO_TEST_LOGFILE || {
 		echo "Failed: dd failed.."
 		cp /var/log/messages .
 		unmount_and_clean &>> $MERO_TEST_LOGFILE
-- 
1.8.3.2

