From 56e380f55fe3f572a4169e0ae91ae06d120cd73f Mon Sep 17 00:00:00 2001
From: Rohan Puri <rohan_puri@xyratex.com>
Date: Wed, 28 Aug 2013 11:19:56 +0530
Subject: [PATCH 026/121] Fix module insert panic & existing addb uts.

---
 addb/addb_rec.c              | 19 ++++++++++++++-----
 m0t1fs/linux_kernel/m0t1fs.c |  2 +-
 rpc/rpclib.c                 | 15 ++++++++++-----
 3 files changed, 25 insertions(+), 11 deletions(-)

diff --git a/addb/addb_rec.c b/addb/addb_rec.c
index d79504e..22247f3 100644
--- a/addb/addb_rec.c
+++ b/addb/addb_rec.c
@@ -152,11 +152,20 @@ static void addb_rec_post(struct m0_addb_mc *mc,
 	 */
 	mc->am_evmgr->evm_post(mc, rec);
 
-	/* Invoke all the monitor's filters */
-	m0_tl_for(addb_mon, &mc->am_reqh->rh_addb_monitoring_ctx.amc_list, mon) {
-		M0_ASSERT(m0_addb_monitor_invariant(mon));
-		mon->am_ops->amo_watch(mon, rec, mc->am_reqh);
-	} m0_tl_endfor;
+	/**
+	 * This conditional traversing is required, since for many UTs
+	 * we do not have reqh and so we do not want to traverse.
+	 * @todo: Find a way to remove this condition and instead assert
+	 * on not NULL.
+	 */
+	if (mc->am_reqh != NULL) {
+		/* Invoke all the monitor's filters */
+		m0_tl_for(addb_mon,
+			  &mc->am_reqh->rh_addb_monitoring_ctx.amc_list, mon) {
+			M0_ASSERT(m0_addb_monitor_invariant(mon));
+			mon->am_ops->amo_watch(mon, rec, mc->am_reqh);
+		} m0_tl_endfor;
+	}
 }
 
 #ifndef __KERNEL__
diff --git a/m0t1fs/linux_kernel/m0t1fs.c b/m0t1fs/linux_kernel/m0t1fs.c
index 700f8e9..fe1d741 100644
--- a/m0t1fs/linux_kernel/m0t1fs.c
+++ b/m0t1fs/linux_kernel/m0t1fs.c
@@ -78,7 +78,7 @@ static int m0t1fs_addb_monitor_pfom_tick(struct m0_fom *fom, void *data,
 	/**
 	 * @todo: Implement ADDB summary record posting logic.
 	 */
-	return 0;
+	return -1;
 }
 
 static struct file_system_type m0t1fs_fs_type = {
diff --git a/rpc/rpclib.c b/rpc/rpclib.c
index d4cdaa4..5e48993 100644
--- a/rpc/rpclib.c
+++ b/rpc/rpclib.c
@@ -146,11 +146,16 @@ int m0_rpc_client_start(struct m0_rpc_client_ctx *cctx)
 
 	M0_SET0(&cctx->rcx_reqh);
 	rc = M0_REQH_INIT(&cctx->rcx_reqh,
-			  .rhia_dtm       = (void*)1,
-			  .rhia_db        = NULL,
-			  .rhia_mdstore   = (void*)1,
-			  .rhia_fol       = &cctx->rcx_fol,
-			  .rhia_svc       = (void*)1);
+			  .rhia_dtm          = (void*)1,
+			  .rhia_db           = cctx->rcx_dbenv,
+			  .rhia_mdstore      = (void*)1,
+			  .rhia_fol          = &cctx->rcx_fol,
+			  .rhia_svc          = (void*)1,
+			  /**
+			   * We need stats service endpoint
+			   * not NULL, so that monitors init is called.
+			   */
+			  .rhia_stats_svc_ep = "UT");
 	if (rc != 0)
 		goto err;
 	m0_reqh_start(&cctx->rcx_reqh);
-- 
1.8.3.2

