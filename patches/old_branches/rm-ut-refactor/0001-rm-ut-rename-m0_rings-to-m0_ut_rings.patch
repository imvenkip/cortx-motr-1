From 85fffff22068c9ef351264a114352c93a212fcea Mon Sep 17 00:00:00 2001
From: "Valery V. Vorotyntsev" <valery_vorotyntsev@xyratex.com>
Date: Thu, 16 May 2013 12:12:27 +0300
Subject: [PATCH 1/4] rm/ut: rename m0_rings to m0_ut_rings

The original name is not appropriate, since the structure is never used
outside UT code.
---
 rm/ut/rings.c | 16 ++++++++--------
 rm/ut/rings.h |  2 +-
 rm/ut/rmut.h  | 18 +++++++++---------
 3 files changed, 18 insertions(+), 18 deletions(-)

diff --git a/rm/ut/rings.c b/rm/ut/rings.c
index 6653c27..393756a 100644
--- a/rm/ut/rings.c
+++ b/rm/ut/rings.c
@@ -48,9 +48,9 @@ static void rings_credit_init(struct m0_rm_resource *resource,
 
 void rings_resource_free(struct m0_rm_resource *resource)
 {
-	struct m0_rings *rings;
+	struct m0_ut_rings *rings;
 
-	rings = container_of(resource, struct m0_rings, rs_resource);
+	rings = container_of(resource, struct m0_ut_rings, rs_resource);
 	m0_free(rings);
 }
 
@@ -76,9 +76,9 @@ static bool rings_resources_are_equal(const struct m0_rm_resource *c0,
 
 static bool rings_resource_is(const struct m0_rm_resource *res, uint64_t res_id)
 {
-	struct m0_rings *ring;
+	struct m0_ut_rings *ring;
 
-	ring = container_of(res, struct m0_rings, rs_resource);
+	ring = container_of(res, struct m0_ut_rings, rs_resource);
 	M0_ASSERT(ring != NULL);
 	return res_id == ring->rs_id;
 }
@@ -92,9 +92,9 @@ static m0_bcount_t rings_resource_len(const struct m0_rm_resource *resource)
 static int rings_resource_encode(struct m0_bufvec_cursor  *cur,
 				 struct m0_rm_resource    *resource)
 {
-	struct m0_rings *rings;
+	struct m0_ut_rings *rings;
 
-	rings = container_of(resource, struct m0_rings, rs_resource);
+	rings = container_of(resource, struct m0_ut_rings, rs_resource);
 	M0_ASSERT(rings != NULL);
 
 	m0_bufvec_cursor_copyto(cur, (void *)&resource->r_type->rt_id,
@@ -108,8 +108,8 @@ static int rings_resource_encode(struct m0_bufvec_cursor  *cur,
 static int rings_resource_decode(struct m0_bufvec_cursor  *cur,
 				 struct m0_rm_resource   **resource)
 {
-	static uint64_t             res_id;
-	struct m0_rings            *rings;
+	static uint64_t     res_id;
+	struct m0_ut_rings *rings;
 
 	m0_bufvec_cursor_copyfrom(cur, &res_id, sizeof res_id);
 
diff --git a/rm/ut/rings.h b/rm/ut/rings.h
index 7ac7ad3..16bbf91 100644
--- a/rm/ut/rings.h
+++ b/rm/ut/rings.h
@@ -76,7 +76,7 @@ enum {
 	RINGS_RESOURCE_TYPE_ID = 0,
 };
 
-struct m0_rings {
+struct m0_ut_rings {
 	struct m0_rm_resource rs_resource;
 	uint64_t              rs_id;
 };
diff --git a/rm/ut/rmut.h b/rm/ut/rmut.h
index 4b258b9..1a0285a 100644
--- a/rm/ut/rmut.h
+++ b/rm/ut/rmut.h
@@ -39,31 +39,31 @@ enum obj_type {
 };
 
 enum rm_server {
-	SERVER_1 = 0,
+	SERVER_1,
 	SERVER_2,
 	SERVER_3,
 	SERVER_NR,
-	SERVER_INVALID,
+	SERVER_INVALID
 };
 
 enum rr_tests {
-	TEST1 = 0,
+	TEST1,
 	TEST2,
 	TEST3,
 	TEST4,
-	TEST_NR,
+	TEST_NR
 };
 
 /*
  * Resource manager class-collection.
  */
 struct rm_ut_data {
-	struct m0_rm_domain	   rd_dom;
+	struct m0_rm_domain        rd_dom;
 	struct m0_rm_resource_type rd_rt;
-	struct m0_rings		   rd_res;
-	struct m0_rm_owner	   rd_owner;
-	struct m0_rm_incoming	   rd_in;
-	struct m0_rm_credit	   rd_credit;
+	struct m0_ut_rings         rd_res;
+	struct m0_rm_owner         rd_owner;
+	struct m0_rm_incoming      rd_in;
+	struct m0_rm_credit        rd_credit;
 };
 
 /*
-- 
1.8.3.2

