From 9a0f681bf8357d7fc4d3b7a8994f8269afa8fd55 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Tue, 5 Mar 2013 18:14:46 +0800
Subject: [PATCH 16/24] move sample code into doxygen @code section. handle
 error cases in m0_ios_mds_rpc_ctx_init().

---
 ioservice/cob_foms.c   | 64 +++++++-------------------------------------------
 ioservice/io_service.c | 16 ++++++-------
 ioservice/io_service.h |  3 ++-
 mero/setup.c           |  4 ++--
 4 files changed, 21 insertions(+), 66 deletions(-)

diff --git a/ioservice/cob_foms.c b/ioservice/cob_foms.c
index 90deeff..283a5a0 100644
--- a/ioservice/cob_foms.c
+++ b/ioservice/cob_foms.c
@@ -332,13 +332,14 @@ static int cc_cob_nskey_make(struct m0_cob_nskey **nskey,
 
 static int cc_cob_create(struct m0_fom *fom, struct m0_fom_cob_op *cc)
 {
-	int		      rc;
-	struct m0_cob	     *cob;
-	struct m0_cob_domain *cdom;
-	struct m0_cob_nskey  *nskey;
-	struct m0_cob_nsrec   nsrec;
-	struct m0_cob_fabrec *fabrec;
-	struct m0_cob_omgrec  omgrec;
+	int			  rc;
+	struct m0_cob		 *cob;
+	struct m0_cob_domain	 *cdom;
+	struct m0_fop_cob_create *fop;
+	struct m0_cob_nskey	 *nskey;
+	struct m0_cob_nsrec	  nsrec;
+	struct m0_cob_fabrec	 *fabrec;
+	struct m0_cob_omgrec      omgrec;
 
 	M0_PRE(fom != NULL);
 	M0_PRE(cc != NULL);
@@ -346,6 +347,7 @@ static int cc_cob_create(struct m0_fom *fom, struct m0_fom_cob_op *cc)
 
 	cdom = cdom_get(fom);
 	M0_ASSERT(cdom != NULL);
+	fop = m0_fop_data(fom->fo_fop);
 
         rc = m0_cob_alloc(cdom, &cob);
         if (rc)
@@ -354,54 +356,6 @@ static int cc_cob_create(struct m0_fom *fom, struct m0_fom_cob_op *cc)
         M0_LOG(M0_DEBUG, "Creating cob for [%lx:%lx]/%x",
                cc->fco_cfid.f_container, cc->fco_cfid.f_key, cc->fco_cob_idx);
 
-if (0) {
-	/* This is the use case of getattr and getlayout from ioservice or
-	 * other services, e.g. cm */
-        struct m0_fid      gfid = cc->fco_gfid;
-        struct m0_cob_attr attr = { {0} };
-	struct m0_layout_domain dom;
-	struct m0_layout_domain *ldom = &dom;
-	int new;
-	struct m0_pdclust_layout *pdl = NULL;
-	struct m0_layout *layout = NULL;
-
-	M0_LOG(M0_FATAL, "getattr");
-	rc = m0_ios_mds_getattr(fom->fo_service->rs_reqh, &gfid, &attr);
-	M0_LOG(M0_FATAL, "rc = %d lid = %lld", rc, (unsigned long long)attr.ca_lid);
-	M0_ASSERT(rc == 0);
-	M0_ASSERT(attr.ca_valid | M0_COB_LID);
-
-	if (m0_pdclust_layout_type.lt_domain == NULL) {
-		rc = m0_layout_domain_init(ldom, fom->fo_service->rs_reqh->rh_dbenv);
-		M0_ASSERT(rc == 0);
-		rc = m0_layout_standard_types_register(ldom);
-		M0_ASSERT(rc == 0);
-		new  = 1;
-	} else {
-		ldom = m0_pdclust_layout_type.lt_domain;
-		new = 0;
-	}
-
-	M0_LOG(M0_FATAL, "getlayout new = %d", new);
-	rc = m0_ios_mds_layout_get(fom->fo_service->rs_reqh, ldom, attr.ca_lid, &layout);
-	M0_LOG(M0_FATAL, "getlayout rc = %d", rc);
-	if (rc == 0) {
-		pdl = m0_layout_to_pdl(layout);
-		M0_LOG(M0_FATAL, "pdl N=%d,K=%d,P=%d,unit_size=%llu",
-				 m0_pdclust_N(pdl),
-				 m0_pdclust_K(pdl),
-				 m0_pdclust_P(pdl),
-				 (unsigned long long)m0_pdclust_unit_size(pdl));
-
-		m0_layout_put(layout);
-	}
-
-	if (new) {
-		m0_layout_standard_types_unregister(ldom);
-		m0_layout_domain_fini(ldom);
-	}
-}
-
 	rc = cc_cob_nskey_make(&nskey, &cc->fco_gfid, cc->fco_cob_idx);
 	if (rc != 0) {
 		IOS_ADDB_FUNCFAIL(rc, CC_COB_CREATE_1, &m0_ios_addb_ctx);
diff --git a/ioservice/io_service.c b/ioservice/io_service.c
index e1d8c32..3b37cc0 100644
--- a/ioservice/io_service.c
+++ b/ioservice/io_service.c
@@ -500,11 +500,8 @@ void ios_prepare_to_stop(struct m0_reqh_service *service)
  */
 static void ios_stop(struct m0_reqh_service *service)
 {
-	struct m0_reqh_io_service *serv_obj;
 	M0_PRE(service != NULL);
 
-	serv_obj = container_of(service, struct m0_reqh_io_service, rios_gen);
-
 	m0_ios_poolmach_fini(service->rs_reqh);
 	ios_delete_buffer_pool(service);
 	m0_ios_cdom_fini(service->rs_reqh);
@@ -634,12 +631,17 @@ M0_INTERNAL int m0_ios_mds_rpc_ctx_init(struct m0_reqh_service *service)
 	}
 
 	serv_obj = container_of(service, struct m0_reqh_io_service, rios_gen);
-	rpc_client_ctx = m0_alloc(sizeof *rpc_client_ctx);
+	M0_ALLOC_PTR(rpc_client_ctx);
 	if (rpc_client_ctx == NULL)
 		M0_RETURN(-ENOMEM);
 
 	cl_ndom = &serv_obj->rios_cl_ndom;
-	m0_net_domain_init(cl_ndom, &m0_net_lnet_xprt, &service->rs_addb_ctx);
+	rc = m0_net_domain_init(cl_ndom, &m0_net_lnet_xprt,
+				&service->rs_addb_ctx);
+	if (rc != 0) {
+		m0_free(rpc_client_ctx);
+		M0_RETURN(rc);
+	}
 	rpc_client_ctx->rcx_net_dom            = cl_ndom;
 	rpc_client_ctx->rcx_local_addr         = cli_ep_addr;
 	rpc_client_ctx->rcx_remote_addr        = srv_ep_addr;
@@ -653,13 +655,11 @@ M0_INTERNAL int m0_ios_mds_rpc_ctx_init(struct m0_reqh_service *service)
 
 	rc = m0_rpc_client_start(rpc_client_ctx);
 	if (rc != 0) {
+		m0_net_domain_fini(cl_ndom);
 		m0_free(rpc_client_ctx);
 		M0_RETURN(rc);
 	}
 
-	m0_rpc_machine_conn_list_dump(&rpc_client_ctx->rcx_rpc_machine, 1);
-	m0_rpc_machine_conn_list_dump(&rpc_client_ctx->rcx_rpc_machine, 0);
-
 	ios_mds_rpc_ctx_key = m0_reqh_lockers_allot();
 	M0_PRE(m0_reqh_lockers_is_empty(reqh, ios_mds_rpc_ctx_key));
 	m0_rwlock_write_lock(&reqh->rh_rwlock);
diff --git a/ioservice/io_service.h b/ioservice/io_service.h
index 7087e3c..435685d 100644
--- a/ioservice/io_service.h
+++ b/ioservice/io_service.h
@@ -98,7 +98,8 @@ struct m0_reqh_io_service {
 	/** Cob domain for ioservice. */
 	struct m0_cob_domain         *rios_cdom;
 
-	/** rpc client to metadata & management service.
+	/**
+	 * rpc client to metadata & management service.
 	 * This is stored in reqh as a key. So other services, like "sns_repair"
 	 * can also use this to contact mds to get layout for files, get
 	 * attributes for files, etc.
diff --git a/mero/setup.c b/mero/setup.c
index 90d2941..e6a33fd 100644
--- a/mero/setup.c
+++ b/mero/setup.c
@@ -1707,11 +1707,11 @@ static int reqh_ctxs_are_valid(struct m0_mero *cctx)
 
 	if (cctx->cc_mds_epx.ex_endpoint == NULL) {
 		M0_LOG(M0_WARN, "Missing mdservice endpoint.\n"
-				 "Use -G to provice a valid one");
+				 "Use -G to provide a valid one");
 	}
 	if (cctx->cc_cli2mds_epx.ex_endpoint == NULL) {
 		M0_LOG(M0_WARN, "Missing client to mdservice endpoint.\n"
-				 "Use -L to provice a valid one");
+				 "Use -L to provide a valid one");
 	}
 
 	M0_RETURN(rc);
-- 
1.8.3.2

