From e19b3ba4345c78c213925adebb3c0c604040f817 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Fri, 4 Jan 2013 15:34:36 +0800
Subject: [PATCH 02/24] store confd path in reqh service: this is used to
 retrieve configuration via confc.

---
 ioservice/io_service.c | 26 ++++++++++++++++++--------
 ioservice/io_service.h |  3 +++
 2 files changed, 21 insertions(+), 8 deletions(-)

diff --git a/ioservice/io_service.c b/ioservice/io_service.c
index 3b0e770..9bb13dc 100644
--- a/ioservice/io_service.c
+++ b/ioservice/io_service.c
@@ -357,7 +357,7 @@ static void ios_delete_buffer_pool(struct m0_reqh_service *service)
  */
 static int ios_allocate(struct m0_reqh_service **service,
 			struct m0_reqh_service_type *stype,
-			const char *arg __attribute__((unused)))
+			const char *arg)
 {
 	int                        i;
 	int                        j;
@@ -384,6 +384,9 @@ static int ios_allocate(struct m0_reqh_service **service,
         bufferpools_tlist_init(&ios->rios_buffer_pools);
         ios->rios_magic = M0_IOS_REQH_SVC_MAGIC;
 
+	/* confd to configuration database. */
+	ios->rios_confd = arg;
+
         *service = &ios->rios_gen;
 	(*service)->rs_ops = &ios_ops;
 
@@ -464,8 +467,8 @@ static int ios_start(struct m0_reqh_service *service)
 		return -ENOMEM;
 	}
 
-	/* Init serv_obj->rios_mds_rpc_ctx here */
 	/*
+	// Init serv_obj->rios_mds_rpc_ctx here
 	m0_net_domain_init(&cl_ndom, &m0_net_lnet_xprt);
 	serv_obj->rios_mds_rpc_ctx->rcx_net_dom            = &cl_ndom;
 	serv_obj->rios_mds_rpc_ctx->rcx_local_addr         = cl_ep_addr;
@@ -477,8 +480,8 @@ static int ios_start(struct m0_reqh_service *service)
 	serv_obj->rios_mds_rpc_ctx->rcx_nr_slots           = MAX_RPC_SLOTS_NR;
 	serv_obj->rios_mds_rpc_ctx->rcx_timeout_s          = RPC_TIMEOUTS;
 	serv_obj->rios_mds_rpc_ctx->rcx_max_rpcs_in_flight = MAX_RPCS_IN_FLIGHT;
-	*/
-	/* And then init client */
+
+	//And then init client
 	rc = m0_rpc_client_start(serv_obj->rios_mds_rpc_ctx);
 	if (rc != 0) {
 		m0_reqh_key_fini(service->rs_reqh,
@@ -487,10 +490,13 @@ static int ios_start(struct m0_reqh_service *service)
 		return rc;
 	}
 
-	/* When necessary, we can send rpc to mds to get layout and other
-	 * file attributes.
-	 */
-	/* This is an example to send a request to mds, e.g. getattr, layout_get
+	// When necessary, we can send rpc to mds to get layout and other
+	// file attributes.
+
+	// Now we can use conf to get configuration, e.g. layout.
+	// rios_confd can be used here.
+
+	// This is an example to send a request to mds, e.g. getattr, layout
 	fop = m0_fop_alloc(some_fop_fopt, NULL);
 	req = m0_fop_data(fop);
 	rc = m0_rpc_client_call(fop, &serv_obj->rios_mds_rpc_ctx->rcx_session,
@@ -503,7 +509,9 @@ static int ios_start(struct m0_reqh_service *service)
 
 	rc = m0_ios_poolmach_init(service->rs_reqh);
 	if (rc != 0) {
+		/*
 		m0_rpc_client_stop(serv_obj->rios_mds_rpc_ctx);
+		*/
 		m0_reqh_key_fini(service->rs_reqh,
 				 serv_obj->rios_mds_rpc_ctx_key);
 		ios_delete_buffer_pool(service);
@@ -527,7 +535,9 @@ static void ios_stop(struct m0_reqh_service *service)
 
 	serv_obj = container_of(service, struct m0_reqh_io_service, rios_gen);
 
+	/* stop the client to mds.
 	m0_rpc_client_stop(serv_obj->rios_mds_rpc_ctx);
+	*/
 	m0_reqh_key_fini(service->rs_reqh, serv_obj->rios_mds_rpc_ctx_key);
 
 	m0_ios_poolmach_fini(service->rs_reqh);
diff --git a/ioservice/io_service.h b/ioservice/io_service.h
index c86a584..7bb71f6 100644
--- a/ioservice/io_service.h
+++ b/ioservice/io_service.h
@@ -105,7 +105,10 @@ struct m0_reqh_io_service {
 	 * attributes for files, etc.
 	 */
 	struct m0_rpc_client_ctx    *rios_mds_rpc_ctx;
+	/** reqh key */
 	unsigned                     rios_mds_rpc_ctx_key;
+	/** confd path */
+	const char                  *rios_confd;
 
         /** magic to check io service object */
         uint64_t                     rios_magic;
-- 
1.8.3.2

