From f7b8563e39b32c03d94fd9d3f666f3d621aa0392 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Mon, 11 Mar 2013 23:32:00 +0800
Subject: [PATCH 21/24] move sample code to layout_get(). more doxgen comments.

---
 ioservice/io_service.c | 64 +++++++++++++++++++++++++++++++++++++++++++++++++-
 ioservice/io_service.h |  3 ++-
 sns/cm/service.c       | 10 ++++++--
 3 files changed, 73 insertions(+), 4 deletions(-)

diff --git a/ioservice/io_service.c b/ioservice/io_service.c
index 676ca7d..ae72842 100644
--- a/ioservice/io_service.c
+++ b/ioservice/io_service.c
@@ -705,7 +705,14 @@ M0_INTERNAL void m0_ios_mds_rpc_ctx_fini(struct m0_reqh_service *service)
 	m0_free(rpc_client_ctx);
 }
 
-M0_INTERNAL int m0_ios_mds_getattr(struct m0_reqh *reqh, struct m0_fid *gfid,
+/**
+ * Gets file attributes from mdservice.
+ * @param reqh the request handler.
+ * @param gfid the global fid of the file.
+ * @param attr the returned attributes will be stored here.
+ */
+M0_INTERNAL int m0_ios_mds_getattr(struct m0_reqh *reqh,
+				   const struct m0_fid *gfid,
 				   struct m0_cob_attr *attr)
 {
 	struct m0_rpc_client_ctx  *rpc_client_ctx;
@@ -743,6 +750,61 @@ M0_INTERNAL int m0_ios_mds_getattr(struct m0_reqh *reqh, struct m0_fid *gfid,
 	return rc;
 }
 
+/**
+ Gets layout from mdservice with specified layout id.
+ @param reqh the request handler.
+ @param ldom the layout domain in which the layout will be created.
+ @param lid  the layout id to query.
+ @param l_out returned layout will be stored here.
+
+ The sample code to use m0_ios_mds_getattr() and m0_ios_mds_layout_get() in
+ services such as ioservice and copy machine is as following:
+ @code
+        struct m0_fid      gfid = cc->fco_gfid;
+        struct m0_cob_attr attr = { {0} };
+	struct m0_layout_domain dom;
+	struct m0_layout_domain *ldom = &dom;
+	int new;
+	struct m0_pdclust_layout *pdl = NULL;
+	struct m0_layout *layout = NULL;
+
+	M0_LOG(M0_FATAL, "getattr");
+	rc = m0_ios_mds_getattr(fom->fo_service->rs_reqh, &gfid, &attr);
+	M0_LOG(M0_FATAL, "rc = %d lid = %lld", rc, (unsigned long long)attr.ca_lid);
+	M0_ASSERT(rc == 0);
+	M0_ASSERT(attr.ca_valid | M0_COB_LID);
+
+	if (m0_pdclust_layout_type.lt_domain == NULL) {
+		rc = m0_layout_domain_init(ldom, fom->fo_service->rs_reqh->rh_dbenv);
+		M0_ASSERT(rc == 0);
+		rc = m0_layout_standard_types_register(ldom);
+		M0_ASSERT(rc == 0);
+		new  = 1;
+	} else {
+		ldom = m0_pdclust_layout_type.lt_domain;
+		new = 0;
+	}
+
+	M0_LOG(M0_FATAL, "getlayout new = %d", new);
+	rc = m0_ios_mds_layout_get(fom->fo_service->rs_reqh, ldom, attr.ca_lid, &layout);
+	M0_LOG(M0_FATAL, "getlayout rc = %d", rc);
+	if (rc == 0) {
+		pdl = m0_layout_to_pdl(layout);
+		M0_LOG(M0_FATAL, "pdl N=%d,K=%d,P=%d,unit_size=%llu",
+				 m0_pdclust_N(pdl),
+				 m0_pdclust_K(pdl),
+				 m0_pdclust_P(pdl),
+				 (unsigned long long)m0_pdclust_unit_size(pdl));
+
+		m0_layout_put(layout);
+	}
+
+	if (new) {
+		m0_layout_standard_types_unregister(ldom);
+		m0_layout_domain_fini(ldom);
+	}
+ @endcode
+*/
 M0_INTERNAL int m0_ios_mds_layout_get(struct m0_reqh *reqh,
 				      struct m0_layout_domain *ldom,
 				      uint64_t lid,
diff --git a/ioservice/io_service.h b/ioservice/io_service.h
index 435685d..23b08ad 100644
--- a/ioservice/io_service.h
+++ b/ioservice/io_service.h
@@ -125,7 +125,8 @@ M0_INTERNAL struct m0_rpc_client_ctx
 
 M0_INTERNAL void m0_ios_mds_rpc_ctx_fini(struct m0_reqh_service *service);
 
-M0_INTERNAL int m0_ios_mds_getattr(struct m0_reqh *reqh, struct m0_fid *gfid,
+M0_INTERNAL int m0_ios_mds_getattr(struct m0_reqh *reqh,
+				   const struct m0_fid *gfid,
 				   struct m0_cob_attr *attr);
 
 M0_INTERNAL int m0_ios_mds_layout_get(struct m0_reqh *reqh,
diff --git a/sns/cm/service.c b/sns/cm/service.c
index ddfc0c3..a23e3f6 100644
--- a/sns/cm/service.c
+++ b/sns/cm/service.c
@@ -119,12 +119,18 @@ static int svc_start(struct m0_reqh_service *service)
 	cm = container_of(service, struct m0_cm, cm_service);
 	rc = m0_cm_setup(cm) ?: m0_sns_repair_trigger_fop_init();
 
-	/* the following shows how to retrieve ioservice endpoints list */
+	/* The following shows how to retrieve ioservice endpoints list.
+	 * Copy machine can establish connections to all ioservices,
+	 * and build a map for "cob_id" -> "sesssion of ioservice" with
+	 * the same algorithm on m0t1fs client.
+	 */
 	rctx = service->rs_reqh_ctx;
 	mero = rctx->rc_mero;
 	m0_tl_for(cs_eps, &mero->cc_ios_eps, ep) {
 		M0_ASSERT(cs_endpoint_and_xprt_bob_check(ep));
-		M0_LOG(M0_DEBUG, "ioservice xprt:endpoints: %s:%s",
+		M0_LOG(M0_FATAL, "pool_width=%d, "
+				 "ioservice xprt:endpoints: %s:%s",
+				 mero->cc_pool_width,
 				 ep->ex_xprt, ep->ex_endpoint);
 	} m0_tl_endfor;
 
-- 
1.8.3.2

