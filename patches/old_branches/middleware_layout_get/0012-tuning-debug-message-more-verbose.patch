From 0eea192f7e6b802fb359b1bd00d3bf75a19e25f5 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Mon, 4 Mar 2013 13:21:19 +0800
Subject: [PATCH 12/24] tuning debug message more verbose

---
 ioservice/io_service.c   | 13 ++++++-------
 ioservice/ut/bulkio_ut.c |  4 ++++
 reqh/reqh.c              |  8 ++++++++
 rpc/session_foms.c       |  4 ++--
 4 files changed, 20 insertions(+), 9 deletions(-)

diff --git a/ioservice/io_service.c b/ioservice/io_service.c
index f90f1a0..6beacf1 100644
--- a/ioservice/io_service.c
+++ b/ioservice/io_service.c
@@ -484,11 +484,11 @@ static int ios_start(struct m0_reqh_service *service)
 
 void ios_prepare_to_stop(struct m0_reqh_service *service)
 {
-	M0_LOG(M0_DEBUG, "ioservice PREPARE ......");
+	M0_LOG(M0_FATAL, "ioservice PREPARE ......");
 	m0_ios_mds_rpc_ctx_fini(service);
-	M0_LOG(M0_DEBUG, "ioservice session/connection terminate fops sent");
-	m0_nanosleep(m0_time(10,0), NULL);
-	M0_LOG(M0_DEBUG, "ioservice PREPARE STOPPED");
+	M0_LOG(M0_FATAL, "ioservice session/connection terminate fops sent");
+	m0_nanosleep(m0_time(21,0), NULL);
+	M0_LOG(M0_FATAL, "ioservice PREPARE STOPPED");
 }
 
 /**
@@ -620,7 +620,7 @@ M0_INTERNAL int m0_ios_mds_rpc_ctx_init(struct m0_reqh_service *service)
 	const char                *srv_ep_addr;
 	enum {
 		RPC_TIMEOUT              = 8, /* seconds */
-		NR_SLOTS_PER_SESSION     = 1,
+		NR_SLOTS_PER_SESSION     = 2,
 		MAX_NR_RPC_IN_FLIGHT     = 5,
 	};
 
@@ -641,8 +641,7 @@ M0_INTERNAL int m0_ios_mds_rpc_ctx_init(struct m0_reqh_service *service)
 		M0_RETURN(-ENOMEM);
 
 	cl_ndom = &serv_obj->rios_cl_ndom;
-	m0_net_domain_init(&serv_obj->rios_cl_ndom, &m0_net_lnet_xprt,
-			   &service->rs_addb_ctx);
+	m0_net_domain_init(cl_ndom, &m0_net_lnet_xprt, &service->rs_addb_ctx);
 	rpc_client_ctx->rcx_net_dom            = cl_ndom;
 	rpc_client_ctx->rcx_local_addr         = cli_ep_addr;
 	rpc_client_ctx->rcx_remote_addr        = srv_ep_addr;
diff --git a/ioservice/ut/bulkio_ut.c b/ioservice/ut/bulkio_ut.c
index e3181ce..77e3167 100644
--- a/ioservice/ut/bulkio_ut.c
+++ b/ioservice/ut/bulkio_ut.c
@@ -33,6 +33,7 @@
 #include "fop/fom_generic.c"
 
 static struct bulkio_params *bp;
+#define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_IOSERVICE
 
 extern void bulkioapi_test(void);
 static int io_fop_server_write_fom_create(struct m0_fop  *fop,
@@ -1638,7 +1639,9 @@ static void bulkio_init(void)
 
 static void bulkio_fini(void)
 {
+	M0_LOG(M0_FATAL, "client stopping");
 	bulkio_client_stop(bp->bp_cctx);
+	M0_LOG(M0_FATAL, "client stopped");
 
 	bulkio_server_stop(bp->bp_sctx);
 	m0_addb_mc_fini(&m0_addb_gmc);
@@ -1681,3 +1684,4 @@ const struct m0_test_suite bulkio_server_ut = {
 	}
 };
 M0_EXPORTED(bulkio_server_ut);
+#undef M0_TRACE_SUBSYSTEM
diff --git a/reqh/reqh.c b/reqh/reqh.c
index 8deea76..5a70af7 100644
--- a/reqh/reqh.c
+++ b/reqh/reqh.c
@@ -222,6 +222,7 @@ M0_INTERNAL void m0_reqh_shutdown_wait(struct m0_reqh *reqh)
 {
 	struct m0_reqh_service *service;
 	struct m0_reqh_service *mdservice = NULL;
+	struct m0_reqh_service *rpcservice = NULL;
 
 	M0_PRE(reqh != NULL);
 
@@ -232,12 +233,19 @@ M0_INTERNAL void m0_reqh_shutdown_wait(struct m0_reqh *reqh)
 			mdservice = service;
 			continue;
 		}
+		if ((strcmp(service->rs_type->rst_name, "rpcservice") == 0)) {
+			rpcservice = service;
+			continue;
+		}
 		m0_reqh_service_prepare_to_stop(service);
 	} m0_tl_endfor;
 
 	/* shutdown mdservice */
 	if (mdservice != NULL)
 		m0_reqh_service_prepare_to_stop(mdservice);
+	/* shutdown rpcservice */
+	if (rpcservice != NULL)
+		m0_reqh_service_prepare_to_stop(rpcservice);
 
 
 	m0_rwlock_write_lock(&reqh->rh_rwlock);
diff --git a/rpc/session_foms.c b/rpc/session_foms.c
index 6c69e4c..abbebf4 100644
--- a/rpc/session_foms.c
+++ b/rpc/session_foms.c
@@ -465,7 +465,7 @@ M0_INTERNAL int m0_rpc_fom_session_terminate_tick(struct m0_fom *fom)
 	m0_rpc_machine_unlock(machine);
 
 	reply->rstr_rc = rc;
-	M0_LOG(M0_INFO, "Session terminate %s: session [%p] rc [%d]",
+	M0_LOG(M0_FATAL, "Session terminate %s: session [%p] rc [%d]",
 			(rc == 0) ? "successful" : "failed", session, rc);
 	/*
 	 * Note: request is received on SESSION_0, which is different from
@@ -601,7 +601,7 @@ M0_INTERNAL int m0_rpc_fom_conn_terminate_tick(struct m0_fom *fom)
 		if (rc == 0) /* connection is successfully terminated */
 			fop_rep->f_item.ri_ops = &conn_terminate_reply_item_ops;
 		m0_fom_phase_set(fom, M0_FOPH_FINISH);
-		M0_LOG(M0_DEBUG, "Conn terminate successful: conn [%p] %d",
+		M0_LOG(M0_FATAL, "Conn terminate successful: conn [%p] %d",
 			conn, rc);
 		m0_rpc_reply_post(&fop->f_item, &fop_rep->f_item);
 		M0_LEAVE();
-- 
1.8.3.2

