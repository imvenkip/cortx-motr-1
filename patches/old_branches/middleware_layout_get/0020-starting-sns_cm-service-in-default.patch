From 2ee4d43080830ec2b72af5cdd522ca3544877c33 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Thu, 7 Mar 2013 20:28:17 +0800
Subject: [PATCH 20/24] starting sns_cm service in default accessing ioservice
 endpoints list in cm service.

---
 m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh |  1 +
 m0t1fs/linux_kernel/st/m0t1fs_server_inc.sh |  2 +-
 mero/setup.c                                |  8 ++++----
 mero/setup.h                                |  2 ++
 sns/cm/service.c                            | 17 +++++++++++++++--
 5 files changed, 23 insertions(+), 7 deletions(-)

diff --git a/m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh b/m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh
index 06a7136..2fc763d 100644
--- a/m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh
+++ b/m0t1fs/linux_kernel/st/m0t1fs_common_inc.sh
@@ -37,6 +37,7 @@ MERO_TEST_LOGFILE=`pwd`/mero_`date +"%Y-%m-%d_%T"`.log
 MERO_ADDBSERVICE_NAME=addb
 MERO_IOSERVICE_NAME=ioservice
 MERO_MDSERVICE_NAME=mdservice
+MERO_CMSERVICE_NAME=sns_cm
 MERO_STOB_DOMAIN=linux
 
 PREPARE_STORAGE="-p"
diff --git a/m0t1fs/linux_kernel/st/m0t1fs_server_inc.sh b/m0t1fs/linux_kernel/st/m0t1fs_server_inc.sh
index 06e7b9c..41098b6 100644
--- a/m0t1fs/linux_kernel/st/m0t1fs_server_inc.sh
+++ b/m0t1fs/linux_kernel/st/m0t1fs_server_inc.sh
@@ -18,7 +18,7 @@ mero_service()
 
 		# spawn servers
 		for ((i=0; i < ${#EP[*]}; i++)) ; do
-			SNAME="-s $MERO_IOSERVICE_NAME"
+			SNAME="-s $MERO_IOSERVICE_NAME -s $MERO_CMSERVICE_NAME"
 			SNAME="-s $MERO_ADDBSERVICE_NAME $SNAME"
 			if ((i == 0)); then
 				SNAME="-s $MERO_MDSERVICE_NAME $SNAME"
diff --git a/mero/setup.c b/mero/setup.c
index 372335a..f94b2d6 100644
--- a/mero/setup.c
+++ b/mero/setup.c
@@ -63,14 +63,14 @@ M0_TL_DESCR_DEFINE(cs_buffer_pools, "buffer pools in the mero context",
 		   M0_CS_BUFFER_POOL_MAGIC, M0_CS_BUFFER_POOL_HEAD_MAGIC);
 M0_TL_DEFINE(cs_buffer_pools, static, struct cs_buffer_pool);
 
-M0_TL_DESCR_DEFINE(cs_eps, "cs endpoints", static, struct cs_endpoint_and_xprt,
+M0_TL_DESCR_DEFINE(cs_eps, "cs endpoints", M0_INTERNAL, struct cs_endpoint_and_xprt,
 		   ex_linkage, ex_magix, M0_CS_ENDPOINT_AND_XPRT_MAGIC,
 		   M0_CS_EPS_HEAD_MAGIC);
 
 M0_TL_DEFINE(cs_eps, M0_INTERNAL, struct cs_endpoint_and_xprt);
 
 static struct m0_bob_type cs_eps_bob;
-M0_BOB_DEFINE(static, &cs_eps_bob, cs_endpoint_and_xprt);
+M0_BOB_DEFINE(extern, &cs_eps_bob, cs_endpoint_and_xprt);
 
 M0_INTERNAL const char *m0_cs_stypes[M0_STOB_TYPE_NR] = {
 	[M0_LINUX_STOB] = "Linux",
@@ -1696,11 +1696,11 @@ static int reqh_ctxs_are_valid(struct m0_mero *cctx)
 		for (i = 0; i < rctx->rc_nr_services; ++i) {
 			sname = rctx->rc_services[i];
 			if (!m0_reqh_service_is_registered(sname)) {
-				M0_LOG(M0_ERROR, "service_init_fail");
+				M0_LOG(M0_ERROR, "service_init_fail %s", sname);
 				M0_RETURN(-ENOENT);
 			}
 			if (service_is_duplicate(rctx, sname)) {
-				M0_LOG(M0_ERROR, "service_init_fail");
+				M0_LOG(M0_ERROR, "service_init_fail %s", sname);
 				M0_RETURN(-EEXIST);
 			}
 		}
diff --git a/mero/setup.h b/mero/setup.h
index 03d3967..04d7ec7 100644
--- a/mero/setup.h
+++ b/mero/setup.h
@@ -491,7 +491,9 @@ M0_INTERNAL struct m0_mero *m0_cs_ctx_get(struct m0_reqh *reqh);
  */
 M0_INTERNAL struct m0_net_domain *m0_cs_net_domain_locate(struct m0_mero *cctx,
 							  const char *xprtname);
+M0_TL_DESCR_DECLARE(cs_eps, M0_INTERNAL);
 M0_TL_DECLARE(cs_eps, M0_INTERNAL, struct cs_endpoint_and_xprt);
+M0_BOB_DECLARE(M0_INTERNAL, cs_endpoint_and_xprt);
 
 /** @} endgroup m0d */
 
diff --git a/sns/cm/service.c b/sns/cm/service.c
index a2c1597..ddfc0c3 100644
--- a/sns/cm/service.c
+++ b/sns/cm/service.c
@@ -34,6 +34,7 @@
 #include "sns/sns_addb.h"
 #include "sns/cm/st/trigger_fop.h"
 #include "sns/cm/cm.h"
+#include "mero/setup.h"
 
 /**
   @defgroup SNSCMSVC SNS copy machine service
@@ -105,8 +106,11 @@ static int svc_allocate(struct m0_reqh_service **service,
  */
 static int svc_start(struct m0_reqh_service *service)
 {
-	struct m0_cm *cm;
-	int           rc;
+	struct m0_cm                *cm;
+	int                          rc;
+	struct cs_endpoint_and_xprt *ep;
+	struct m0_reqh_context      *rctx;
+	struct m0_mero              *mero;
 
 	M0_ENTRY("service: %p", service);
 	M0_PRE(service != NULL);
@@ -115,6 +119,15 @@ static int svc_start(struct m0_reqh_service *service)
 	cm = container_of(service, struct m0_cm, cm_service);
 	rc = m0_cm_setup(cm) ?: m0_sns_repair_trigger_fop_init();
 
+	/* the following shows how to retrieve ioservice endpoints list */
+	rctx = service->rs_reqh_ctx;
+	mero = rctx->rc_mero;
+	m0_tl_for(cs_eps, &mero->cc_ios_eps, ep) {
+		M0_ASSERT(cs_endpoint_and_xprt_bob_check(ep));
+		M0_LOG(M0_DEBUG, "ioservice xprt:endpoints: %s:%s",
+				 ep->ex_xprt, ep->ex_endpoint);
+	} m0_tl_endfor;
+
 	M0_LEAVE();
 	return rc;
 }
-- 
1.8.3.2

