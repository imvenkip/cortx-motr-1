From 3ec9b363c502732d060ffe0e7366268f6dd48ede Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Wed, 13 Apr 2011 03:39:00 -0600
Subject: [PATCH 60/91] - fixed bug with unlink. Wrong nlink was used for
 killing oi entry; - fixed bug with unlink. Invalid key was used for filling
 fab entry; - use c2_cob_fabkey for fab tables. No need to use oikey with
 nlink. We will have one fab per object, not per name.

---
 cob/cob.c         | 60 ++++++++++++++++++++++++++++++-------------------------
 cob/cob.h         |  6 +++++-
 mdstore/mdstore.c |  9 +++------
 3 files changed, 41 insertions(+), 34 deletions(-)

diff --git a/cob/cob.c b/cob/cob.c
index f071537..c1f7aaa 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -154,16 +154,27 @@ static const struct c2_table_ops cob_oi_ops = {
 	.key_cmp = oi_cmp
 };
 
+static int fb_cmp(struct c2_table *table, const void *key0, const void *key1)
+{
+	const struct c2_cob_fabkey *cok0 = key0;
+	const struct c2_cob_fabkey *cok1 = key1;
+
+        C2_PRE(c2_fid_is_set(&cok0->cfb_fid));
+        C2_PRE(c2_fid_is_set(&cok1->cfb_fid));
+
+        return c2_fid_cmp(&cok0->cfb_fid, &cok1->cfb_fid);
+}
+
 static const struct c2_table_ops cob_fab_ops = {
 	.to = {
 		[TO_KEY] = {
-			.max_size = sizeof(struct c2_cob_oikey)
+			.max_size = sizeof(struct c2_cob_fabkey)
 		},
 		[TO_REC] = {
                         .max_size = sizeof(struct c2_cob_fabrec)
 		}
 	},
-	.key_cmp = oi_cmp
+	.key_cmp = fb_cmp
 };
 
 /**
@@ -422,17 +433,16 @@ static int cob_oi_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
  */
 static int cob_fab_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
 {
-        struct c2_cob_oikey  oikey;
+        struct c2_cob_fabkey fabkey;
         struct c2_db_pair    pair;
         int                  rc;
 
         if (cob->co_valid & CA_FABREC)
                 return 0;
 
-        oikey.cok_fid = cob->co_fid;
-        oikey.cok_linkno = 0;
+        fabkey.cfb_fid = cob->co_fid;
         c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_basic,
-			 &oikey, sizeof oikey,
+			 &fabkey, sizeof fabkey,
 			 &cob->co_fabrec, sizeof cob->co_fabrec);
         rc = c2_table_lookup(tx, &pair);
         c2_db_pair_release(&pair);
@@ -679,11 +689,11 @@ int c2_cob_create(struct c2_cob        *cob,
                   uint64_t              need,
                   struct c2_db_tx      *tx)
 {
-        struct c2_db_pair    pair;
-        struct c2_cob_omgkey omgkey;
-        struct c2_cob_oikey  oikey;
-        struct c2_db_cursor  cursor;
-	int                  rc;
+        struct c2_db_pair     pair;
+        struct c2_cob_omgkey  omgkey;
+        struct c2_cob_fabkey  fabkey;
+        struct c2_db_cursor   cursor;
+	int                   rc;
 
         C2_PRE(cob != NULL);
         C2_PRE(nskey != NULL);
@@ -754,8 +764,7 @@ int c2_cob_create(struct c2_cob        *cob,
         /*
          * Prepare key for attribute tables.
          */
-        oikey.cok_fid = cob->co_fid;
-        oikey.cok_linkno = 0;
+        fabkey.cfb_fid = cob->co_fid;
 
         /* 
          * Now let's update file attributes. Cache the fabrec. 
@@ -767,7 +776,7 @@ int c2_cob_create(struct c2_cob        *cob,
          * Add to fileattr-basic table. 
          */
         c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_basic,
-			 &oikey, sizeof oikey,
+			 &fabkey, sizeof fabkey,
 			 &cob->co_fabrec, sizeof cob->co_fabrec);
 
         rc = c2_table_insert(tx, &pair);
@@ -808,7 +817,7 @@ out:
  */
 int c2_cob_delete(struct c2_cob *cob, struct c2_db_tx *tx)
 {
-        struct c2_cob_oikey  oikey;
+        struct c2_cob_fabkey fabkey;
         struct c2_cob_omgkey omgkey;
         struct c2_db_pair    pair;
         int                  rc;
@@ -826,8 +835,10 @@ int c2_cob_delete(struct c2_cob *cob, struct c2_db_tx *tx)
         /* 
          * Remove from the fileattr_basic table. 
          */
+        fabkey.cfb_fid = cob->co_fid;
+
         c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_basic,
-			 &oikey, sizeof oikey, NULL, 0);
+			 &fabkey, sizeof fabkey, NULL, 0);
         
         /* 
          * Ignore errors; it's a dangling table entry but causes 
@@ -871,21 +882,15 @@ int c2_cob_update(struct c2_cob         *cob,
                    struct c2_cob_omgrec *omgrec,
                    struct c2_db_tx      *tx)
 {
-        struct c2_cob_omgkey omgkey;
-        struct c2_cob_oikey  oikey;
-        struct c2_db_pair    pair;
-        int                  rc;
+        struct c2_cob_omgkey  omgkey;
+        struct c2_cob_fabkey  fabkey;
+        struct c2_db_pair     pair;
+        int                   rc;
         
         C2_PRE(c2_cob_is_valid(cob));
         C2_PRE(nsrec != NULL || fabrec != NULL || omgrec != NULL);
         C2_POST(cob->co_valid & CA_NSKEY);
 
-        /*
-         * Prepare key for attribute tables.
-         */
-        oikey.cok_fid = cob->co_fid;
-        oikey.cok_linkno = 0;
-
         if (nsrec != NULL) {
                 cob->co_nsrec = *nsrec;
                 cob->co_valid |= CA_NSREC;
@@ -901,11 +906,12 @@ int c2_cob_update(struct c2_cob         *cob,
         }
         
         if (fabrec != NULL) {
+                fabkey.cfb_fid = cob->co_fid;
                 cob->co_fabrec = *fabrec;
                 cob->co_valid |= CA_FABREC;
         
                 c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_basic,
-                                 &oikey, sizeof oikey,
+                                 &fabkey, sizeof fabkey,
                                  &cob->co_fabrec, sizeof cob->co_fabrec);
                 rc = c2_table_update(tx, &pair);
                 c2_db_pair_release(&pair);
diff --git a/cob/cob.h b/cob/cob.h
index 057742f..9832e5a 100644
--- a/cob/cob.h
+++ b/cob/cob.h
@@ -134,7 +134,7 @@ struct c2_cob_oikey {
 /** The oi table record is a struct c2_cob_nskey. */
 
 /** 
-   Fileattr_basic table key is c2_cob_oikey
+   Fileattr_basic table key is c2_cob_fabkey
 
    @note version change at every ns manipulation and data write.
    If version and mtime/ctime both change frequently, at the same time,
@@ -145,6 +145,10 @@ struct c2_cob_oikey {
    as compact as possible to reduce lookup footprint. Also, readdir benefits
    from smaller name-space entries.
  */
+struct c2_cob_fabkey {
+        struct c2_fid     cfb_fid;
+};
+
 struct c2_cob_fabrec {
         struct c2_verno   cfb_version;  /**< version from last fop */
         uint64_t          cfb_layoutid; /**< reference to layout. */
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index b067dfe..b6c0fef 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -293,7 +293,6 @@ int c2_md_store_unlink(struct c2_md_store *md,
         struct c2_cob         *ncob = NULL;
         struct c2_cob_nskey   *nskey;
         struct c2_cob_oikey    oikey;
-        struct c2_cob_nsrec    nsrec;
         time_t                 now;
         int                    rc;
     
@@ -307,14 +306,13 @@ int c2_md_store_unlink(struct c2_md_store *md,
         /*
          * Copy "working copy" of stat data.
          */
-        nsrec = cob->co_nsrec;
-        C2_PRE(nsrec.cnr_nlink > 0);
-        nsrec.cnr_nlink--;
+        C2_PRE(cob->co_nsrec.cnr_nlink > 0);
+        cob->co_nsrec.cnr_nlink--;
         
         /* 
          * Last nlink, let's delete everything left. 
          */
-        if (nsrec.cnr_nlink == 0) {
+        if (cob->co_nsrec.cnr_nlink == 0) {
                 /*
                  * @todo: orphans handling.
                  */
@@ -343,7 +341,6 @@ int c2_md_store_unlink(struct c2_md_store *md,
         /*
          * Update stat data on store. 
          */
-        cob->co_nsrec = nsrec;
         rc = c2_cob_update(cob, &cob->co_nsrec, NULL, NULL, 
                            &ctx->fc_tx->tx_dbtx);
         if (rc)
-- 
1.8.3.2

