From 1482944a79a91213197f040dc429b4d3040a4833 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Wed, 6 Apr 2011 09:21:06 -0600
Subject: [PATCH 42/91] - fixed {a|c|m}time in create and mkfs; - use
 c2_cob_omgkey instead of c2_oikey for omg table.

---
 cob/cob.c            | 75 ++++++++++++++++++++++++++++++++++++++++------------
 cob/cob.h            |  9 ++++++-
 mdstore/mdstore.c    | 23 +++++++---------
 utils/mkfs.colibri.c |  8 +++---
 4 files changed, 81 insertions(+), 34 deletions(-)

diff --git a/cob/cob.c b/cob/cob.c
index 7005719..3737f5e 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -115,16 +115,32 @@ static const struct c2_table_ops cob_fab_ops = {
 	.key_cmp = oi_cmp
 };
 
+/**
+   Omg table definition.
+*/
+static int omg_cmp(struct c2_table *table, const void *key0, const void *key1)
+{
+	const struct c2_cob_omgkey *cok0 = key0;
+	const struct c2_cob_omgkey *cok1 = key1;
+        int                         rc;
+
+        C2_PRE(c2_fid_is_set(&cok0->cok_fid));
+        C2_PRE(c2_fid_is_set(&cok1->cok_fid));
+
+        rc = c2_fid_cmp(&cok0->cok_fid, &cok1->cok_fid);
+        return rc ?: C2_3WAY(cok0->cok_omgid, cok1->cok_omgid);
+}
+
 static const struct c2_table_ops cob_omg_ops = {
 	.to = {
 		[TO_KEY] = {
-			.max_size = sizeof(struct c2_cob_oikey)
+			.max_size = sizeof(struct c2_cob_omgkey)
 		},
 		[TO_REC] = {
                         .max_size = sizeof(struct c2_cob_omgrec)
 		}
 	},
-	.key_cmp = oi_cmp
+	.key_cmp = omg_cmp
 };
 
 static char *cob_dom_id_make(char *buf, const struct c2_cob_domain_id *id,
@@ -175,7 +191,7 @@ int c2_cob_domain_init(struct c2_cob_domain *dom, struct c2_dbenv *env,
         }
 
         rc = c2_table_init(&dom->cd_fileattr_omg, dom->cd_dbenv,
-                           cob_dom_id_make(table, &dom->cd_id, "ob"),
+                           cob_dom_id_make(table, &dom->cd_id, "fo"),
                            0, &cob_omg_ops);
 	if (rc != 0) {
                 c2_table_fini(&dom->cd_object_index);
@@ -379,22 +395,21 @@ static int cob_fab_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
 
 /** 
    Search for a record in the fileattr_omg table.
-
    @see cob_fab_lookup
  */
 static int cob_omg_lookup(struct c2_cob *cob, struct c2_db_tx *tx)
 {
-        struct c2_cob_oikey  oikey;
+        struct c2_cob_omgkey omgkey;
         struct c2_db_pair    pair;
         int                  rc;
 
         if (cob->co_valid & CA_OMGREC)
                 return 0;
 
-        oikey.cok_fid = cob->co_fid;
-        oikey.cok_linkno = 0;
+        omgkey.cok_fid = cob->co_fid;
+        omgkey.cok_omgid = cob->co_nsrec.cnr_omgid;
         c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_omg,
-			 &oikey, sizeof oikey,
+			 &omgkey, sizeof omgkey,
 			 &cob->co_omgrec, sizeof cob->co_omgrec);
         rc = c2_table_lookup(tx, &pair);
         c2_db_pair_release(&pair);
@@ -520,9 +535,13 @@ int c2_cob_create(struct c2_cob        *cob,
                   struct c2_db_tx      *tx)
 {
         struct c2_db_pair    pair;
+        struct c2_cob_omgkey omgkey;
         struct c2_cob_oikey  oikey;
 	int                  rc;
 
+        omgkey.cok_fid = cob->co_fid;
+        omgkey.cok_omgid = cob->co_nsrec.cnr_omgid;
+
         C2_PRE(cob != NULL);
         C2_PRE(nskey != NULL);
         C2_PRE(nsrec != NULL);
@@ -578,6 +597,12 @@ int c2_cob_create(struct c2_cob        *cob,
 	if (rc)
                 goto out;
 
+        /*
+         * Prepare omg key.
+         */
+        omgkey.cok_fid = cob->co_fid;
+        omgkey.cok_omgid = nsrec->cnr_omgid;
+
         /* 
          * Now let's update omg attributes. Cache the omgrec. 
          */
@@ -588,7 +613,7 @@ int c2_cob_create(struct c2_cob        *cob,
          * Add to fileattr-omg table. 
          */
         c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_omg,
-			 &oikey, sizeof oikey,
+			 &omgkey, sizeof omgkey,
 			 &cob->co_omgrec, sizeof cob->co_omgrec);
 
         rc = c2_table_insert(tx, &pair);
@@ -601,12 +626,13 @@ out:
 }
 
 /**
-   Kill name+statdata, object index entry, file attrs, etc.
+   Kill name+statdata, object index entry, file attrs and omg.
  */
 int c2_cob_delete(struct c2_cob *cob, struct c2_db_tx *tx)
 {
-        struct c2_cob_oikey oikey;
-        struct c2_db_pair   pair;
+        struct c2_cob_oikey  oikey;
+        struct c2_cob_omgkey omgkey;
+        struct c2_db_pair    pair;
         int                  rc;
 
         C2_PRE(c2_cob_is_valid(cob));
@@ -633,11 +659,18 @@ int c2_cob_delete(struct c2_cob *cob, struct c2_db_tx *tx)
         c2_db_pair_release(&pair);
 	c2_db_pair_fini(&pair);
 
+        /*
+         * @todo: Omgrec may be shared between multiple objects.
+         * Delete should take this into account as well as update.
+         */
+        omgkey.cok_fid = cob->co_fid;
+        omgkey.cok_omgid = cob->co_nsrec.cnr_omgid;
+
         /* 
          * Remove from the fileattr_omg table. 
          */
         c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_omg,
-			 &oikey, sizeof oikey, NULL, 0);
+			 &omgkey, sizeof omgkey, NULL, 0);
         
         /* 
          * Ignore errors; it's a dangling table entry but causes 
@@ -661,9 +694,10 @@ int c2_cob_update(struct c2_cob         *cob,
                    struct c2_cob_omgrec *omgrec,
                    struct c2_db_tx      *tx)
 {
-        struct c2_cob_oikey oikey;
-        struct c2_db_pair   pair;
-        int                 rc;
+        struct c2_cob_omgkey omgkey;
+        struct c2_cob_oikey  oikey;
+        struct c2_db_pair    pair;
+        int                  rc;
         
         C2_PRE(c2_cob_is_valid(cob));
         C2_PRE(nsrec != NULL || fabrec != NULL || omgrec != NULL);
@@ -702,11 +736,18 @@ int c2_cob_update(struct c2_cob         *cob,
         }
 
         if (omgrec != NULL) {
+                /*
+                 * @todo: Omgrec may be shared between multiple objects.
+                 * We need to take this into account.
+                 */
+                omgkey.cok_fid = cob->co_fid;
+                omgkey.cok_omgid = cob->co_nsrec.cnr_omgid;
+                
                 cob->co_omgrec = *omgrec;
                 cob->co_valid |= CA_OMGREC;
         
                 c2_db_pair_setup(&pair, &cob->co_dom->cd_fileattr_omg,
-                                 &oikey, sizeof oikey,
+                                 &omgkey, sizeof omgkey,
                                  &cob->co_omgrec, sizeof cob->co_omgrec);
                 rc = c2_table_update(tx, &pair);
                 c2_db_pair_release(&pair);
diff --git a/cob/cob.h b/cob/cob.h
index 18ef1f2..d8b8422 100644
--- a/cob/cob.h
+++ b/cob/cob.h
@@ -152,8 +152,15 @@ struct c2_cob_fabrec {
 };
 
 /**
+   Key for omg table
+*/
+struct c2_cob_omgkey {
+        struct c2_fid     cok_fid;     /**< object fid */
+        uint64_t          cok_omgid;   /**< omg id ref */
+};
+
+/**
    Protection and access flags stored in this table.
-   @note c2_cob_oikey is key for this table.
 */
 struct c2_cob_omgrec {
         uint32_t          cor_mode;    /**< protection. */
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 36f5266..358c51b 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -170,6 +170,7 @@ int c2_md_store_create(struct c2_md_store *md,
         struct c2_cob_nsrec    nsrec;
         struct c2_cob_fabrec   fabrec;
         struct c2_cob_omgrec   omgrec;
+        time_t                 now;
         int                    rc;
         
         c2_md_make_nskey(&nskey, &body->b_pfid, &req->c_name);
@@ -182,14 +183,15 @@ int c2_md_store_create(struct c2_md_store *md,
         nsrec.cnr_nlink = 0;
         
         /*
-         * @todo: In fact we need to put ino from body here. Inode
-         * number may be important on target fs while repliting source.
+         * @todo: In fact we need to get ino from @body here. Inode
+         * number may be important on target fs while replicating 
+         * source.
          */
         nsrec.cnr_ino = 0;
         
         /* 
-         * @todo: do we need rdev support for specil files in
-         * replicator? 
+         * @todo: do we need rdev support for special files in
+         * replicator?
          */
         nsrec.u.cnr_rdev = 0;
         
@@ -201,15 +203,10 @@ int c2_md_store_create(struct c2_md_store *md,
         nsrec.cnr_blksize = 0;
         nsrec.cnr_blocks = 0;
 
-        /* 
-         * @todo: these need to be fixed. We do have 64 bit time
-         * stamp in changelog rec and can use it. Still it may be
-         * not needed as on target fs these fields may be updated
-         * in create time.
-         */
-        nsrec.cnr_atime = 0;
-        nsrec.cnr_mtime = 0;
-        nsrec.cnr_ctime = 0;
+        time(&now);
+        nsrec.cnr_atime = now;
+        nsrec.cnr_mtime = now;
+        nsrec.cnr_ctime = now;
 
         /* 
          * @todo: Fill fabrec. 
diff --git a/utils/mkfs.colibri.c b/utils/mkfs.colibri.c
index 18c82dd..32fc2b1 100644
--- a/utils/mkfs.colibri.c
+++ b/utils/mkfs.colibri.c
@@ -74,6 +74,7 @@ int main(int argc, char *argv[])
         struct c2_cob_omgrec   omgrec;
         struct c2_db_tx        tx;
         struct c2_cob         *cob;
+        time_t                 now;
         int                    rc;
         int                    c;
         
@@ -125,9 +126,10 @@ int main(int argc, char *argv[])
         nsrec.cnr_blksize = 4096;
         nsrec.cnr_blocks = 16;
 
-        nsrec.cnr_atime = 0;
-        nsrec.cnr_mtime = 0;
-        nsrec.cnr_ctime = 0;
+        time(&now);
+        nsrec.cnr_atime = now;
+        nsrec.cnr_mtime = now;
+        nsrec.cnr_ctime = now;
 
         /*
          * @todo: allocate omg.
-- 
1.8.3.2

