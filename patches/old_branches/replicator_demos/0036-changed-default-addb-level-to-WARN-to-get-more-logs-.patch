From 82e9152a31bd1e191c1e16335c36b25cd52cc290 Mon Sep 17 00:00:00 2001
From: Yuriy Umanets <yuriy_umanets@xyratex.com>
Date: Thu, 31 Mar 2011 11:36:19 -0600
Subject: [PATCH 36/91] - changed default addb level to WARN to get more logs
 in console (need it for demo); - added bunch of add events for cob and
 mdstore; - killed c2_cob_update(), use c2_cob_setattr() instead.
 c2_cob_setattr() is renamed to c2_cob_update() - insert fop to fol before
 init fom in reqh.

---
 addb/addb.c         |  2 +-
 addb/addb.h         | 34 +++++++++++---------
 cob/cob.c           | 89 +++++++++++++++++++----------------------------------
 cob/cob.h           | 19 +++---------
 configure.ac        |  6 ++--
 ioservice/io_fops.h |  4 +--
 mdservice/md_fops.c |  3 +-
 mdservice/md_fops.h |  4 +--
 mdstore/mdstore.c   | 72 +++++++++++++++++++++++++++++++++++--------
 mdstore/mdstore.h   |  4 +++
 nrs/nrs.c           |  4 +--
 reqh/reqh.c         | 17 +++++-----
 12 files changed, 142 insertions(+), 116 deletions(-)

diff --git a/addb/addb.c b/addb/addb.c
index 8ddf5ab..0128ecc 100644
--- a/addb/addb.c
+++ b/addb/addb.c
@@ -27,7 +27,7 @@
 /*
  * This can be changed.
  */
-int c2_addb_level_default = AEL_NOTE;
+int c2_addb_level_default = AEL_WARN;
 C2_EXPORTED(c2_addb_level_default);
 
 
diff --git a/addb/addb.h b/addb/addb.h
index 5e04e53..b8599b8 100644
--- a/addb/addb.h
+++ b/addb/addb.h
@@ -192,20 +192,26 @@ enum c2_addb_event_id {
 	C2_ADDB_EVENT_NET_SEND              = 0x10ULL,
 	C2_ADDB_EVENT_NET_CALL              = 0x11ULL,
 
-	C2_ADDB_EVENT_MDEXIST               = 0x21ULL,
-	C2_ADDB_EVENT_MDNOENT               = 0x22ULL,
-	C2_ADDB_EVENT_MDNOMEM               = 0x23ULL,
-
-	C2_ADDB_EVENT_MDDELETE              = 0x24ULL,
-	C2_ADDB_EVENT_MDLINK                = 0x25ULL,
-	C2_ADDB_EVENT_MDUNLINK              = 0x26ULL,
-	C2_ADDB_EVENT_MDCREATE              = 0x27ULL,
-	C2_ADDB_EVENT_MDRENAME              = 0x28ULL,
-	C2_ADDB_EVENT_MDSETATTR             = 0x29ULL,
-	C2_ADDB_EVENT_MDGETATTR             = 0x30ULL,
-	C2_ADDB_EVENT_MDREADDIR             = 0x31ULL,
-	
-	C2_ADDB_EVENT_NR
+	C2_ADDB_EVENT_EXIST                 = 0x21ULL,
+	C2_ADDB_EVENT_NOENT                 = 0x22ULL,
+	C2_ADDB_EVENT_NOMEM                 = 0x23ULL,
+
+	C2_ADDB_EVENT_COB_CREATE            = 0x24ULL,
+	C2_ADDB_EVENT_COB_DELETE            = 0x25ULL,
+	C2_ADDB_EVENT_COB_UPDATE            = 0x26ULL,
+	C2_ADDB_EVENT_COB_ADD_NAME          = 0x27ULL,
+	C2_ADDB_EVENT_COB_DEL_NAME          = 0x28ULL,
+	C2_ADDB_EVENT_COB_UPDATE_NAME       = 0x29ULL,
+
+	C2_ADDB_EVENT_MDSTORE_CREATE        = 0x30ULL,
+	C2_ADDB_EVENT_MDSTORE_OPEN          = 0x31ULL,
+	C2_ADDB_EVENT_MDSTORE_CLOSE         = 0x32ULL,
+	C2_ADDB_EVENT_MDSTORE_LINK          = 0x33ULL,
+	C2_ADDB_EVENT_MDSTORE_UNLINK        = 0x34ULL,
+	C2_ADDB_EVENT_MDSTORE_SETATTR       = 0x35ULL,
+	C2_ADDB_EVENT_MDSTORE_GETATTR       = 0x36ULL,
+	C2_ADDB_EVENT_MDSTORE_READDIR       = 0x37ULL,
+	C2_ADDB_EVENT_MDSTORE_RENAME        = 0x38ULL
 };
 
 /**
diff --git a/cob/cob.c b/cob/cob.c
index 95cf465..3300162 100644
--- a/cob/cob.c
+++ b/cob/cob.c
@@ -29,6 +29,27 @@ static const struct c2_addb_loc cob_addb_loc = {
 	.al_name = "cob"
 };
 
+C2_ADDB_EV_DEFINE(cob_eexist,      "cob_exist", 
+                  C2_ADDB_EVENT_EXIST, C2_ADDB_INVAL);
+C2_ADDB_EV_DEFINE(cob_enoent,      "cob_noent",
+                  C2_ADDB_EVENT_NOENT, C2_ADDB_INVAL);
+C2_ADDB_EV_DEFINE(cob_enomem,      "cob_nomem",
+                  C2_ADDB_EVENT_NOMEM, C2_ADDB_INVAL);
+
+C2_ADDB_EV_DEFINE(cob_add_name,    "cob_add_name",
+                  C2_ADDB_EVENT_COB_ADD_NAME, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(cob_del_name,    "cob_del_name",
+                  C2_ADDB_EVENT_COB_DEL_NAME, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(cob_update_name, "cob_update_name", 
+                  C2_ADDB_EVENT_COB_UPDATE_NAME, C2_ADDB_FLAG);
+
+C2_ADDB_EV_DEFINE(cob_create,      "cob_create",
+                  C2_ADDB_EVENT_COB_CREATE, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(cob_delete,      "cob_delete",
+                  C2_ADDB_EVENT_COB_DELETE, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(cob_update,      "cob_update",
+                  C2_ADDB_EVENT_COB_UPDATE, C2_ADDB_FLAG);
+
 int c2_cob_nskey_cmp(const struct c2_cob_nskey *k0, 
                      const struct c2_cob_nskey *k1)
 {
@@ -488,24 +509,6 @@ int c2_cob_locate(struct c2_cob_domain *dom, struct c2_cob_oikey *oikey,
 	return rc;
 }
 
-C2_ADDB_EV_DEFINE(cob_eexist,  "md_exist",   C2_ADDB_EVENT_MDEXIST, 
-                  C2_ADDB_INVAL);
-C2_ADDB_EV_DEFINE(cob_enoent,  "md_noent",   C2_ADDB_EVENT_MDNOENT, 
-                  C2_ADDB_INVAL);
-C2_ADDB_EV_DEFINE(cob_enomem,  "md_nomem",   C2_ADDB_EVENT_MDNOMEM, 
-                  C2_ADDB_INVAL);
-
-C2_ADDB_EV_DEFINE(cob_link,    "md_link",    C2_ADDB_EVENT_MDLINK, 
-                  C2_ADDB_FLAG);
-C2_ADDB_EV_DEFINE(cob_create,  "md_create",  C2_ADDB_EVENT_MDCREATE, 
-                  C2_ADDB_FLAG);
-C2_ADDB_EV_DEFINE(cob_delete,  "md_delete",  C2_ADDB_EVENT_MDDELETE, 
-                  C2_ADDB_FLAG);
-C2_ADDB_EV_DEFINE(cob_rename,  "md_rename",  C2_ADDB_EVENT_MDRENAME, 
-                  C2_ADDB_FLAG);
-C2_ADDB_EV_DEFINE(cob_setattr, "md_setattr", C2_ADDB_EVENT_MDSETATTR, 
-                  C2_ADDB_FLAG);
-
 /** 
    For assertions only.
 */
@@ -657,45 +660,14 @@ int c2_cob_delete(struct c2_cob *cob, struct c2_db_tx *tx)
         c2_db_pair_release(&pair);
 	c2_db_pair_fini(&pair);
 out:
-        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_delete, 
-                    rc == 0);
-        return rc;
-}
-
-/**
-   Update cob's nsrec. May be used for stat data updates.
-   
-   cob - stat data cob, result of c2_cob_locate;
-   tx - transaction handle.
-*/
-int c2_cob_update(struct c2_cob *cob, struct c2_db_tx *tx)
-{
-        struct c2_db_pair   pair;
-        int                 rc;
-        
-        C2_PRE(c2_cob_is_valid(cob));
-        c2_db_pair_setup(&pair, &cob->co_dom->cd_namespace,
-                         cob->co_nskey, c2_cob_nskey_size(cob->co_nskey),
-                         &cob->co_nsrec, sizeof cob->co_nsrec);
-        /*
-         * If update fails, we can't trust to cached value. We mark
-         * it invalid so that caller may want to get it from store
-         * once again.
-         */
-        rc = c2_table_update(tx, &pair);
-        if (rc == 0)
-                cob->co_valid |= CA_NSREC;
-        else
-                cob->co_valid &= ~CA_NSREC;
-        c2_db_pair_release(&pair);
-        c2_db_pair_fini(&pair);
+        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_delete, rc == 0);
         return rc;
 }
 
 /**
    Update file attributes of passed cob with @nsrec and fabrec fields.
 */
-int c2_cob_setattr(struct c2_cob        *cob,
+int c2_cob_update(struct c2_cob         *cob,
                    struct c2_cob_nsrec  *nsrec,
                    struct c2_cob_fabrec *fabrec,
                    struct c2_cob_omgrec *omgrec,
@@ -753,8 +725,7 @@ int c2_cob_setattr(struct c2_cob        *cob,
                 c2_db_pair_fini(&pair);
         }
 out:
-        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_setattr, 
-                    rc == 0);
+        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_update, rc == 0);
         return rc;
 }
 /**
@@ -832,7 +803,7 @@ int c2_cob_add_name(struct c2_cob        *cob,
 	return 0;
 
 out_free:
-        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_link, rc == 0);
+        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_add_name, rc == 0);
         return rc;
 }
 
@@ -883,7 +854,7 @@ out:
          * If the op failed, assume we're not going to do anything else about
          * it, so log and drop in all cases. 
          */
-        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_delete, rc == 0);
+        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_del_name, rc == 0);
         return rc;
 }
 
@@ -919,7 +890,8 @@ int c2_cob_update_name(struct c2_cob        *cob,
         if (rc == 0) {
                 c2_db_cursor_fini(&cursor);
                 rc = -EEXIST;
-                C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_eexist, rc);
+                C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, 
+                            cob_eexist, rc);
                 goto out;
         }
 
@@ -932,7 +904,8 @@ int c2_cob_update_name(struct c2_cob        *cob,
         if (rc) {
                 c2_db_cursor_fini(&cursor);
                 rc = -ENOENT;
-                C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_enoent, rc);
+                C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, 
+                            cob_enoent, rc);
                 goto out;
         }
 
@@ -956,7 +929,7 @@ int c2_cob_update_name(struct c2_cob        *cob,
         c2_db_pair_release(&pair);
         c2_db_pair_fini(&pair);
 out:
-        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_rename, rc == 0);
+        C2_ADDB_ADD(&cob->co_dom->cd_addb, &cob_addb_loc, cob_update_name, rc == 0);
         return rc;
 }
 
diff --git a/cob/cob.h b/cob/cob.h
index b1bce21..18ef1f2 100644
--- a/cob/cob.h
+++ b/cob/cob.h
@@ -300,23 +300,14 @@ int c2_cob_delete(struct c2_cob *cob,
                   struct c2_db_tx *tx);
 
 /**
-   Update cob's nsrec. May be used for stat data updates.
-   
-   cob - stat data cob, result of c2_cob_locate;
-   tx - transaction handle.
-*/
-int c2_cob_update(struct c2_cob *cob, 
-                  struct c2_db_tx *tx);
-
-/**
    Update file attributes of passed cob with @nsrec, @fabrec 
    and @omgrec fields.
 */
-int c2_cob_setattr(struct c2_cob        *cob,
-                   struct c2_cob_nsrec  *nsrec,
-                   struct c2_cob_fabrec *fabrec,
-                   struct c2_cob_omgrec *omgrec,
-                   struct c2_db_tx      *tx);
+int c2_cob_update(struct c2_cob        *cob,
+                  struct c2_cob_nsrec  *nsrec,
+                  struct c2_cob_fabrec *fabrec,
+                  struct c2_cob_omgrec *omgrec,
+                  struct c2_db_tx      *tx);
                   
 /**
    Add name to namespace and object index.
diff --git a/configure.ac b/configure.ac
index c5017db..a985bbd 100755
--- a/configure.ac
+++ b/configure.ac
@@ -4,9 +4,9 @@ AC_CONFIG_SRCDIR([colibri/init.c])
 AC_CONFIG_HEADER([config.h])
 AC_CONFIG_MACRO_DIR([m4])
 
-AH_TEMPLATE([PACKAGE], [Package name.])
-AH_TEMPLATE([VERSION], [Version of the package.])
-AH_TEMPLATE([ENABLE_DEBUG], [Enable debug info.])
+AH_TEMPLATE([PACKAGE], [Package name])
+AH_TEMPLATE([VERSION], [Version of the package])
+AH_TEMPLATE([ENABLE_DEBUG], [Enable debug info])
 AH_TEMPLATE([ENABLE_GSSRPC], [Enable gssrpc.])
 AH_TEMPLATE([HAVE_JOURNAL_ABORT], [Have journal_abort() function])
 AH_TEMPLATE([HAVE_FILE_READV], [Have fops->readv function])
diff --git a/ioservice/io_fops.h b/ioservice/io_fops.h
index 8728bd1..3a456f9 100644
--- a/ioservice/io_fops.h
+++ b/ioservice/io_fops.h
@@ -13,9 +13,9 @@ struct c2_fom_type;
  * The opcode from which IO service FOPS start.
  */
 enum c2_io_service_opcodes {
-	c2_io_service_readv_opcode = 14,
+	c2_io_service_readv_opcode = 15,
 	c2_io_service_writev_opcode,
-	c2_io_service_writev_rep_opcode,
+	c2_io_service_writev_rep_opcode = 25,
 	c2_io_service_readv_rep_opcode
 };
 
diff --git a/mdservice/md_fops.c b/mdservice/md_fops.c
index 7ee35bc..bf16443 100644
--- a/mdservice/md_fops.c
+++ b/mdservice/md_fops.c
@@ -83,7 +83,8 @@ static struct c2_fop_type *c2_md_fop_fops[] = {
 static struct c2_fop_type_format *c2_md_fop_fmts[] = {
         &c2_fop_fid_tfmt,
         &c2_fop_name_tfmt,
-        &c2_fop_cob_tfmt
+        &c2_fop_cob_tfmt,
+        &c2_fop_dirent_tfmt
 };
 
 void c2_md_fop_fini(void)
diff --git a/mdservice/md_fops.h b/mdservice/md_fops.h
index 6355105..baa3e17 100644
--- a/mdservice/md_fops.h
+++ b/mdservice/md_fops.h
@@ -24,7 +24,7 @@ extern struct c2_fop_type c2_fop_rename_rep_fopt;
 extern struct c2_fop_type c2_fop_readdir_rep_fopt;
 
 enum c2_fop_metadata_code {
-        C2_FOP_FIRST,
+        C2_FOP_FIRST = 16,
         C2_FOP_CREATE = C2_FOP_FIRST,
         C2_FOP_LINK,
         C2_FOP_UNLINK,
@@ -34,7 +34,7 @@ enum c2_fop_metadata_code {
         C2_FOP_SETATTR,
         C2_FOP_GETATTR,
         C2_FOP_READDIR,
-        C2_FOP_CREATE_REP,
+        C2_FOP_CREATE_REP = 26,
         C2_FOP_LINK_REP,
         C2_FOP_UNLINK_REP,
         C2_FOP_RENAME_REP,
diff --git a/mdstore/mdstore.c b/mdstore/mdstore.c
index 7490a71..304736d 100644
--- a/mdstore/mdstore.c
+++ b/mdstore/mdstore.c
@@ -21,6 +21,33 @@
 #include "mdservice/md_fops_u.h"
 #include "mdservice/md_foms.h"
 
+static const struct c2_addb_ctx_type mdstore_addb_ctx = {
+	.act_name = "mdstore"
+};
+
+static const struct c2_addb_loc mdstore_addb_loc = {
+	.al_name = "mdstore"
+};
+
+C2_ADDB_EV_DEFINE(md_link,    "md_link",
+                  C2_ADDB_EVENT_MDSTORE_LINK, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(md_unlink,  "md_unlink",
+                  C2_ADDB_EVENT_MDSTORE_UNLINK, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(md_rename,  "md_rename", 
+                  C2_ADDB_EVENT_MDSTORE_RENAME, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(md_create,  "md_create",
+                  C2_ADDB_EVENT_MDSTORE_CREATE, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(md_setattr, "md_setattr",
+                  C2_ADDB_EVENT_MDSTORE_SETATTR, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(md_getattr, "md_getattr",
+                  C2_ADDB_EVENT_MDSTORE_GETATTR, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(md_open, "md_open",
+                  C2_ADDB_EVENT_MDSTORE_OPEN, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(md_close, "md_close",
+                  C2_ADDB_EVENT_MDSTORE_CLOSE, C2_ADDB_FLAG);
+C2_ADDB_EV_DEFINE(md_readdir, "md_readdir",
+                  C2_ADDB_EVENT_MDSTORE_READDIR, C2_ADDB_FLAG);
+
 static const struct c2_fid C2_MD_ROOTID = {
         .f_container = 1024ULL, 
         .f_key       = 1ULL
@@ -35,6 +62,8 @@ int c2_md_store_init(struct c2_md_store *md, struct c2_cob_domain_id *id,
         rc = c2_cob_domain_init(&md->md_dom, db, id);
         if (rc)
                 return rc;
+        c2_addb_ctx_init(&md->md_addb, &mdstore_addb_ctx, 
+                         &md->md_dom.cd_dbenv->d_addb);
         md->md_rootid = C2_MD_ROOTID;
         return rc;
 }
@@ -42,6 +71,7 @@ int c2_md_store_init(struct c2_md_store *md, struct c2_cob_domain_id *id,
 void c2_md_store_fini(struct c2_md_store *md)
 {
         c2_cob_domain_fini(&md->md_dom);
+	c2_addb_ctx_fini(&md->md_addb);
 }
 
 int c2_md_store_create(struct c2_md_store *md, 
@@ -113,6 +143,7 @@ int c2_md_store_create(struct c2_md_store *md,
         rc = c2_cob_create(cob, nskey, &nsrec, &fabrec, &omgrec, 0,
                            &ctx->fc_tx->tx_dbtx);
         c2_free(nskey);
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_create, rc == 0);
         return rc;
 }
 
@@ -139,9 +170,11 @@ int c2_md_store_link(struct c2_md_store *md,
          * Update nlink in statdata and save it to storage. 
          */
         cob->co_nsrec.cnr_nlink++;
-        rc = c2_cob_update(cob, &ctx->fc_tx->tx_dbtx);
+        rc = c2_cob_update(cob, &cob->co_nsrec, NULL, NULL,
+                           &ctx->fc_tx->tx_dbtx);
 out:
         c2_free(nskey);
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_link, rc == 0);
         return rc;
 }
 
@@ -201,7 +234,8 @@ int c2_md_store_unlink(struct c2_md_store *md,
          * Update stat data on store. 
          */
         cob->co_nsrec = nsrec;
-        rc = c2_cob_update(cob, &ctx->fc_tx->tx_dbtx);
+        rc = c2_cob_update(cob, &cob->co_nsrec, NULL, NULL, 
+                           &ctx->fc_tx->tx_dbtx);
         if (rc)
                 goto out;
 
@@ -213,6 +247,7 @@ out:
         if (ncob)
                 c2_cob_put(ncob);
         c2_free(nskey);
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_unlink, rc == 0);
         return rc;
 }
 
@@ -222,13 +257,16 @@ int c2_md_store_open(struct c2_md_store *md,
                      struct c2_fop_open_rep *rep, 
                      struct c2_fop_ctx *ctx)
 {
+        int rc = 0;
+        
         C2_ASSERT(cob != NULL);
 
         /* 
          * @todo: Place cob to open files table. 
          */
 
-        return 0;
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_open, rc == 0);
+        return rc;
 }
 
 int c2_md_store_close(struct c2_md_store *md, 
@@ -237,6 +275,8 @@ int c2_md_store_close(struct c2_md_store *md,
                       struct c2_fop_close_rep *rep, 
                       struct c2_fop_ctx *ctx)
 {
+        int rc = 0;
+        
         C2_ASSERT(cob != NULL);
 
         /*
@@ -245,7 +285,8 @@ int c2_md_store_close(struct c2_md_store *md,
          *   - quota handling?
          */
         
-        return 0;
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_close, rc == 0);
+        return rc;
 }
 
 static int c2_md_store_rename_sanity(struct c2_md_store *md, 
@@ -312,7 +353,6 @@ int c2_md_store_rename(struct c2_md_store *md,
         struct c2_cob_nskey  *tgtkey;
         int                   rc;
 
-
         C2_ASSERT(cob != NULL);
 
         /*
@@ -321,7 +361,7 @@ int c2_md_store_rename(struct c2_md_store *md,
          */
         rc = c2_md_store_rename_sanity(md, req, ctx);
         if (rc)
-                return rc;
+                goto out;
 
         /*
          * Prepare src and dst keys.
@@ -332,7 +372,8 @@ int c2_md_store_rename(struct c2_md_store *md,
         rc = c2_cob_update_name(cob, srckey, tgtkey, &ctx->fc_tx->tx_dbtx);
         c2_free(srckey);
         c2_free(tgtkey);
-        
+out:
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_rename, rc == 0);
         return rc;
 }
 
@@ -370,9 +411,10 @@ int c2_md_store_setattr(struct c2_md_store *md,
         /* @todo: Fill omgrec */
         C2_SET0(&omgrec);
 
-        rc = c2_cob_setattr(cob, &nsrec, &fabrec, &omgrec, 
-                            &ctx->fc_tx->tx_dbtx);
+        rc = c2_cob_update(cob, &nsrec, &fabrec, &omgrec, 
+                           &ctx->fc_tx->tx_dbtx);
         
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_setattr, rc == 0);
         return rc;
 }
 
@@ -382,14 +424,17 @@ int c2_md_store_getattr(struct c2_md_store *md,
                         struct c2_fop_getattr_rep *rep, 
                         struct c2_fop_ctx *ctx)
 {
-        C2_ASSERT(cob != NULL);        
+        int rc = 0;
+
+        C2_ASSERT(cob != NULL);
         
         /*
          * @todo: copy cob->co_nsrec cob->co_fabrec and cob->co_omgrec
          * to response.
          */
         
-        return 0;
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_getattr, rc == 0);
+        return rc;
 }
 
 int c2_md_store_readdir(struct c2_md_store *md, 
@@ -398,6 +443,8 @@ int c2_md_store_readdir(struct c2_md_store *md,
                         struct c2_fop_readdir_rep *rep, 
                         struct c2_fop_ctx *ctx)
 {
+        int rc = 0;
+        
         C2_ASSERT(cob != NULL);        
         
         /*
@@ -405,7 +452,8 @@ int c2_md_store_readdir(struct c2_md_store *md,
          * to response @rep.
          */
         
-        return 0;
+        C2_ADDB_ADD(&md->md_addb, &mdstore_addb_loc, md_readdir, rc == 0);
+        return rc;
 }
 
 static void c2_md_store_make_oikey(struct c2_cob_oikey *oikey, 
diff --git a/mdstore/mdstore.h b/mdstore/mdstore.h
index b9fc47b..cce9560 100644
--- a/mdstore/mdstore.h
+++ b/mdstore/mdstore.h
@@ -16,6 +16,10 @@ struct c2_fop;
 struct c2_md_store {
         struct c2_cob_domain  md_dom;
         struct c2_fid         md_rootid;
+        /** 
+           An ADDB context for events related to this store.
+        */
+        struct c2_addb_ctx    md_addb;
 };
 
 enum c2_md_store_locate_flags {
diff --git a/nrs/nrs.c b/nrs/nrs.c
index 80ee516..c5ddd03 100644
--- a/nrs/nrs.c
+++ b/nrs/nrs.c
@@ -27,7 +27,7 @@ static const struct c2_addb_loc nrs_addb = {
 	.al_name = "nrs"
 };
 
-C2_ADDB_EV_DEFINE(sns_addb_enqueue, "enqueue", 0x10, C2_ADDB_STAMP);
+C2_ADDB_EV_DEFINE(nrs_addb_enqueue, "enqueue", 0x10, C2_ADDB_STAMP);
 
 int  c2_nrs_init(struct c2_nrs *nrs, struct c2_nrs_policy *pol, 
                  struct c2_reqh *reqh)
@@ -65,7 +65,7 @@ void c2_nrs_fini(struct c2_nrs *nrs)
 void c2_nrs_enqueue(struct c2_nrs *nrs, struct c2_fop *fop, void *cookie)
 {
 	C2_ASSERT(nrs->s_pol != NULL);
-	C2_ADDB_ADD(&fop->f_addb, &nrs_addb, sns_addb_enqueue);
+	C2_ADDB_ADD(&fop->f_addb, &nrs_addb, nrs_addb_enqueue);
 	nrs->s_pol->sp_enqueue(nrs, fop, cookie);
 }
 
diff --git a/reqh/reqh.c b/reqh/reqh.c
index c82afbf..326f131 100644
--- a/reqh/reqh.c
+++ b/reqh/reqh.c
@@ -60,6 +60,16 @@ int c2_reqh_fop_handle(struct c2_reqh *reqh, struct c2_fop *fop)
 	 * resource allocation, locking &c.
 	 */
 
+        /*
+         * Add this fop to the fol.
+         */
+        result = c2_fop_fol_rec_add(fop, ctx.fc_fol, &tx.tx_dbtx);
+        if (result)
+                goto out;
+                
+        /*
+         * Init fom for the fop start handling it.
+         */
 	result = fop->f_type->ft_ops->fto_fom_init(fop, &fom);
 	if (result)
 	        goto out;
@@ -73,13 +83,6 @@ int c2_reqh_fop_handle(struct c2_reqh *reqh, struct c2_fop *fop)
                         goto out_fini;
         }
 
-        /*
-         * Add this fop to the fol.
-         */
-        result = c2_fop_fol_rec_add(fop, ctx.fc_fol, &tx.tx_dbtx);
-        if (result)
-                goto out_fini;
-
 	/* 
 	 * Start the FOM.
 	 */
-- 
1.8.3.2

