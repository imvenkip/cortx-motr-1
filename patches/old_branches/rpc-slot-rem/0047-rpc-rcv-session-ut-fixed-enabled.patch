From ac79a5c503168cad40f9831700e732f5c48ccb4f Mon Sep 17 00:00:00 2001
From: Andriy Tkachuk <andriy_tkachuk@xyratex.com>
Date: Tue, 11 Feb 2014 23:54:13 +0200
Subject: [PATCH 47/60] rpc-rcv-session-ut fixed & enabled

---
 reqh/reqh.c          | 9 ++++-----
 rpc/ut/rcv_session.c | 7 +++++--
 utils/ut_main.c      | 4 ++--
 3 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/reqh/reqh.c b/reqh/reqh.c
index 52a6217..174bb09 100644
--- a/reqh/reqh.c
+++ b/reqh/reqh.c
@@ -545,7 +545,6 @@ M0_INTERNAL int m0_reqh_fop_allow(struct m0_reqh *reqh, struct m0_fop *fop)
 M0_INTERNAL int m0_reqh_fop_handle(struct m0_reqh *reqh, struct m0_fop *fop)
 {
 	struct m0_fom *fom;
-	int	       result;
 	int            rc;
 
 	M0_ENTRY();
@@ -565,15 +564,15 @@ M0_INTERNAL int m0_reqh_fop_handle(struct m0_reqh *reqh, struct m0_fop *fop)
 	M0_ASSERT(fop->f_type->ft_fom_type.ft_ops != NULL);
 	M0_ASSERT(fop->f_type->ft_fom_type.ft_ops->fto_create != NULL);
 
-	result = fop->f_type->ft_fom_type.ft_ops->fto_create(fop, &fom, reqh);
-	if (result == 0) {
+	rc = fop->f_type->ft_fom_type.ft_ops->fto_create(fop, &fom, reqh);
+	if (rc == 0) {
 		m0_fom_queue(fom, reqh);
 	} else {
-		REQH_ADDB_FUNCFAIL(result, FOM_CREATE, &reqh->rh_addb_ctx);
+		REQH_ADDB_FUNCFAIL(rc, FOM_CREATE, &reqh->rh_addb_ctx);
         }
 
 	m0_rwlock_read_unlock(&reqh->rh_rwlock);
-	M0_RETURN(result);
+	M0_RETURN(rc);
 }
 
 M0_INTERNAL void m0_reqh_fom_domain_idle_wait(struct m0_reqh *reqh)
diff --git a/rpc/ut/rcv_session.c b/rpc/ut/rcv_session.c
index d6ae645..71faf19 100644
--- a/rpc/ut/rcv_session.c
+++ b/rpc/ut/rcv_session.c
@@ -103,8 +103,8 @@ static void test_conn_establish(void)
 		m0_fi_enable(fps1[i].fn, fps1[i].pt);
 		rc = m0_rpc_conn_create(&conn, ep, machine, MAX_RPCS_IN_FLIGHT,
 					m0_time_from_now(TIMEOUT, 0));
-		M0_UT_ASSERT(rc == -ETIMEDOUT);
 		m0_fi_disable(fps1[i].fn, fps1[i].pt);
+		M0_UT_ASSERT(rc == -ETIMEDOUT);
 	}
 	for (i = 0; i < ARRAY_SIZE(fps2); ++i) {
 		count = 0;
@@ -112,8 +112,8 @@ static void test_conn_establish(void)
 				  enable_for_all_but_first_call, &count);
 		rc = m0_rpc_conn_create(&conn, ep, machine, MAX_RPCS_IN_FLIGHT,
 					m0_time_from_now(TIMEOUT, 0));
-		M0_UT_ASSERT(rc == -ETIMEDOUT);
 		m0_fi_disable(fps2[i].fn, fps2[i].pt);
+		M0_UT_ASSERT(rc == -ETIMEDOUT);
 	}
 	m0_net_end_point_put(ep);
 }
@@ -152,6 +152,9 @@ static void test_session_establish(void)
 		m0_fi_disable(fps[i].fn, fps[i].pt);
 	}
 
+	rc = m0_rpc_conn_destroy(&conn, m0_time_from_now(TIMEOUT, 0));
+	M0_UT_ASSERT(rc == 0);
+
 	m0_net_end_point_put(ep);
 }
 
diff --git a/utils/ut_main.c b/utils/ut_main.c
index c40d632..d4a9d92 100644
--- a/utils/ut_main.c
+++ b/utils/ut_main.c
@@ -86,7 +86,7 @@ extern const struct m0_test_suite reqh_ut;
 extern const struct m0_test_suite reqh_service_ut;
 extern const struct m0_test_suite rm_ut;
 extern const struct m0_test_suite rpc_mc_ut;
-//extern const struct m0_test_suite rpc_rcv_session_ut;
+extern const struct m0_test_suite rpc_rcv_session_ut;
 extern const struct m0_test_suite rpc_service_ut;
 extern const struct m0_test_suite rpclib_ut;
 extern const struct m0_test_suite session_ut;
@@ -153,7 +153,7 @@ void add_uts(void)
 	m0_ut_add(&reqh_service_ut);
 	m0_ut_add(&rm_ut);
 	m0_ut_add(&rpc_mc_ut);
-//	m0_ut_add(&rpc_rcv_session_ut);
+	m0_ut_add(&rpc_rcv_session_ut);
 	m0_ut_add(&rpc_service_ut);
 	m0_ut_add(&rpclib_ut);
 	m0_ut_add(&session_ut);
-- 
1.8.3.2

