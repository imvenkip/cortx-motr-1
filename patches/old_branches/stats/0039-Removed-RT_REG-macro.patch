From ff75bdaa549f5f2f86803e3b9c2beac8387cfe08 Mon Sep 17 00:00:00 2001
From: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
Date: Thu, 30 Jan 2014 15:35:52 +0530
Subject: [PATCH 39/50]  - Removed RT_REG macro  - Aligned trans_desc table.

---
 fop/fom_generic.c            | 150 ++++++++++++++++++++++++-------------------
 ioservice/io_foms.c          | 107 ++++++++++++++++++------------
 ioservice/io_fops.c          |   1 +
 ioservice/io_service.c       |  20 ++----
 m0t1fs/linux_kernel/m0t1fs.c |  26 ++++----
 rm/rm_service.c              |  17 ++---
 sns/sns.c                    |  33 ++++------
 7 files changed, 191 insertions(+), 163 deletions(-)

diff --git a/fop/fom_generic.c b/fop/fom_generic.c
index 1c3362a..22c3a33 100644
--- a/fop/fom_generic.c
+++ b/fop/fom_generic.c
@@ -662,75 +662,95 @@ static struct m0_sm_state_descr generic_phases[] = {
 static struct m0_sm_trans_descr generic_phases_trans[] = {
 	{"FOM initialised",	M0_FOPH_INIT,	M0_FOPH_AUTHENTICATE},
 	{"FOM finished",	M0_FOPH_INIT,	M0_FOPH_FINISH},
-	{"FOM Success",	M0_FOPH_INIT,	M0_FOPH_SUCCESS},
+	{"FOM Success",	        M0_FOPH_INIT,	M0_FOPH_SUCCESS},
 	{"FOM init failed",	M0_FOPH_INIT,	M0_FOPH_FAILURE},
-	{"FOM initialised start specific phases", M0_FOPH_INIT,
-						  M0_FOPH_TYPE_SPECIFIC},
-	{"FOM wait authentication", M0_FOPH_AUTHENTICATE,
-				    M0_FOPH_AUTHENTICATE_WAIT},
-	{"FOM authentication finished", M0_FOPH_AUTHENTICATE,
-					M0_FOPH_RESOURCE_LOCAL},
-	{"FOM authentication init failed", M0_FOPH_AUTHENTICATE,
-					   M0_FOPH_FAILURE},
-	{"FOM wait authentication finished", M0_FOPH_AUTHENTICATE_WAIT,
-					     M0_FOPH_RESOURCE_LOCAL},
-	{"FOM authentication failed", M0_FOPH_AUTHENTICATE_WAIT,
-				      M0_FOPH_FAILURE},
-	{"Wait identify local resource", M0_FOPH_RESOURCE_LOCAL,
-					 M0_FOPH_RESOURCE_LOCAL_WAIT},
-	{"Local resource identified", M0_FOPH_RESOURCE_LOCAL,
-				      M0_FOPH_RESOURCE_DISTRIBUTED},
-	{"Local resource identification init failed", M0_FOPH_RESOURCE_LOCAL,
-						      M0_FOPH_FAILURE},
-	{"Wait local resource identify finished", M0_FOPH_RESOURCE_LOCAL_WAIT,
-				                  M0_FOPH_RESOURCE_DISTRIBUTED},
-	{"Local resource identification failed", M0_FOPH_RESOURCE_LOCAL_WAIT,
-					         M0_FOPH_FAILURE},
-	{"Wait identify distributed resource", M0_FOPH_RESOURCE_DISTRIBUTED,
-					     M0_FOPH_RESOURCE_DISTRIBUTED_WAIT},
-	{"Distributed resource identified", M0_FOPH_RESOURCE_DISTRIBUTED,
-					    M0_FOPH_OBJECT_CHECK},
+	{"FOM initialised start specific phases",
+				M0_FOPH_INIT, M0_FOPH_TYPE_SPECIFIC},
+	{"FOM wait authentication",
+				M0_FOPH_AUTHENTICATE,
+				M0_FOPH_AUTHENTICATE_WAIT},
+	{"FOM authentication finished",
+				M0_FOPH_AUTHENTICATE, M0_FOPH_RESOURCE_LOCAL},
+	{"FOM authentication init failed",
+				M0_FOPH_AUTHENTICATE, M0_FOPH_FAILURE},
+	{"FOM wait authentication finished",
+				M0_FOPH_AUTHENTICATE_WAIT,
+			        M0_FOPH_RESOURCE_LOCAL},
+	{"FOM authentication failed",
+				M0_FOPH_AUTHENTICATE_WAIT, M0_FOPH_FAILURE},
+	{"Wait identify local resource",
+				M0_FOPH_RESOURCE_LOCAL,
+				M0_FOPH_RESOURCE_LOCAL_WAIT},
+	{"Local resource identified",
+				M0_FOPH_RESOURCE_LOCAL,
+			        M0_FOPH_RESOURCE_DISTRIBUTED},
+	{"Local resource identification init failed",
+				M0_FOPH_RESOURCE_LOCAL, M0_FOPH_FAILURE},
+	{"Wait local resource identify finished",
+				M0_FOPH_RESOURCE_LOCAL_WAIT,
+				M0_FOPH_RESOURCE_DISTRIBUTED},
+	{"Local resource identification failed",
+				M0_FOPH_RESOURCE_LOCAL_WAIT, M0_FOPH_FAILURE},
+	{"Wait identify distributed resource",
+				M0_FOPH_RESOURCE_DISTRIBUTED,
+			        M0_FOPH_RESOURCE_DISTRIBUTED_WAIT},
+	{"Distributed resource identified",
+				M0_FOPH_RESOURCE_DISTRIBUTED,
+			        M0_FOPH_OBJECT_CHECK},
 	{"Distributed resource identification init failed",
-					M0_FOPH_RESOURCE_DISTRIBUTED,
-					M0_FOPH_FAILURE},
-	{"Distributed resource identified", M0_FOPH_RESOURCE_DISTRIBUTED_WAIT,
-					    M0_FOPH_OBJECT_CHECK},
+				M0_FOPH_RESOURCE_DISTRIBUTED,
+				M0_FOPH_FAILURE},
+	{"Distributed resource identified",
+				M0_FOPH_RESOURCE_DISTRIBUTED_WAIT,
+			        M0_FOPH_OBJECT_CHECK},
 	{"Wait identify distributed resource failed",
-					M0_FOPH_RESOURCE_DISTRIBUTED_WAIT,
-					M0_FOPH_FAILURE},
-	{"Wait check for FS objects initiate", M0_FOPH_OBJECT_CHECK,
-				               M0_FOPH_OBJECT_CHECK_WAIT},
-	{"FS objects located", M0_FOPH_OBJECT_CHECK, M0_FOPH_AUTHORISATION},
-	{"Check for FS objects init failed", M0_FOPH_OBJECT_CHECK,
-					     M0_FOPH_FAILURE},
-	{"Wait check for FS objects finished", M0_FOPH_OBJECT_CHECK_WAIT,
-					       M0_FOPH_AUTHORISATION},
-	{"Check for FS object failed", M0_FOPH_OBJECT_CHECK_WAIT,
-				       M0_FOPH_FAILURE},
-	{"Wait authorisation", M0_FOPH_AUTHORISATION,
-			       M0_FOPH_AUTHORISATION_WAIT},
-	{"Authorisation init finish", M0_FOPH_AUTHORISATION, M0_FOPH_TXN_INIT},
-	{"Autorisation init failed",  M0_FOPH_AUTHORISATION, M0_FOPH_FAILURE},
-	{"Wait authorisation finished", M0_FOPH_AUTHORISATION_WAIT,
-					M0_FOPH_TXN_INIT},
-	{"Wait authorisation failed", M0_FOPH_AUTHORISATION_WAIT,
-				      M0_FOPH_FAILURE},
-	{"Transaction initialised", M0_FOPH_TXN_INIT, M0_FOPH_TXN_OPEN},
-	{"Wait for transaction open", M0_FOPH_TXN_OPEN, M0_FOPH_TXN_WAIT},
-	{"Transaction open failed", M0_FOPH_TXN_WAIT, M0_FOPH_FAILURE},
-	{"Transaction opened", M0_FOPH_TXN_WAIT, M0_FOPH_TYPE_SPECIFIC},
-	{"FOM successfully completed", M0_FOPH_SUCCESS, M0_FOPH_FOL_REC_ADD},
-	{"FOL record added", M0_FOPH_FOL_REC_ADD, M0_FOPH_TXN_COMMIT},
+				M0_FOPH_RESOURCE_DISTRIBUTED_WAIT,
+				M0_FOPH_FAILURE},
+	{"Wait check for FS objects initiate",
+				M0_FOPH_OBJECT_CHECK,
+			        M0_FOPH_OBJECT_CHECK_WAIT},
+	{"FS objects located",  M0_FOPH_OBJECT_CHECK, M0_FOPH_AUTHORISATION},
+	{"Check for FS objects init failed",
+				M0_FOPH_OBJECT_CHECK, M0_FOPH_FAILURE},
+	{"Wait check for FS objects finished",
+				M0_FOPH_OBJECT_CHECK_WAIT,
+				M0_FOPH_AUTHORISATION},
+	{"Check for FS object failed",
+				M0_FOPH_OBJECT_CHECK_WAIT, M0_FOPH_FAILURE},
+	{"Wait authorisation",
+				M0_FOPH_AUTHORISATION,
+			        M0_FOPH_AUTHORISATION_WAIT},
+	{"Authorisation init finish",
+				M0_FOPH_AUTHORISATION, M0_FOPH_TXN_INIT},
+	{"Autorisation init failed",
+				M0_FOPH_AUTHORISATION, M0_FOPH_FAILURE},
+	{"Wait authorisation finished",
+				M0_FOPH_AUTHORISATION_WAIT, M0_FOPH_TXN_INIT},
+	{"Wait authorisation failed",
+				M0_FOPH_AUTHORISATION_WAIT, M0_FOPH_FAILURE},
+	{"Transaction initialised",
+				M0_FOPH_TXN_INIT, M0_FOPH_TXN_OPEN},
+	{"Wait for transaction open",
+				M0_FOPH_TXN_OPEN, M0_FOPH_TXN_WAIT},
+	{"Transaction open failed",
+				M0_FOPH_TXN_WAIT, M0_FOPH_FAILURE},
+	{"Transaction opened",  M0_FOPH_TXN_WAIT, M0_FOPH_TYPE_SPECIFIC},
+	{"FOM successfully completed",
+				 M0_FOPH_SUCCESS, M0_FOPH_FOL_REC_ADD},
+	{"FOL record added",     M0_FOPH_FOL_REC_ADD, M0_FOPH_TXN_COMMIT},
 	{"Transaction commited", M0_FOPH_TXN_COMMIT, M0_FOPH_QUEUE_REPLY},
-	{"Wait reply queue", M0_FOPH_QUEUE_REPLY, M0_FOPH_QUEUE_REPLY_WAIT},
-	{"Reply sent FOM finish", M0_FOPH_QUEUE_REPLY, M0_FOPH_FINISH},
-	{"Wait reply queue finished", M0_FOPH_QUEUE_REPLY_WAIT,
-				      M0_FOPH_TXN_COMMIT_WAIT},
-	{"Reply queued FOM finished", M0_FOPH_QUEUE_REPLY_WAIT, M0_FOPH_FINISH},
-	{"Wait transaction commit finished", M0_FOPH_TXN_COMMIT_WAIT,
-					     M0_FOPH_FINISH},
-	{"FOM timed out", M0_FOPH_TIMEOUT, M0_FOPH_FAILURE},
-	{"FOM failed", M0_FOPH_FAILURE, M0_FOPH_TXN_COMMIT},
+	{"Wait reply queue",     M0_FOPH_QUEUE_REPLY, M0_FOPH_QUEUE_REPLY_WAIT},
+	{"Reply sent FOM finish",
+				 M0_FOPH_QUEUE_REPLY, M0_FOPH_FINISH},
+	{"Wait reply queue finished",
+				 M0_FOPH_QUEUE_REPLY_WAIT,
+				 M0_FOPH_TXN_COMMIT_WAIT},
+	{"Reply queued FOM finished",
+				 M0_FOPH_QUEUE_REPLY_WAIT, M0_FOPH_FINISH},
+	{"Wait transaction commit finished",
+				 M0_FOPH_TXN_COMMIT_WAIT, M0_FOPH_FINISH},
+	{"FOM timed out",        M0_FOPH_TIMEOUT, M0_FOPH_FAILURE},
+	{"FOM failed",           M0_FOPH_FAILURE, M0_FOPH_TXN_COMMIT},
 };
 
 struct m0_sm_conf m0_generic_conf = {
diff --git a/ioservice/io_foms.c b/ioservice/io_foms.c
index 159402b..aad5e65 100644
--- a/ioservice/io_foms.c
+++ b/ioservice/io_foms.c
@@ -751,50 +751,73 @@ struct m0_sm_state_descr io_phases[] = {
 	},
 };
 
-/**
- * @todo Can be created programatically by iterating m0_sm_state_descr ???
- */
 struct m0_sm_trans_descr io_phases_trans[] = {
-	{"IO Prepared", M0_FOPH_IO_FOM_PREPARE, M0_FOPH_IO_FOM_BUFFER_ACQUIRE},
-	{"IO Prepare Failed", M0_FOPH_IO_FOM_PREPARE, M0_FOPH_FAILURE},
-	{"Network buffer acquired stobio init", M0_FOPH_IO_FOM_BUFFER_ACQUIRE,
-						M0_FOPH_IO_STOB_INIT},
-	{"Network buffer acquired zerocopy init", M0_FOPH_IO_FOM_BUFFER_ACQUIRE,
-						M0_FOPH_IO_ZERO_COPY_INIT},
-	{"Wait for network buffer", M0_FOPH_IO_FOM_BUFFER_ACQUIRE,
-						M0_FOPH_IO_FOM_BUFFER_WAIT},
-	{"Network buffer acquire failure", M0_FOPH_IO_FOM_BUFFER_ACQUIRE,
-						M0_FOPH_FAILURE},
-	{"Network buffer wait finished stobio init", M0_FOPH_IO_FOM_BUFFER_WAIT,
-					 M0_FOPH_IO_STOB_INIT},
+	{"IO Prepared",
+	 M0_FOPH_IO_FOM_PREPARE,
+	 M0_FOPH_IO_FOM_BUFFER_ACQUIRE},
+	{"IO Prepare Failed",
+	 M0_FOPH_IO_FOM_PREPARE,
+	 M0_FOPH_FAILURE},
+	{"Network buffer acquired stobio init",
+	 M0_FOPH_IO_FOM_BUFFER_ACQUIRE,
+	 M0_FOPH_IO_STOB_INIT},
+	{"Network buffer acquired zerocopy init",
+	 M0_FOPH_IO_FOM_BUFFER_ACQUIRE,
+	 M0_FOPH_IO_ZERO_COPY_INIT},
+	{"Wait for network buffer",
+	 M0_FOPH_IO_FOM_BUFFER_ACQUIRE,
+	 M0_FOPH_IO_FOM_BUFFER_WAIT},
+	{"Network buffer acquire failure",
+	 M0_FOPH_IO_FOM_BUFFER_ACQUIRE,
+	 M0_FOPH_FAILURE},
+	{"Network buffer wait finished stobio init",
+	 M0_FOPH_IO_FOM_BUFFER_WAIT,
+	 M0_FOPH_IO_STOB_INIT},
 	{"Wait for network buffer finished zerocopy init",
-						M0_FOPH_IO_FOM_BUFFER_WAIT,
-						M0_FOPH_IO_ZERO_COPY_INIT},
-	{"Network buffer not available", M0_FOPH_IO_FOM_BUFFER_WAIT,
-						M0_FOPH_IO_FOM_BUFFER_WAIT},
-	{"Wait for network buffer failure", M0_FOPH_IO_FOM_BUFFER_WAIT,
-						M0_FOPH_FAILURE},
-	{"STOB I/O launched", M0_FOPH_IO_STOB_INIT, M0_FOPH_IO_STOB_WAIT},
-	{"STOB I/O launch failed", M0_FOPH_IO_STOB_INIT, M0_FOPH_FAILURE},
-	{"Wait for STOB I/O finished zerocopy init", M0_FOPH_IO_STOB_WAIT,
-						     M0_FOPH_IO_ZERO_COPY_INIT},
-	{"Wait for STOB I/O finished buffer release", M0_FOPH_IO_STOB_WAIT,
-						     M0_FOPH_IO_BUFFER_RELEASE},
-	{"Wait for STOB I/O failed",  M0_FOPH_IO_STOB_WAIT, M0_FOPH_FAILURE},
-	{"Zero-copy initiated", M0_FOPH_IO_ZERO_COPY_INIT,
-						  M0_FOPH_IO_ZERO_COPY_WAIT},
-	{"Zero-copy initiate failed", M0_FOPH_IO_ZERO_COPY_INIT,
-						  M0_FOPH_FAILURE},
-	{"Wait for Zero-copy finished buffer release",M0_FOPH_IO_ZERO_COPY_WAIT,
-						  M0_FOPH_IO_BUFFER_RELEASE},
-	{"Wait for Zero-copy finished stobio init", M0_FOPH_IO_ZERO_COPY_WAIT,
-						    M0_FOPH_IO_STOB_INIT},
-	{"Wait for Zero-copy failed", M0_FOPH_IO_ZERO_COPY_WAIT,
-						  M0_FOPH_FAILURE},
-	{"Network buffer released", M0_FOPH_IO_BUFFER_RELEASE,
-						M0_FOPH_IO_FOM_BUFFER_ACQUIRE},
-	{"Network buffer released FOM succeed", M0_FOPH_IO_BUFFER_RELEASE,
-						M0_FOPH_SUCCESS},
+	 M0_FOPH_IO_FOM_BUFFER_WAIT,
+	 M0_FOPH_IO_ZERO_COPY_INIT},
+	{"Network buffer not available",
+	 M0_FOPH_IO_FOM_BUFFER_WAIT,
+	 M0_FOPH_IO_FOM_BUFFER_WAIT},
+	{"Wait for network buffer failure",
+	 M0_FOPH_IO_FOM_BUFFER_WAIT,
+	 M0_FOPH_FAILURE},
+	{"STOB I/O launched",
+	 M0_FOPH_IO_STOB_INIT,
+	 M0_FOPH_IO_STOB_WAIT},
+	{"STOB I/O launch failed",
+	 M0_FOPH_IO_STOB_INIT,
+	 M0_FOPH_FAILURE},
+	{"Wait for STOB I/O finished zerocopy init",
+	 M0_FOPH_IO_STOB_WAIT,
+	 M0_FOPH_IO_ZERO_COPY_INIT},
+	{"Wait for STOB I/O finished buffer release",
+	 M0_FOPH_IO_STOB_WAIT,
+	 M0_FOPH_IO_BUFFER_RELEASE},
+	{"Wait for STOB I/O failed",
+	 M0_FOPH_IO_STOB_WAIT,
+	 M0_FOPH_FAILURE},
+	{"Zero-copy initiated",
+	 M0_FOPH_IO_ZERO_COPY_INIT,
+	 M0_FOPH_IO_ZERO_COPY_WAIT},
+	{"Zero-copy initiate failed",
+	 M0_FOPH_IO_ZERO_COPY_INIT,
+	 M0_FOPH_FAILURE},
+	{"Wait for Zero-copy finished buffer release",
+	 M0_FOPH_IO_ZERO_COPY_WAIT,
+	 M0_FOPH_IO_BUFFER_RELEASE},
+	{"Wait for Zero-copy finished stobio init",
+	 M0_FOPH_IO_ZERO_COPY_WAIT,
+	 M0_FOPH_IO_STOB_INIT},
+	{"Wait for Zero-copy failed",
+	 M0_FOPH_IO_ZERO_COPY_WAIT,
+	 M0_FOPH_FAILURE},
+	{"Network buffer released",
+	 M0_FOPH_IO_BUFFER_RELEASE,
+	 M0_FOPH_IO_FOM_BUFFER_ACQUIRE},
+	{"Network buffer released FOM succeed",
+	 M0_FOPH_IO_BUFFER_RELEASE,
+	 M0_FOPH_SUCCESS},
 };
 
 struct m0_sm_conf io_conf = {
diff --git a/ioservice/io_fops.c b/ioservice/io_fops.c
index fa782e1..bfd4082 100644
--- a/ioservice/io_fops.c
+++ b/ioservice/io_fops.c
@@ -245,6 +245,7 @@ M0_INTERNAL int m0_ioservice_fop_init(void)
 		return -ENOMEM;
 	}
 
+	/* Restore original descriptions */
 	for (i = 0; i < io_conf.scf_trans_nr; i++)
 		new_trans[i] = io_conf.scf_trans[i];
 
diff --git a/ioservice/io_service.c b/ioservice/io_service.c
index 9b63371..63f060b 100644
--- a/ioservice/io_service.c
+++ b/ioservice/io_service.c
@@ -197,19 +197,13 @@ M0_INTERNAL int m0_ios_register(void)
 		return rc;
 	}
 
-/**
- * @todo Need to get rid of these macros
- */
-#undef RT_REG
-#define RT_REG(n) m0_addb_rec_type_register(&m0_addb_rt_ios_##n)
-	RT_REG(rwfom_finish);
-	RT_REG(ccfom_finish);
-	RT_REG(cdfom_finish);
-	RT_REG(io_finish);
-	RT_REG(desc_io_finish);
-	RT_REG(buffer_pool_low);
-	RT_REG(io_fom_phase_stats);
-#undef RT_REG
+	m0_addb_rec_type_register(&m0_addb_rt_ios_rwfom_finish);
+	m0_addb_rec_type_register(&m0_addb_rt_ios_ccfom_finish);
+	m0_addb_rec_type_register(&m0_addb_rt_ios_cdfom_finish);
+	m0_addb_rec_type_register(&m0_addb_rt_ios_io_finish);
+	m0_addb_rec_type_register(&m0_addb_rt_ios_desc_io_finish);
+	m0_addb_rec_type_register(&m0_addb_rt_ios_buffer_pool_low);
+	m0_addb_rec_type_register(&m0_addb_rt_ios_io_fom_phase_stats);
 
 	m0_addb_ctx_type_register(&m0_addb_ct_cob_create_fom);
 	m0_addb_ctx_type_register(&m0_addb_ct_cob_delete_fom);
diff --git a/m0t1fs/linux_kernel/m0t1fs.c b/m0t1fs/linux_kernel/m0t1fs.c
index 75f0ea7..0642679 100644
--- a/m0t1fs/linux_kernel/m0t1fs.c
+++ b/m0t1fs/linux_kernel/m0t1fs.c
@@ -101,20 +101,18 @@ M0_INTERNAL int m0t1fs_init(void)
 	m0_addb_ctx_type_register(&m0_addb_ct_m0t1fs_op_write);
 	M0_ADDB_CTX_INIT(&m0_addb_gmc, &m0t1fs_addb_ctx, &m0_addb_ct_m0t1fs_mod,
 	                 &m0_addb_proc_ctx);
-#undef RT_REG
-#define RT_REG(n) m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_##n)
-	RT_REG(io_finish);
-	RT_REG(cob_io_finish);
-	RT_REG(root_cob);
-	RT_REG(ior_sizes);
-	RT_REG(iow_sizes);
-	RT_REG(ior_times);
-	RT_REG(iow_times);
-	RT_REG(dgior_sizes);
-	RT_REG(dgiow_sizes);
-	RT_REG(dgior_times);
-	RT_REG(dgiow_times);
-#undef RT_REG
+
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_io_finish);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_cob_io_finish);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_root_cob);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_ior_sizes);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_iow_sizes);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_ior_times);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_iow_times);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_dgior_sizes);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_dgiow_sizes);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_dgior_times);
+	m0_addb_rec_type_register(&m0_addb_rt_m0t1fs_dgiow_times);
 
 	M0_ADDB_MONITOR_STATS_TYPE_REGISTER(&m0_addb_rt_m0t1fs_mon_io_size,
 					    "io_size");
diff --git a/rm/rm_service.c b/rm/rm_service.c
index a321ce8..1d31c3b 100644
--- a/rm/rm_service.c
+++ b/rm/rm_service.c
@@ -100,16 +100,13 @@ M0_INTERNAL int m0_rms_register(void)
 			 &m0_addb_ct_rm_mod, &m0_addb_proc_ctx);
 	m0_addb_ctx_type_register(&m0_addb_ct_rms_serv);
 
-#undef RT_REG
-#define RT_REG(n) m0_addb_rec_type_register(&m0_addb_rt_rm_##n)
-	RT_REG(local_rate);
-	RT_REG(borrow_rate);
-	RT_REG(revoke_rate);
-	RT_REG(local_times);
-	RT_REG(borrow_times);
-	RT_REG(revoke_times);
-	RT_REG(credit_times);
-#undef RT_REG
+	m0_addb_rec_type_register(&m0_addb_rt_rm_local_rate);
+	m0_addb_rec_type_register(&m0_addb_rt_rm_borrow_rate);
+	m0_addb_rec_type_register(&m0_addb_rt_rm_revoke_rate);
+	m0_addb_rec_type_register(&m0_addb_rt_rm_local_times);
+	m0_addb_rec_type_register(&m0_addb_rt_rm_borrow_times);
+	m0_addb_rec_type_register(&m0_addb_rt_rm_revoke_times);
+	m0_addb_rec_type_register(&m0_addb_rt_rm_credit_times);
 
 	m0_reqh_service_type_register(&m0_rms_type);
 	/**
diff --git a/sns/sns.c b/sns/sns.c
index 7a59cd7..5759643 100644
--- a/sns/sns.c
+++ b/sns/sns.c
@@ -27,25 +27,20 @@
 
 M0_INTERNAL int m0_sns_init()
 {
-#undef CT_REG
-#define CT_REG(n) m0_addb_ctx_type_register(&m0_addb_ct_sns_##n)
-        CT_REG(mod);
-        CT_REG(cm);
-        CT_REG(ag);
-        CT_REG(cp);
-#undef CT_REG
-#undef RT_REG
-#define RT_REG(n) m0_addb_rec_type_register(&m0_addb_rt_sns_##n)
-        RT_REG(cm_buf_nr);
-        RT_REG(ag_alloc);
-        RT_REG(ag_fini);
-        RT_REG(sw_update);
-        RT_REG(iter_next_gfid);
-        RT_REG(ag_info);
-        RT_REG(cp_info);
-	RT_REG(repair_info);
-	RT_REG(repair_progress);
-#undef RT_REG
+        m0_addb_ctx_type_register(&m0_addb_ct_sns_mod);
+        m0_addb_ctx_type_register(&m0_addb_ct_sns_cm);
+        m0_addb_ctx_type_register(&m0_addb_ct_sns_ag);
+        m0_addb_ctx_type_register(&m0_addb_ct_sns_cp);
+
+        m0_addb_rec_type_register(&m0_addb_rt_sns_cm_buf_nr);
+        m0_addb_rec_type_register(&m0_addb_rt_sns_ag_alloc);
+        m0_addb_rec_type_register(&m0_addb_rt_sns_ag_fini);
+        m0_addb_rec_type_register(&m0_addb_rt_sns_sw_update);
+        m0_addb_rec_type_register(&m0_addb_rt_sns_iter_next_gfid);
+        m0_addb_rec_type_register(&m0_addb_rt_sns_ag_info);
+        m0_addb_rec_type_register(&m0_addb_rt_sns_cp_info);
+	m0_addb_rec_type_register(&m0_addb_rt_sns_repair_info);
+	m0_addb_rec_type_register(&m0_addb_rt_sns_repair_progress);
 
 	m0_xc_sns_cp_onwire_init();
 	m0_xc_sw_onwire_fop_init();
-- 
1.8.3.2

