From 3b2c2935d23a450e5e554648effcb7dd8fb2fe84 Mon Sep 17 00:00:00 2001
From: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
Date: Thu, 30 Jan 2014 14:33:23 +0530
Subject: [PATCH 14/50]  Fix for m0_sm_conf_trans_extend().

---
 ioservice/io_fops.c | 5 +++++
 sm/sm.c             | 2 +-
 2 files changed, 6 insertions(+), 1 deletion(-)

diff --git a/ioservice/io_fops.c b/ioservice/io_fops.c
index 0410f34..4f16991 100644
--- a/ioservice/io_fops.c
+++ b/ioservice/io_fops.c
@@ -219,6 +219,7 @@ M0_INTERNAL int m0_ioservice_fop_init(void)
 	struct m0_sm_conf *p_cob_ops_conf;
 #ifndef __KERNEL__
 	uint32_t           new_nr;
+	int                i;
 	p_cob_ops_conf = &cob_ops_conf;
 #else
 	p_cob_ops_conf = &m0_generic_conf;
@@ -243,6 +244,10 @@ M0_INTERNAL int m0_ioservice_fop_init(void)
 		m0_addb_ctx_fini(&m0_ios_addb_ctx);
 		return -ENOMEM;
 	}
+
+	for (i = 0; i < io_conf.scf_trans_nr; i++)
+		new_trans[i] = io_conf.scf_trans[i];
+
 	io_conf.scf_trans    = new_trans;
 	m0_sm_conf_trans_extend(&m0_generic_conf, &io_conf, new_nr);
 
diff --git a/sm/sm.c b/sm/sm.c
index 14b7ab4..7f534f6 100644
--- a/sm/sm.c
+++ b/sm/sm.c
@@ -656,7 +656,7 @@ M0_INTERNAL void m0_sm_conf_trans_extend(const struct m0_sm_conf *base,
 	M0_PRE(conf_invariant(base));
 	M0_PRE(sub->scf_trans_nr <= max_size);
 
-	for (i = 0; i < base->scf_trans_nr;) {
+	for (i = 0; i < base->scf_trans_nr; i++) {
 		const struct m0_sm_trans_descr *b = &base->scf_trans[i];
 
 		if (!trans_exists(sub, b->td_src, b->td_tgt)) {
-- 
1.8.3.2

