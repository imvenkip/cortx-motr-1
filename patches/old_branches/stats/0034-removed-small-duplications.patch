From 302990cf633a9abd270761f0f3a14b3b1afdfc93 Mon Sep 17 00:00:00 2001
From: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
Date: Mon, 23 Dec 2013 13:24:35 +0530
Subject: [PATCH 34/50]  - removed small duplications  - Renamed macro

---
 fop/fom.h                   | 12 ++++++------
 fop/fop_addb.h              |  4 ++--
 fop/ut/stats/stats_fom.c    |  6 +++---
 fop/ut/stats/stats_fom.h    |  6 +++---
 ioservice/io_fops.c         | 12 ++++++++++--
 ioservice/io_service_addb.h |  4 ++--
 ioservice/ut/bulkio_ut.c    |  2 +-
 sm/sm.c                     |  2 ++
 8 files changed, 29 insertions(+), 19 deletions(-)

diff --git a/fop/fom.h b/fop/fom.h
index 77284f9..61fa04f 100644
--- a/fop/fom.h
+++ b/fop/fom.h
@@ -380,14 +380,14 @@ enum { M0_FOS_TRANS_NR = 8 };
 /**
  * Histogram arguments for m0_addb_rt_fom_[state|phase]_stats.
  * Define the macro with histogram arguments if desired.
- * e.g. #define M0_FOM_STATS_HIST_ARGS 100, 200, 500
+ * e.g. #define M0_FOM_SM_STATS_HIST_ARGS 100, 200, 500
  */
-#undef M0_FOM_STATS_HIST_ARGS
+#undef M0_FOM_SM_STATS_HIST_ARGS
 
-#ifdef M0_FOM_STATS_HIST_ARGS
-#define M0_FOM_STATS_HIST_ARGS2 0, M0_FOM_STATS_HIST_ARGS
+#ifdef M0_FOM_SM_STATS_HIST_ARGS
+#define M0_FOM_SM_STATS_HIST_ARGS2 0, M0_FOM_SM_STATS_HIST_ARGS
 #else
-#define M0_FOM_STATS_HIST_ARGS2
+#define M0_FOM_SM_STATS_HIST_ARGS2
 #endif
 
 #define M0_FOM_STATS_CNTR_DATA						\
@@ -554,7 +554,7 @@ struct m0_fom {
 	/** counter data for states statistics */
 	uint8_t                   fo_fos_stats_data[FOM_STATE_STATS_DATA_SZ];
 
-	/** addb sm counter for states statistics */
+	/** addb sm counter for phases statistics */
 	struct m0_addb_sm_counter fo_sm_phase_stats;
 	/**
          * counter data for states statistics
diff --git a/fop/fop_addb.h b/fop/fop_addb.h
index 337bc46..b46cf79 100644
--- a/fop/fop_addb.h
+++ b/fop/fop_addb.h
@@ -118,10 +118,10 @@ M0_ADDB_RT_DP(m0_addb_rt_fom_fini, M0_ADDB_RECID_FOM_FINI, "transitions");
 
 extern struct m0_sm_conf fom_states_conf;
 
-#ifdef M0_FOM_STATS_HIST_ARGS
+#ifdef M0_FOM_SM_STATS_HIST_ARGS
 /** FOM state statistics counter */
 M0_ADDB_RT_SM_CNTR(m0_addb_rt_fom_state_stats, M0_ADDB_RECID_FOM_STATE_STATS,
-		   &fom_states_conf, M0_FOM_STATS_HIST_ARGS);
+		   &fom_states_conf, M0_FOM_SM_STATS_HIST_ARGS);
 #else
 M0_ADDB_RT_SM_CNTR(m0_addb_rt_fom_state_stats, M0_ADDB_RECID_FOM_STATE_STATS,
 		   &fom_states_conf);
diff --git a/fop/ut/stats/stats_fom.c b/fop/ut/stats/stats_fom.c
index fe5c50f..04e750f 100644
--- a/fop/ut/stats/stats_fom.c
+++ b/fop/ut/stats/stats_fom.c
@@ -44,7 +44,7 @@ static struct m0_sm_state_descr phases[] = {
 	}
 };
 
-static struct m0_sm_trans_descr trans[TRANS_NR] = {
+static struct m0_sm_trans_descr trans[NR] = {
 	{ "Start",    PH_INIT,   PH_RUN },
 	{ "Failed",   PH_INIT,   PH_FINISH },
 	{ "Stop",     PH_RUN,    PH_FINISH }
@@ -58,9 +58,9 @@ static struct m0_sm_conf fom_phases_conf = {
 	.scf_trans     = trans
 };
 
-#ifdef M0_FOM_STATS_HIST_ARGS
+#ifdef M0_FOM_SM_STATS_HIST_ARGS
 M0_ADDB_RT_SM_CNTR(addb_rt_fom_phase_stats, ADDB_RECID_FOM_PHASE_STATS,
-		   &fom_phases_conf, M0_FOM_STATS_HIST_ARGS);
+		   &fom_phases_conf, M0_FOM_SM_STATS_HIST_ARGS);
 #else
 M0_ADDB_RT_SM_CNTR(addb_rt_fom_phase_stats, ADDB_RECID_FOM_PHASE_STATS,
 		   &fom_phases_conf);
diff --git a/fop/ut/stats/stats_fom.h b/fop/ut/stats/stats_fom.h
index 63c5aac..c5f8069 100644
--- a/fop/ut/stats/stats_fom.h
+++ b/fop/ut/stats/stats_fom.h
@@ -23,6 +23,7 @@
 #define __MERO_FOP_UT_STATS_FOM_H__
 
 #include "fop/fom.h"
+#include "fop/fom_generic.h"
 
 
 enum fom_stats_phase {
@@ -32,12 +33,11 @@ enum fom_stats_phase {
 };
 
 enum {
-	TRANS_NR = 3,
+	NR = 3,
 };
 
 enum {
 	ADDB_RECID_FOM_PHASE_STATS = 1777123,
-	FOM_PHASE_STATS_DATA_SZ = M0_FOM_STATS_CNTR_DATA * TRANS_NR
 };
 
 /**
@@ -51,7 +51,7 @@ struct fom_stats {
 	/** addb sm counter for states statistics */
 	struct m0_addb_sm_counter fs_phase_stats;
 	/** counter data for states statistics */
-	uint8_t                   fs_stats_data[FOM_PHASE_STATS_DATA_SZ];
+	uint8_t                   fs_stats_data[FOM_PHASE_STATS_DATA_SZ(NR)];
 };
 
 #endif /* __MERO_FOP_UT_STATS_FOM_H__ */
diff --git a/ioservice/io_fops.c b/ioservice/io_fops.c
index a44784c..60d53c1 100644
--- a/ioservice/io_fops.c
+++ b/ioservice/io_fops.c
@@ -209,6 +209,8 @@ M0_INTERNAL int m0_ioservice_fop_init(void)
 {
 	struct m0_sm_conf *p_cob_ops_conf;
 #ifndef __KERNEL__
+	int                rc;
+
 	p_cob_ops_conf = &cob_ops_conf;
 #else
 	p_cob_ops_conf = &m0_generic_conf;
@@ -225,8 +227,14 @@ M0_INTERNAL int m0_ioservice_fop_init(void)
 			  m0_generic_conf.scf_nr_states);
 	m0_sm_conf_extend(m0_generic_conf.scf_state, cob_ops_phases,
 			  m0_generic_conf.scf_nr_states);
-	/** @todo ignore error ??? */
-	m0_sm_conf_trans_extend(&io_conf, &m0_generic_conf);
+
+	rc = m0_sm_conf_trans_extend(&io_conf, &m0_generic_conf);
+	if (rc != 0) {
+		m0_xc_io_fops_fini();
+		m0_addb_ctx_fini(&m0_ios_addb_ctx);
+		return rc;
+	}
+
 	m0_sm_conf_init(&io_conf);
 #endif
 	M0_FOP_TYPE_INIT(&m0_fop_cob_readv_fopt,
diff --git a/ioservice/io_service_addb.h b/ioservice/io_service_addb.h
index 1cb7a6d..a986aca 100644
--- a/ioservice/io_service_addb.h
+++ b/ioservice/io_service_addb.h
@@ -200,11 +200,11 @@ enum {
 
 extern struct m0_addb_ctx m0_ios_addb_ctx;
 extern struct m0_sm_conf io_conf;
-#ifdef M0_FOM_STATS_HIST_ARGS
+#ifdef M0_FOM_SM_STATS_HIST_ARGS
 /** FOM state statistics counter */
 M0_ADDB_RT_SM_CNTR(m0_addb_rt_ios_io_fom_phase_stats,
 		   M0_ADDB_RECID_IOS_IO_FOM_PHASE_STATS,
-		   &io_conf, M0_FOM_STATS_HIST_ARGS);
+		   &io_conf, M0_FOM_SM_STATS_HIST_ARGS);
 #else
 M0_ADDB_RT_SM_CNTR(m0_addb_rt_ios_io_fom_phase_stats,
 		   M0_ADDB_RECID_IOS_IO_FOM_PHASE_STATS,
diff --git a/ioservice/ut/bulkio_ut.c b/ioservice/ut/bulkio_ut.c
index b9483d7..f28ae6f 100644
--- a/ioservice/ut/bulkio_ut.c
+++ b/ioservice/ut/bulkio_ut.c
@@ -1159,7 +1159,7 @@ static int io_fop_stob_create_fom_create(struct m0_fop  *fop,
         M0_UT_ASSERT(rc == 0);
 
 	/* Ignore fom stats */
-	fom->fo_phase_stats_data = (void *)0;
+	fom->fo_phase_stats_data = NULL;
 
 	fom->fo_ops = &bulkio_stob_create_fom_ops;
 	*m = fom;
diff --git a/sm/sm.c b/sm/sm.c
index 15192bc..7e1288c 100644
--- a/sm/sm.c
+++ b/sm/sm.c
@@ -648,6 +648,8 @@ M0_INTERNAL int m0_sm_conf_trans_extend(struct m0_sm_conf       *base,
 	uint32_t                  j;
 
 	M0_PRE(base != NULL && sub != NULL);
+	M0_PRE(conf_invariant(base));
+	M0_PRE(conf_invariant(sub));
 
 	trans_nr = base->scf_trans_nr + sub->scf_trans_nr;
 	M0_ALLOC_ARR(trans_descr, trans_nr);
-- 
1.8.3.2

