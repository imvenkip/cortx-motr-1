From d7789e2d7815b20fce2900069c64757a264b3a57 Mon Sep 17 00:00:00 2001
From: Maxim Medved <max_medved@xyratex.com>
Date: Mon, 9 Dec 2013 05:04:31 +0200
Subject: [PATCH 2/7] stap-allocator: scripts rearranged

---
 scripts/systemtap/be-allocator-performance.sh  |  6 ---
 scripts/systemtap/be-allocator-performance.stp | 74 --------------------------
 scripts/systemtap/be-allocator-size.sh         |  1 +
 scripts/systemtap/be-allocator-size.stp        | 37 +++++++++++++
 scripts/systemtap/be-allocator-time.sh         |  1 +
 scripts/systemtap/be-allocator-time.stp        | 56 +++++++++++++++++++
 scripts/systemtap/run.sh                       |  4 +-
 7 files changed, 98 insertions(+), 81 deletions(-)
 delete mode 100755 scripts/systemtap/be-allocator-performance.sh
 delete mode 100644 scripts/systemtap/be-allocator-performance.stp
 create mode 120000 scripts/systemtap/be-allocator-size.sh
 create mode 100644 scripts/systemtap/be-allocator-size.stp
 create mode 120000 scripts/systemtap/be-allocator-time.sh
 create mode 100644 scripts/systemtap/be-allocator-time.stp

diff --git a/scripts/systemtap/be-allocator-performance.sh b/scripts/systemtap/be-allocator-performance.sh
deleted file mode 100755
index 568e42a..0000000
--- a/scripts/systemtap/be-allocator-performance.sh
+++ /dev/null
@@ -1,6 +0,0 @@
-#!/bin/bash
-set -eux
-
-CWD=$(cd "$( dirname "$0")" && pwd)
-
-"$CWD/run.sh" "$CWD/be-allocator-performance.stp"
diff --git a/scripts/systemtap/be-allocator-performance.stp b/scripts/systemtap/be-allocator-performance.stp
deleted file mode 100644
index 998400b..0000000
--- a/scripts/systemtap/be-allocator-performance.stp
+++ /dev/null
@@ -1,74 +0,0 @@
-#!/usr/bin/env stap
-
-/* timing probes */
-
-global func_time
-global func_time_stats
-global total_stats
-global calls
-global times
-
-probe m0_be_alloc, m0_be_free
-{
-	func_time[tid(), ppfunc()] = m0_time()
-}
-
-probe m0_be_alloc.return, m0_be_free.return
-{
-	/* 1s stats */
-	time_elapsed = m0_time() - func_time[tid(), ppfunc()]
-	delete func_time[tid(), ppfunc()]
-	func_time_stats[ppfunc()] <<< time_elapsed
-	/* total stats */
-	total_stats <<< time_elapsed
-	calls[ppfunc()] += 1
-	times[ppfunc()] += time_elapsed
-}
-
-/* size/shift probes */
-
-global alloc_size_log
-global alloc_size_linear
-global alloc_shift
-
-probe m0_be_alloc
-{
-	alloc_size_log <<< size
-	alloc_size_linear <<< size
-	alloc_shift <<< shift
-}
-
-function print_allocator_stats()
-{
-	printf("%s\n", tz_ctime(gettimeofday_s()))
-	foreach (func in calls) {
-		printf("%s(): %d calls, %d ms total time, %d ns avg time per call\n",
-		       func, calls[func], times[func] / 1000000,
-		       calls[func] == 0 ? 0 : times[func] / calls[func]);
-	}
-	foreach (ftime in func_time_stats) {
-		@M0_PRINT_STATS(ftime, "ns", func_time_stats[ftime])
-	}
-	@M0_PRINT_STATS("total", "ns", total_stats)
-	@M0_PRINT_STATS("alloc size", "B", alloc_size_log)
-	@M0_PRINT_STATS_LINEAR("alloc size, linear", "B", alloc_size_linear, 0, 512, 8)
-	@M0_PRINT_STATS_LINEAR("alloc shift", "B", alloc_shift, 0, 20, 1)
-}
-
-probe timer.ms(1000)
-{
-	print_allocator_stats()
-	delete func_time_stats
-}
-
-probe begin
-{
-	print_allocator_stats()
-	printf("begin\n");
-}
-
-probe end
-{
-	print_allocator_stats()
-	printf("end\n");
-}
diff --git a/scripts/systemtap/be-allocator-size.sh b/scripts/systemtap/be-allocator-size.sh
new file mode 120000
index 0000000..e0e6347
--- /dev/null
+++ b/scripts/systemtap/be-allocator-size.sh
@@ -0,0 +1 @@
+run.sh
\ No newline at end of file
diff --git a/scripts/systemtap/be-allocator-size.stp b/scripts/systemtap/be-allocator-size.stp
new file mode 100644
index 0000000..51fdda6
--- /dev/null
+++ b/scripts/systemtap/be-allocator-size.stp
@@ -0,0 +1,37 @@
+#!/usr/bin/env stap
+
+global alloc_size_log
+global alloc_size_linear
+global alloc_shift
+
+probe m0_be_alloc
+{
+	alloc_size_log <<< size
+	alloc_size_linear <<< size
+	alloc_shift <<< shift
+}
+
+function print_size_stats()
+{
+	printf("%s\n", tz_ctime(gettimeofday_s()))
+	@M0_PRINT_STATS("alloc size", "B", alloc_size_log)
+	@M0_PRINT_STATS_LINEAR("alloc size, linear", "B", alloc_size_linear, 0, 512, 8)
+	@M0_PRINT_STATS_LINEAR("alloc shift", "B", alloc_shift, 0, 20, 1)
+}
+
+probe timer.ms(1000)
+{
+	print_size_stats()
+}
+
+probe begin
+{
+	printf("begin\n");
+	print_size_stats()
+}
+
+probe end
+{
+	print_size_stats()
+	printf("end\n");
+}
diff --git a/scripts/systemtap/be-allocator-time.sh b/scripts/systemtap/be-allocator-time.sh
new file mode 120000
index 0000000..e0e6347
--- /dev/null
+++ b/scripts/systemtap/be-allocator-time.sh
@@ -0,0 +1 @@
+run.sh
\ No newline at end of file
diff --git a/scripts/systemtap/be-allocator-time.stp b/scripts/systemtap/be-allocator-time.stp
new file mode 100644
index 0000000..f2d1112
--- /dev/null
+++ b/scripts/systemtap/be-allocator-time.stp
@@ -0,0 +1,56 @@
+#!/usr/bin/env stap
+
+global func_time
+global func_time_stats
+global total_stats
+global calls
+global times
+
+probe m0_be_alloc, m0_be_free
+{
+	func_time[tid(), ppfunc()] = m0_time()
+}
+
+probe m0_be_alloc.return, m0_be_free.return
+{
+	/* 1s stats */
+	time_elapsed = m0_time() - func_time[tid(), ppfunc()]
+	delete func_time[tid(), ppfunc()]
+	func_time_stats[ppfunc()] <<< time_elapsed
+	/* total stats */
+	total_stats <<< time_elapsed
+	calls[ppfunc()] += 1
+	times[ppfunc()] += time_elapsed
+}
+
+function print_allocator_stats()
+{
+	printf("%s\n", tz_ctime(gettimeofday_s()))
+	foreach (func in calls) {
+		printf("%s(): %d calls, %d ms total time, %d ns avg time per call\n",
+		       func, calls[func], times[func] / 1000000,
+		       calls[func] == 0 ? 0 : times[func] / calls[func]);
+	}
+	foreach (ftime in func_time_stats) {
+		@M0_PRINT_STATS(ftime, "ns", func_time_stats[ftime])
+	}
+	@M0_PRINT_STATS("total", "ns", total_stats)
+}
+
+probe timer.ms(1000)
+{
+	print_allocator_stats()
+	delete func_time_stats
+}
+
+probe begin
+{
+	printf("begin\n");
+	print_allocator_stats()
+}
+
+probe end
+{
+	print_allocator_stats()
+	printf("end\n");
+}
diff --git a/scripts/systemtap/run.sh b/scripts/systemtap/run.sh
index 7f192ac..9e80be4 100755
--- a/scripts/systemtap/run.sh
+++ b/scripts/systemtap/run.sh
@@ -2,6 +2,8 @@
 set -eux
 
 CWD=$(cd "$( dirname "$0")" && pwd)
+SH_SCRIPT="$(basename $0)"
+STP_SCRIPT="$CWD/${SH_SCRIPT%.*}.stp"
 
 LIBMERO="$CWD/../../mero/.libs/libmero-0.1.0.so"
 M0D="$CWD/../../mero/.libs/m0d"
@@ -9,4 +11,4 @@ M0TAPSET="$CWD/tapset"
 
 stap -vv -d "$LIBMERO" -d "$M0D" --ldd -DMAXTRACE=10 -DSTP_NO_OVERLOAD	\
 	-DMAXSKIPPED=1000000 -DMAXERRORS=1000 -I "$M0TAPSET"		\
-	"$1" "$LIBMERO" "$M0D"
+	"$STP_SCRIPT" "$LIBMERO" "$M0D"
-- 
1.8.3.2

