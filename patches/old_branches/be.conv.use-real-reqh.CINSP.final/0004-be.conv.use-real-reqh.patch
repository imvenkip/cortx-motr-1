From 66a17b77e843b80d3c88486de5673e57be264f26 Mon Sep 17 00:00:00 2001
From: Mandar Sawant <mandar_sawant@xyratex.com>
Date: Wed, 5 Feb 2014 18:39:40 +0530
Subject: [PATCH 4/9] be.conv.use-real-reqh, - Rebased with latest master,
 fixed issues found during testing.

---
 be/tx_group_fom.c   |  6 +++---
 fol/ut/fol.c        | 13 -------------
 pool/ut/test_pm.c   | 20 --------------------
 reqh/reqh_service.c | 43 ++-----------------------------------------
 4 files changed, 5 insertions(+), 77 deletions(-)

diff --git a/be/tx_group_fom.c b/be/tx_group_fom.c
index 5feed11..0b4df82 100644
--- a/be/tx_group_fom.c
+++ b/be/tx_group_fom.c
@@ -445,7 +445,8 @@ static void be_tx_group_fom_log(struct m0_be_tx_group_fom *m)
 	       m0_be_tx_group_size(m->tgf_group));
 
 	m0_fom_phase_set(&m->tgf_gen, TGS_LOGGING);
-	m0_fom_wakeup(&m->tgf_gen);
+	if (m0_fom_is_waiting(&m->tgf_gen))
+		m0_fom_wakeup(&m->tgf_gen);
 }
 
 static void be_tx_group_fom_handle(struct m0_sm_group *gr,
@@ -484,8 +485,7 @@ static void be_tx_group_fom_stop(struct m0_sm_group *gr, struct m0_sm_ast *ast)
 		container_of(ast, struct m0_be_tx_group_fom, tgf_ast_stop);
 
 	m->tgf_stopping = true;
-	if (!M0_IN(m0_fom_phase(&gf->tgf_gen), (TGS_FINISH, TGS_STOPPING)))
-	//if (m0_fom_is_waiting(&m->tgf_gen))
+	if (m0_fom_is_waiting(&m->tgf_gen))
 		m0_fom_wakeup(&m->tgf_gen);
 }
 
diff --git a/fol/ut/fol.c b/fol/ut/fol.c
index 8249f94..760d830 100644
--- a/fol/ut/fol.c
+++ b/fol/ut/fol.c
@@ -34,19 +34,6 @@
 #include "ut/ut.h"
 #include "lib/ub.h"
 
-#if XXX_USE_DB5
-static const char db_name[] = "ut-fol";
-
-static struct m0_fol_rec_header *h;
-static struct m0_fol_rec_desc   *d;
-static struct m0_fol             fol;
-static struct m0_fol_rec         r;
-static struct m0_fol_rec_desc   *d;
-static struct m0_fol_rec_header *hh;
-static struct m0_buf             buf;
-static struct m0_dbenv           db;
-static struct m0_db_tx           tx;
-#else
 static struct m0_fol            *g_fol;
 static struct m0_fol_rec_header *g_hdr;
 static struct m0_fol_rec_desc   *g_desc;
diff --git a/pool/ut/test_pm.c b/pool/ut/test_pm.c
index d599ed2..b89bc63 100644
--- a/pool/ut/test_pm.c
+++ b/pool/ut/test_pm.c
@@ -78,9 +78,6 @@ static void pm_test_init_fini(void)
 	struct m0_poolmach pm;
 	int                rc = 0;
 
-	M0_SET0(&dbenv);
-	rc = m0_dbenv_init(&dbenv, "pm_testing", 0);
-	M0_ASSERT(rc == 0);
 	M0_SET0(&pm);
 	rc = m0_poolmach_init(&pm, be_seg, sm_grp, NULL,
 					 PM_TEST_DEFAULT_NODE_NUMBER,
@@ -109,11 +106,6 @@ static void pm_test_transit(void)
 	struct m0_be_tx_credit         cred = {};
 	struct m0_be_tx                tx;
 
-	M0_SET0(&dbenv);
-	rc = m0_dbenv_init(&dbenv, "pm_test_transit", 0);
-	M0_ASSERT(rc == 0);
-	rc = m0_db_tx_init(&tx, &dbenv, 0);
-	M0_UT_ASSERT(rc == 0);
 	M0_SET0(&pm);
 	rc = m0_poolmach_init(&pm, be_seg, sm_grp, NULL,
 					 PM_TEST_DEFAULT_NODE_NUMBER,
@@ -435,11 +427,6 @@ static void pm_test_spare_slot(void)
 	struct m0_be_tx       tx;
 	struct m0_be_tx_credit cred = {};
 
-	M0_SET0(&dbenv);
-	rc = m0_dbenv_init(&dbenv, "pm_test_spare_slot", 0);
-	M0_ASSERT(rc == 0);
-	rc = m0_db_tx_init(&tx, &dbenv, 0);
-	M0_UT_ASSERT(rc == 0);
 	M0_SET0(&pm);
 	rc = m0_poolmach_init(&pm, be_seg, sm_grp, NULL,
 					 PM_TEST_DEFAULT_NODE_NUMBER,
@@ -605,10 +592,6 @@ static void pm_test_multi_fail(void)
 	struct m0_be_tx       tx;
 	struct m0_be_tx_credit cred = {};
 
-	M0_SET0(&dbenv);
-	rc = m0_dbenv_init(&dbenv, "pm_test_multi_fail", 0);
-	M0_ASSERT(rc == 0);
-	M0_UT_ASSERT(rc == 0);
 	M0_SET0(&pm);
 	rc = m0_poolmach_init(&pm, be_seg, sm_grp, NULL,
 					 PM_TEST_DEFAULT_NODE_NUMBER,
@@ -796,9 +779,6 @@ static void pm_test_load_from_persistent_storage(void)
 	struct m0_poolmach pm;
 	int                rc = 0;
 
-	M0_SET0(&dbenv);
-	rc = m0_dbenv_init(&dbenv, "pm_test_multi_fail", 0);
-	M0_ASSERT(rc == 0);
 	M0_SET0(&pm);
 	rc = m0_poolmach_init(&pm, be_seg, sm_grp, NULL,
 					 PM_TEST_DEFAULT_NODE_NUMBER,
diff --git a/reqh/reqh_service.c b/reqh/reqh_service.c
index 628c8a5..ee6c4a5 100644
--- a/reqh/reqh_service.c
+++ b/reqh/reqh_service.c
@@ -362,47 +362,11 @@ M0_INTERNAL void m0_reqh_service_stop(struct m0_reqh_service *service)
 	m0_reqh_lockers_clear(reqh, key);
 }
 
-static void reqh_rpc_svc_fini_and_free(struct m0_rpc_service *service)
-{
-	m0_rpc__service_fini(service);
-	service->svc_state = M0_RPC_SERVICE_STATE_UNDEFINED;
-}
-
-static const struct m0_rpc_service_ops reqh_rpc_svc_ops = {
-	.rso_fini_and_free = reqh_rpc_svc_fini_and_free,
-};
-
-static int
-reqh_rpc_svc_alloc_and_init(struct m0_rpc_service_type *service_type,
-			    const char                 *ep_addr,
-			    const struct m0_uint128    *uuid,
-			    struct m0_rpc_service     **out)
-{
-	int rc;
-
-	rc = m0_rpc__service_init(*out, service_type, ep_addr, uuid,
-				  &reqh_rpc_svc_ops);
-	(*out)->svc_state = M0_RPC_SERVICE_STATE_INITIALISED;
-	return rc;
-}
-
-static const struct m0_rpc_service_type_ops reqh_rpc_svct_ops = {
-	.rsto_alloc_and_init = reqh_rpc_svc_alloc_and_init,
-};
-
-M0_RPC_SERVICE_TYPE_DEFINE(static, reqh_rpc_svct, "Reqh service rpc svc",
-			   M0_REQH_SVC_RPC_SERVICE_TYPE, &reqh_rpc_svct_ops);
-
-
 M0_INTERNAL void m0_reqh_service_init(struct m0_reqh_service *service,
 				      struct m0_reqh         *reqh,
 				      struct m0_uint128      *uuid)
 {
 	struct m0_addb_ctx_type *serv_addb_ct;
-	//struct m0_rpc_machine   *rmach;
-	const char              *ep;
-	struct m0_uint128        uuid1;
-	struct m0_rpc_service   *rpcsvc = &service->rs_rpc_svc;
 
 	M0_PRE(service != NULL && reqh != NULL &&
 		service->rs_sm.sm_state == M0_RST_INITIALISING);
@@ -425,10 +389,6 @@ M0_INTERNAL void m0_reqh_service_init(struct m0_reqh_service *service,
 	m0_reqh_svc_tlink_init(service);
 	m0_mutex_init(&service->rs_mutex);
 	m0_chan_init(&service->rs_rev_conn_wait, &service->rs_mutex);
-	//rmach = m0_reqh_rpc_mach_tlist_head(&reqh->rh_rpc_machines);
-	//M0_ASSERT(rmach != NULL);
-	ep = "lnet:0@lo:12345:34:1";//m0_rpc_machine_ep(rmach);
-	m0_rpc_service_alloc_and_init(&reqh_rpc_svct, ep, &uuid1, &rpcsvc);
 	reqh_service_state_set(service, M0_RST_INITIALISED);
 
 	/** @todo: Need to pass the service uuid "hi" & "low"
@@ -441,7 +401,8 @@ M0_INTERNAL void m0_reqh_service_init(struct m0_reqh_service *service,
 				 0, 0);
 	else /** This happens in UT, where no ADDB stob is specified */
 		M0_ADDB_CTX_INIT(&m0_addb_gmc, &service->rs_addb_ctx,
-				 serv_addb_ct, &reqh->rh_addb_ctx,
+				 serv_addb_ct,
+				 &reqh->rh_addb_ctx,
 				 0, 0);
 
 	M0_POST(m0_reqh_service_invariant(service));
-- 
1.8.3.2

