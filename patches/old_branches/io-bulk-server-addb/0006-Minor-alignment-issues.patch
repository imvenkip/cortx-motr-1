From ee00fc2b0fd0ca87b49f923b5400a0e5f66c47bc Mon Sep 17 00:00:00 2001
From: Rajanikant Chirmade <rajanikant_chirmade@xyratex.com>
Date: Wed, 11 Apr 2012 16:32:48 +0530
Subject: [PATCH 06/11] - Minor alignment issues. - Fix for ADDB messages in
 new UT.

---
 addb/ut/addb.c      |  4 ----
 ioservice/io_foms.c | 34 +++++++++++++++++-----------------
 2 files changed, 17 insertions(+), 21 deletions(-)

diff --git a/addb/ut/addb.c b/addb/ut/addb.c
index e5ec7e3..25e68fc 100644
--- a/addb/ut/addb.c
+++ b/addb/ut/addb.c
@@ -86,8 +86,6 @@ static void test_addb_var_msg_add(void)
 
 	c2_addb_ctx_init(&addb_ut_ctx, &c2_addb_ut_ctx, &c2_addb_global_ctx);
 
-	c2_addb_choose_default_level_console(AEL_NONE);
-
 	msg_size = c2_addb_var_msg_add(&addb_ut_ctx, &c2_addb_ut_loc, addb_msg,
 				       ADDB_UT_VAR_MSG_SIZE, "%s", message);
 
@@ -101,8 +99,6 @@ static void test_addb_var_msg_add(void)
 
 	C2_UT_ASSERT(msg_size > ADDB_UT_VAR_MSG_SIZE
 		     && strlen(addb_msg) == ADDB_UT_VAR_MSG_SIZE-1);
-
-	c2_addb_choose_default_level_console(AEL_WARN);
 }
 
 const struct c2_test_suite addb_ut = {
diff --git a/ioservice/io_foms.c b/ioservice/io_foms.c
index edbd72b..f89382c 100644
--- a/ioservice/io_foms.c
+++ b/ioservice/io_foms.c
@@ -565,9 +565,9 @@
 #define IOSERVICE_NAME "ioservice"
 
 enum {
-	IO_FOM_ADDB_MSG_SMALL_SIZE  = 64,
-	IO_FOM_ADDB_MSG_MEDIUM_SIZE = 128,
-	IO_FOM_ADDB_MSG_LARGE_SIZE  = 256,
+	ADDB_MSG_SMALL_SIZE  = 64,
+	ADDB_MSG_MEDIUM_SIZE = 128,
+	ADDB_MSG_LARGE_SIZE  = 256,
 };
 
 C2_TL_DESCR_DEFINE(stobio, "STOB I/O", static, struct c2_stob_io_desc,
@@ -1045,7 +1045,7 @@ int c2_io_fom_cob_rw_create(struct c2_fop *fop, struct c2_fom **out)
         struct c2_fop_cob_rw    *rwfop;
         const char              *fom_type_string;
         c2_bcount_t              size;
-	char                     addb_msg[IO_FOM_ADDB_MSG_MEDIUM_SIZE];
+	char                     addb_msg[ADDB_MSG_MEDIUM_SIZE];
 
         C2_PRE(fop != NULL);
         C2_PRE(c2_is_io_fop(fop));
@@ -1095,7 +1095,7 @@ int c2_io_fom_cob_rw_create(struct c2_fop *fop, struct c2_fom **out)
 	fom_type_string = c2_is_read_fop(fop) ? "I/O READ" : "I/O WRITE";
         size = io_fom_cob_rw_indexvec_size(fop);
 	c2_addb_var_msg_add(&fom->fo_fop->f_addb, &io_fom_addb_loc,
-			    addb_msg, IO_FOM_ADDB_MSG_MEDIUM_SIZE,
+			    addb_msg, ADDB_MSG_MEDIUM_SIZE,
 			    "FOM: created/type=%s, fid=%lu:%lu, ndesc=%d, "
 			    "size=%d", fom_type_string,
 			    rwfop->crw_fid.f_seq, rwfop->crw_fid.f_oid,
@@ -1126,7 +1126,7 @@ static int io_fom_cob_rw_acquire_net_buffer(struct c2_fom *fom)
         struct c2_fop                *fop;
         struct c2_io_fom_cob_rw      *fom_obj = NULL;
         struct c2_net_transfer_mc     tm;
-	char                          addb_msg[IO_FOM_ADDB_MSG_SMALL_SIZE];
+	char                          addb_msg[ADDB_MSG_SMALL_SIZE];
 
         C2_PRE(fom != NULL);
         C2_PRE(c2_is_io_fop(fom->fo_fop));
@@ -1227,7 +1227,7 @@ static int io_fom_cob_rw_acquire_net_buffer(struct c2_fom *fom)
 
         fom_obj->fcrw_batch_size = acquired_net_bufs;
 	c2_addb_var_msg_add(&fom->fo_fop->f_addb, &io_fom_addb_loc,
-			    addb_msg, IO_FOM_ADDB_MSG_SMALL_SIZE,
+			    addb_msg, ADDB_MSG_SMALL_SIZE,
 			    "FOM: net_buffs_acquire/batch_size=%d\n",
 			    fom_obj->fcrw_batch_size);
         return FSO_AGAIN;
@@ -1253,7 +1253,7 @@ static int io_fom_cob_rw_release_net_buffer(struct c2_fom *fom)
         struct c2_fop                  *fop;
         struct c2_io_fom_cob_rw        *fom_obj = NULL;
         struct c2_net_transfer_mc       tm;
-	char                            addb_msg[IO_FOM_ADDB_MSG_SMALL_SIZE];
+	char                            addb_msg[ADDB_MSG_SMALL_SIZE];
 
 
         C2_PRE(fom != NULL);
@@ -1287,7 +1287,7 @@ static int io_fom_cob_rw_release_net_buffer(struct c2_fom *fom)
 
         fom_obj->fcrw_batch_size = acquired_net_bufs;
 	c2_addb_var_msg_add(&fom->fo_fop->f_addb, &io_fom_addb_loc,
-			    addb_msg, IO_FOM_ADDB_MSG_SMALL_SIZE,
+			    addb_msg, ADDB_MSG_SMALL_SIZE,
 			    "FOM: net_buffs_release/batch_size=%d\n",
 			    fom_obj->fcrw_batch_size);
 
@@ -1320,7 +1320,7 @@ static int io_fom_cob_rw_initiate_zero_copy(struct c2_fom *fom)
         struct c2_net_buf_desc    *net_desc;
         struct c2_net_domain      *dom;
         uint32_t                   buffers_added = 0;
-	char                       addb_msg[IO_FOM_ADDB_MSG_SMALL_SIZE];
+	char                       addb_msg[ADDB_MSG_SMALL_SIZE];
 
         C2_PRE(fom != NULL);
         C2_PRE(c2_is_io_fop(fom->fo_fop));
@@ -1397,7 +1397,7 @@ static int io_fom_cob_rw_initiate_zero_copy(struct c2_fom *fom)
         }
 
 	c2_addb_var_msg_add(&fom->fo_fop->f_addb, &io_fom_addb_loc,
-			    addb_msg, IO_FOM_ADDB_MSG_SMALL_SIZE,
+			    addb_msg, ADDB_MSG_SMALL_SIZE,
 			    "FOM: zero_copy_initiated/batch_size=%d\n",
 			    fom_obj->fcrw_batch_size);
         return FSO_WAIT;
@@ -1476,7 +1476,7 @@ static int io_fom_cob_rw_io_launch(struct c2_fom *fom)
 	struct c2_io_indexvec    wire_ivec;
 	struct c2_stob_domain	*fom_stdom;
 	struct c2_fop_file_fid	*ffid;
-	char                     addb_msg[IO_FOM_ADDB_MSG_SMALL_SIZE];
+	char                     addb_msg[ADDB_MSG_SMALL_SIZE];
 
 	C2_PRE(fom != NULL);
         C2_PRE(c2_is_io_fop(fom->fo_fop));
@@ -1636,7 +1636,7 @@ static int io_fom_cob_rw_io_launch(struct c2_fom *fom)
                 c2_mutex_unlock(&fom_obj->fcrw_stio_mutex);
 
 		c2_addb_var_msg_add(&fom->fo_fop->f_addb, &io_fom_addb_loc,
-				    addb_msg, IO_FOM_ADDB_MSG_SMALL_SIZE,
+				    addb_msg, ADDB_MSG_SMALL_SIZE,
 				    "FOM: stob_io_launched/n_iocount=%d\n",
 				    fom_obj->fcrw_num_stobio_launched);
 
@@ -1733,7 +1733,7 @@ static int c2_io_fom_cob_rw_state(struct c2_fom *fom)
         int                                      rc = 0;
         struct c2_io_fom_cob_rw                 *fom_obj;
         struct c2_io_fom_cob_rw_state_transition st;
-	char                                     addb_msg[IO_FOM_ADDB_MSG_SMALL_SIZE];
+	char                                     addb_msg[ADDB_MSG_SMALL_SIZE];
 
         C2_PRE(fom != NULL);
         C2_PRE(c2_is_io_fop(fom->fo_fop));
@@ -1764,7 +1764,7 @@ static int c2_io_fom_cob_rw_state(struct c2_fom *fom)
                 rwrep->rwr_rc = fom->fo_rc;
                 rwrep->rwr_count = fom_obj->fcrw_bytes_transfered;
 		c2_addb_var_msg_add(&fom->fo_fop->f_addb, &io_fom_addb_loc,
-				    addb_msg, IO_FOM_ADDB_MSG_SMALL_SIZE,
+				    addb_msg, ADDB_MSG_SMALL_SIZE,
 				    "FOM: set reply/io_count=%lu, rc=%d\n",
 				    rwrep->rwr_count, rwrep->rwr_rc);
                 return rc;
@@ -1794,7 +1794,7 @@ static void c2_io_fom_cob_rw_fini(struct c2_fom *fom)
         struct c2_net_buffer      *nb = NULL;
         struct c2_stob_io_desc    *stio_desc = NULL;
         struct c2_net_transfer_mc  tm;
-	char                       addb_msg[IO_FOM_ADDB_MSG_SMALL_SIZE];
+	char                       addb_msg[ADDB_MSG_SMALL_SIZE];
 
         C2_PRE(fom != NULL);
 
@@ -1841,7 +1841,7 @@ static void c2_io_fom_cob_rw_fini(struct c2_fom *fom)
         c2_mutex_fini(&fom_obj->fcrw_stio_mutex);
 
 	c2_addb_var_msg_add(&fom->fo_fop->f_addb, &io_fom_addb_loc,
-			    addb_msg, IO_FOM_ADDB_MSG_SMALL_SIZE,
+			    addb_msg, ADDB_MSG_SMALL_SIZE,
 			    "FOM: finished/size=%lu, rc=%d",
 			    fom_obj->fcrw_bytes_transfered, fom->fo_rc);
         c2_fom_fini(fom);
-- 
1.8.3.2

