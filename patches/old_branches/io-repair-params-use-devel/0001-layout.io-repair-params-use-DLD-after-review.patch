From b67486951f90f5814c377a76ec7897ae2f38ca25 Mon Sep 17 00:00:00 2001
From: Hua Huang <hua_huang@xyratex.com>
Date: Mon, 15 Oct 2012 12:32:32 +0800
Subject: [PATCH 01/10] layout.io-repair-params-use DLD after review

---
 c2t1fs/linux_kernel/file.c | 205 +++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 205 insertions(+)

diff --git a/c2t1fs/linux_kernel/file.c b/c2t1fs/linux_kernel/file.c
index c605b15..4096e5e 100644
--- a/c2t1fs/linux_kernel/file.c
+++ b/c2t1fs/linux_kernel/file.c
@@ -41,6 +41,211 @@
 #define C2_TRACE_SUBSYSTEM C2_TRACE_SUBSYS_C2T1FS
 #include "lib/trace.h"      /* C2_LOG, C2_ENTRY */
 
+/**
+   @page iosnsrepair I/O with SNS and SNS repair.
+
+   - @ref iosnsrepair-ovw
+   - @ref iosnsrepair-def
+   - @ref iosnsrepair-req
+   - @ref iosnsrepair-depends
+   - @ref iosnsrepair-highlights
+   - @ref iosnsrepair-lspec
+      - @ref iosnsrepair-lspec-comps
+      - @ref iosnsrepair-lspec-state
+      - @ref iosnsrepair-lspec-thread
+      - @ref iosnsrepair-lspec-numa
+   - @ref iosnsrepair-conformance
+   - @ref iosnsrepair-ut
+   - @ref iosnsrepair-st
+   - @ref iosnsrepair-O
+   - @ref iosnsrepair-ref
+   - @ref iosnsrepair-impl-plan
+
+
+   <hr>
+   @section iosnsrepair-ovw Overview
+   @note This DLD is written by Huang Hua (hua_huang@xyratex.com), 2012/10/10.
+
+   This DLD describes how the c2t1fs does I/O with SNS in normal condition, in
+   de-graded mode, and when SNS repair is completed.
+
+   A file (or called global object) in Colibri is stored in multiple component
+   objects, spreading on multiple servers. This is usually also called Server
+   Network Striping, a.k.a SNS. Layout is used to describe the mapping of a
+   file to its objects. A read request to some specific offset within a file
+   will be directed to some parts of its component objects, according to its
+   layout. A write request does the same. Some files don't store redundancy
+   information in the file system, like RAID0. But in Colibri, the default and
+   typical mode is to have files with redundancy data stored somewhere. So the
+   write requests may include updates to redundancy data.
+
+   In case of node or device failure, lost data may be re-constructed from
+   redundancy information. A read request to lost data need to satisfied by
+   re-constructing data from its parity data. When SNS repair is completed
+   for the failed node or device, a read or write request can be served by
+   re-directing to its spare unit.
+
+   Write requests to failed node or device should be handled in another way,
+   cooperated with SNS repair and NBA (Non-Blocking Availability). Now it is
+   out of the scope of this DLD.
+
+   Clients keep a cache of Failure Vectors of a pool. With failure vector
+   information, clients know whether to re-construct data from other data units
+   and parity units, or read from spare units (which contains repaired data).
+   The detailed will be discussed in the following logical specification.
+
+   <hr>
+   @section iosnsrepair-def Definitions
+   Previously defined terms:
+   - <b>layout</b> A mapping from Colibri file (global object) to component
+         objects. See @ref layout for more details.
+   - <b>SNS</b> Server Network Striping. See @ref SNS for more details.
+
+   <hr>
+   @section iosnsrepair-req Requirements
+   - @b R.iosnsrepair.read Read request should be served in normal case, during
+        SNS repair, and after SNS repair completes.
+   - @b R.iosnsrepair.write Write request should be served in normal case, and
+        after SNS repair completes.
+   - @b R.iosnsrepair.code Code should be re-used and shared with other c2t1fs
+        client features, especially the rmw feature.
+
+   <hr>
+   @section iosnsrepair-depends Dependencies
+   The feature depends on the following features:
+   - layout.
+   - SNS and failure vector.
+
+   The implementation of this feature may depend on the c2t1fs read-modify-write
+   (rmw) feature, which is under development.
+
+   <hr>
+   @section iosnsrepair-highlights Design Highlights
+   C2t1fs read-modify-write (rmw) feature has some similar concepts with this
+   feature. The same code path will be used to serve both the features.
+
+   <hr>
+   @section iosnsrepair-lspec Logical Specification
+
+   - @ref iosnsrepair-lspec-comps
+   - @ref iosnsrepair-lspec-state
+   - @ref iosnsrepair-lspec-thread
+   - @ref iosnsrepair-lspec-numa
+
+   @subsection iosnsrepair-lspec-comps Component Overview
+   When an I/O request (read, write, or other) comes to client, c2t1fs first
+   checks its cached failure vector to see the status of pool nodes and devices.
+   A read or write request will span some node(s) or device(s). If these node(s)
+   or device(s) are ONLINE, this is the normal case. If some node or device is
+   FAILED or RECOVERING or RECOVERED, special action is taken to serve this
+   request. The following table illustrate the actions:
+
+                           Table 1 I/O request handling
+   -----------------------------------------------------------------------------
+   |      |  ONLINE    | read from the target device                           |
+   |      |------------|-------------------------------------------------------|
+   |      |  OFFLINE   | return -EIO ?                                         |
+   |      |------------|-------------------------------------------------------|
+   | read |  FAILED    | read from other data unit(s) and parity unit(s) and   |
+   |      |  RECOVERING| re-construct the data                                 |
+   |      |------------|-------------------------------------------------------|
+   |      |  RECOVERED | read from the recovered spare unit                    |
+   |------|------------|-------------------------------------------------------|
+   |      |  ONLINE    | write to the target device                            |
+   |      |------------|-------------------------------------------------------|
+   |      |  OFFLINE   | return -EIO ?                                         |
+   |      |------------|-------------------------------------------------------|
+   |write |  FAILED    | write to spare unit? How to tell SNS these data?      |
+   |      |------------|-------------------------------------------------------|
+   |      |  RECOVERING| block the request and wait? -EAGAIN? -EIO? @TODO XXX  |
+   |      |------------|-------------------------------------------------------|
+   |      |  RECOVERED | write to the recovered spare unit                     |
+   ----------------------------------------------------------------------------|
+
+   Question: When a device changes its state from RECOVERED to ONLINE, what to
+             do with the I/O request?
+
+   A read request target for FAILED/RECOVERING device is handled with the
+   following steps:
+   (1) Calculate its parity group, find out related data units and parity units.
+       This needs help from the file's layout.
+   (2) Send read request to necessary data units and/or parity units
+       asynchronously. The read request itself is blocked and waiting for those
+       replies. For a N+K+K (N data units, K parity units, K spare units) layout,
+       N units of data or parity units are needed to re-compute the lost data.
+   (3) When those read replies come, ASTs will be called to re-compute the data
+       iteratively. Temporary result is stored in the buffer of the original
+       read request. This request request and its reply can be released (no
+       cache at this moment).
+   (4) When all read replies come back, and the data is finally re-computed,
+       the original read request has its data, and can be returned to user.
+
+   The same thread used by the rmw will be used here to run the ASTs. The basic
+   algorithm is similar in these two features. No new data structures are
+   introduced by this feature.
+
+   Pool's failure vector is cached on clients. Every I/O request to ioservices
+   is tagged with client known failure vector version, and this version is
+   checked against the lastest one by ioservices. If the client known version
+   is stale, new version and failure vector updates will be returnen back to
+   clients and clients need to apply this update and do I/O request according
+   to the latest version. Please see @ref pool and @ref poolmach for more
+   details.
+
+   @subsection iosnsrepair-lspec-state State Specification
+   N/A
+
+   @subsection iosnsrepair-lspec-thread Threading and Concurrency Model
+   See @ref rmw_io_dld for more information.
+
+   @subsection iosnsrepair-lspec-numa NUMA optimizations
+   See @ref rmw_io_dld for more information.
+
+   @section iosnsrepair-conformance Conformance
+   - @b I.iosnsrepair.read Read request handling is described in logic
+        specification. Every node/device state are covered.
+   - @b I.iosnsrepair.read Write request handling is described in logic
+        specification. Every node/device state are covered.
+   - @b I.iosnsrepair.code In logic specification, the design says the same
+        code and algorithm will be used to handle io request in SNS repair
+        and rmw.
+
+   <hr>
+   @section iosnsrepair-ut Unit Tests
+   Unit tests for read and write requests in different devices state are
+   needed. These states includes: ONLINE, OFFLINE, FAILED, RECOVERING,
+   RECOVERED.
+
+   <hr>
+   @section iosnsrepair-st System Tests
+   System tests are needed to verify c2t1fs can serve read/write properly
+   when node/device is in various states, and changes its state from one
+   to another. For example:
+   - read/write requests in normal case.
+   - read/write requests when a device changes from ONLINE to FAILED.
+   - read/write requests when a device changes from FAILED to RECOVERING.
+   - read/write requests when a device changes from RECOVERING to RECOVERED.
+
+   <hr>
+   @section iosnsrepair-O Analysis
+   See @ref rmw for more information.
+
+   <hr>
+   @section iosnsrepair-ref References
+
+   - <a href="https://docs.google.com/a/xyratex.com/document/d/1vgs3jeskGKApvE016XxwXAxGyUoNxbKudTTNRSoL-Vg/edit">
+HLD of SNS repair</a>,
+   - @ref rmw_io_dld c2t1fs client read-modify-write DLD
+   - @ref layout Layout
+   - @ref pool Pool and @ref poolmach Pool Machine.
+
+   <hr>
+   @section iosnsrepair-impl-plan Implementation Plan
+   The code implementation depends on the c2t1fs rmw which is under development.
+   The rmw is in code inspection phase right now. When this DLD is approved,
+   code maybe can start.
+
+ */
 
 struct io_mem_stats iommstats;
 
-- 
1.8.3.2

