From 2dde18b10f88e16ccbf50965739a15d891e9fb0b Mon Sep 17 00:00:00 2001
From: Nachiket Sahasrabuddhe <nachiket_sahasrabuddhe@xyratex.com>
Date: Mon, 6 May 2013 14:39:15 +0530
Subject: [PATCH 6/6] cookie_replacing_senderID

-Made changes suggested by Amit.
---
 lib/m0lib.c        |  2 +-
 rpc/conn.c         | 14 +++++++-------
 rpc/item.c         |  2 ++
 rpc/session_foms.c |  2 +-
 rpc/slot.c         |  3 +--
 5 files changed, 12 insertions(+), 11 deletions(-)

diff --git a/lib/m0lib.c b/lib/m0lib.c
index 834afde..e83f758 100644
--- a/lib/m0lib.c
+++ b/lib/m0lib.c
@@ -32,9 +32,9 @@ static void xc_types_init(void)
 
 static void xc_types_fini(void)
 {
+	m0_xc_cookie_fini();
 	m0_xc_buf_fini();
 	m0_xc_vec_fini();
-	m0_xc_cookie_fini();
 }
 
 M0_INTERNAL int libm0_init(void)
diff --git a/rpc/conn.c b/rpc/conn.c
index 81e3892..ce21d6c 100644
--- a/rpc/conn.c
+++ b/rpc/conn.c
@@ -911,11 +911,11 @@ M0_INTERNAL int m0_rpc_conn_cob_create(struct m0_cob_domain *dom,
 	char           name[SESSION_COB_MAX_NAME_LEN];
 	int            rc;
 
-	M0_ENTRY("cob_dom: %p, sender_id: %llu", dom,
-		 (unsigned long long)sender_id);
+	M0_ENTRY("cob_dom: %p, gen_count: %llu", dom,
+		 (unsigned long long)gen_count);
 	M0_PRE(dom != NULL && out != NULL);
 
-	sprintf(name, conn_cob_name_fmt, (unsigned long)sender_id);
+	sprintf(name, conn_cob_name_fmt, (unsigned long)gen_count);
 	*out = NULL;
 
 	rc = m0_rpc_cob_lookup_helper(dom, NULL, M0_COB_SESSIONS_NAME,
@@ -944,8 +944,8 @@ static int conn_persistent_state_create(struct m0_cob_domain *dom,
 	struct m0_cob *slot0_cob    = NULL;
 	int            rc;
 
-	M0_ENTRY("cob_dom: %p, sender_id: %llu", dom,
-		 (unsigned long long)sender_id);
+	M0_ENTRY("cob_dom: %p, gen_count: %llu", dom,
+		 (unsigned long long)gen_count);
 	*conn_cob_out = *session0_cob_out = *slot0_cob_out = NULL;
 
 	rc = m0_rpc_conn_cob_create(dom, gen_count, &conn_cob, tx) ?:
@@ -978,8 +978,8 @@ static int conn_persistent_state_attach(struct m0_rpc_conn *conn,
 	struct m0_cob_domain  *dom;
 	int                    rc;
 
-	M0_ENTRY("conn: %p, sender_id: %llu", conn,
-		 (unsigned long long)sender_id);
+	M0_ENTRY("conn: %p, gen_count: %llu", conn,
+		 (unsigned long long)gen_count);
 	M0_PRE(conn != NULL && m0_rpc_conn_invariant(conn) &&
 	       conn_state(conn) == M0_RPC_CONN_CONNECTING);
 
diff --git a/rpc/item.c b/rpc/item.c
index 704c646..421d0f3 100644
--- a/rpc/item.c
+++ b/rpc/item.c
@@ -21,6 +21,7 @@
  */
 
 #define M0_TRACE_SUBSYSTEM M0_TRACE_SUBSYS_RPC
+#include "lib/cookie.h"
 #include "lib/trace.h"
 #include "lib/tlist.h"
 #include "lib/rwlock.h"
@@ -56,6 +57,7 @@ M0_TL_DEFINE(rit, static, struct m0_rpc_item_type);
 static const struct m0_rpc_onwire_slot_ref invalid_slot_ref = {
 	.osr_slot_id    = SLOT_ID_INVALID,
 	.osr_session_id = SESSION_ID_INVALID,
+	.osr_cookie     = M0_COOKIE_NULL,
 };
 
 /** Global rpc item types list. */
diff --git a/rpc/session_foms.c b/rpc/session_foms.c
index 76b5c89..5b9fd81 100644
--- a/rpc/session_foms.c
+++ b/rpc/session_foms.c
@@ -203,7 +203,7 @@ M0_INTERNAL int m0_rpc_fom_conn_establish_tick(struct m0_fom *fom)
 
 			item->ri_session = session0;
 			m0_rpc_slot_item_add_internal(slot, item);
-
+			M0_ASSERT(m0_cookie_is_null(item->ri_slot_refs[0].sr_ow.osr_cookie));
 			if (!m0_cookie_is_null(request->rce_cookie))
 				conn->c_cookie = request->rce_cookie;
 			M0_ASSERT(conn_state(conn) == M0_RPC_CONN_ACTIVE);
diff --git a/rpc/slot.c b/rpc/slot.c
index 382c915..f6992dc 100644
--- a/rpc/slot.c
+++ b/rpc/slot.c
@@ -774,8 +774,7 @@ find_conn(const struct m0_rpc_machine *machine,
 			&machine->rm_outgoing_conns;
 
 	sref = &item->ri_slot_refs[0];
-	conn = m0_cookie_of(&sref->sr_ow.osr_cookie,
-			    struct m0_rpc_conn,
+	conn = m0_cookie_of(&sref->sr_ow.osr_cookie, struct m0_rpc_conn,
 			    c_generation);
 	if (conn == NULL) {
 		m0_tl_for(rpc_conn, conn_list, conn) {
-- 
1.8.3.2

