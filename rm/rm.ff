/* -*- C -*- */
/*
 * COPYRIGHT 2011 XYRATEX TECHNOLOGY LIMITED
 *
 * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
 * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
 * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
 * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
 * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
 * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
 * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
 *
 * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
 * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
 * http://www.xyratex.com/contact
 *
 * Original author: Rajesh Bhalerao <Rajesh_Bhalerao@xyratex.com>
 * Original creation date: 07/04/2011
 */

/**
   @addtogroup rm
   @{
 */

/** @file rm.ff
 *
 * This file defines RM-fops needed for RM-generic layer. All the layers using
 * RM will have to define their own FOPs to fetch resource data. RM-generic FOPs
 * provide a facility for resource rights management and to fetch small resource
 * data.
 *
 * <b>RM fop formats</b>
 *
 * Various RM data-structures have to be located based on information stored in
 * fops:
 *
 *     - resource type: identified by 64-bit identifier
 *       (c2_rm_resource_type::rt_id),
 *
 *     - resource: resource information is never passed separately, but only to
 *       identify a resource owner,
 *
 *     - owner: when a first request to a remote resource owner is made, the
 *       owner is identified by the resource
 *       (c2_rm_resource_type_ops::rto_encode()) it is a responsibility of the
 *       remote RM to locate the owner. In the subsequent fops for the same
 *       owner, it is identified by a 128-bit cookie (c2_rm_cookie),
 *
 *     - right: identified by an opaque byte array
 *       (c2_rm_resource_ops::rop_right_decode(),
 *       c2_rm_right_ops::rro_encode()). A 0-sized array in REVOKE and CANCEL
 *       fops is interpreted to mean "whole right previously granted",
 *
 *     - loan: identified by a 128-bit cookie (c2_rm_cookie).
 *
 */

DEF(c2_fop_rm_cookie, RECORD,
    _(co_hi, U64),
    _(co_lo, U64));

DEF(c2_fop_rm_opaque, SEQUENCE,
    _(op_nr, U32),
    _(op_bytes, BYTE));

DEF(c2_fop_rm_owner, RECORD,
    _(ow_cookie, c2_fop_rm_cookie),
    _(ow_resource, c2_fop_rm_opaque));

DEF(c2_fop_rm_right, RECORD,
    _(ri_opaque, c2_fop_rm_opaque));

DEF(c2_fop_rm_borrow, RECORD,
    _(bo_rtype, U64),
    _(bo_owner, c2_fop_rm_owner),
    _(bo_right, c2_fop_rm_right),
    _(bo_loan, c2_fop_rm_cookie),
    _(bo_flags, U64));

DEF(c2_fop_rm_borrow_rep, RECORD,
    _(br_rc, U32),
    _(bo_owner, c2_fop_rm_owner),
    _(bo_loan, c2_fop_rm_cookie),
    _(bo_right, c2_fop_rm_right),
    _(bo_lvb, c2_fop_rm_opaque));

DEF(c2_fop_rm_canoke, RECORD,
    _(cr_dir, BYTE),
    _(cr_loan, c2_fop_rm_cookie),
    _(cr_right, c2_fop_rm_right));

DEF(c2_fop_rm_canoke_rep, RECORD,
    _(re_rc, U32),
    _(re_right, c2_fop_rm_right));

/** @} end of rm group */

/*
 *  Local variables:
 *  c-indentation-style: "K&R"
 *  c-basic-offset: 8
 *  tab-width: 8
 *  fill-column: 80
 *  scroll-step: 1
 *  End:
 */
