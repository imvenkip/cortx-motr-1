#!/usr/bin/env bash

# exit immediately if one the commands exits with a non-zero status
set -e

# constants
readonly PROG_NAME=$(basename $0)

# global variables, which can be overriden in /etc/sysconfig/mero
MERO_GENDERS_CONF=/etc/mero/genders

# service local variables
mero_exec_dir=/usr/libexec/mero
user_config=/etc/sysconfig/mero
kernel_config=/etc/sysconfig/mero-kernel
service_funcs=$mero_exec_dir/mero-service.functions


m0_mkfs()
{
    local service=$1

    [[ -n $service ]] || m0_exit "usage: $PROG_NAME <SERVICE>"

    local node_uuid=${MERO_NODE_UUID:-$(m0_genders_value_of m0_uuid)}
    local be_opts

    if [[ $service =~ ^ios.* ]] ; then
        be_opts+=" -z ${MERO_M0D_IOS_BESEG_SIZE:-$default_m0d_ios_beseg_size}"
    else
        local be_segsize=${MERO_M0D_BESEG_SIZE:-$(m0_genders_value_of m0_be_segment_size)}
        be_opts+=" -z ${be_segsize:-$default_m0d_beseg_size}"
    fi

    if [[ -n $MERO_M0D_BELOG_SIZE ]] ; then
        be_opts+=" -V $MERO_M0D_BELOG_SIZE"
    elif m0_genders_has_variable m0_be_log_size ; then
        be_opts+=" -V $(m0_genders_value_of m0_be_log_size)"
    fi

    $mero_exec_dir/mero-server $service m0mkfs "-F -u $node_uuid $be_opts"
}

source $service_funcs

[[ -r $kernel_config ]] && source $kernel_config
[[ -r $user_config   ]] && source $user_config

if [[ -n $1 ]] ; then
    if [[ ${1,,*} =~ ^(0x)?[0-9a-f]+:(0x)?[0-9a-f]+$ ]] ; then
        service=m0d-$1
    else
        service=$1
    fi
    m0_mkfs $service
else
    ha_is_started=false
    confd_is_started=false
    all_services=$(m0_get_services)
    services=$(echo $all_services | sed -r 's/ha|confd//g')

    # check if there are 'ha' and 'confd' services, we need to start them first,
    # but only if there are other services on this node which require mkfs
    if [[ $services != $all_services ]]
    then
        if [[ $all_services == *ha* ]] ; then
            systemctl start mero-mkfs@ha.service
            if [[ -n $services ]] ; then
                systemctl start mero-server-ha.service
                ha_is_started=true
            fi
        fi

        if [[ $all_services == *confd* ]] ; then
            systemctl start mero-mkfs@confd.service
            if [[ -n $services ]] ; then
                systemctl start mero-server-confd.service
                confd_is_started=true
            fi
        fi
    fi

    for s in $services; do
        systemctl start mero-mkfs@${s}.service
    done

    if $confd_is_started ; then
        systemctl stop mero-server-confd.service
        if systemctl -q is-active mero-trace@confd.service ; then
            systemctl stop mero-trace@confd.service
        fi
    fi

    if $ha_is_started ; then
        systemctl stop mero-server-ha.service
        if systemctl -q is-active mero-trace@ha.service ; then
            systemctl stop mero-trace@ha.service
        fi
    fi

    if systemctl -q is-active mero-kernel.service ; then
        systemctl stop mero-kernel.service
    fi
fi
