#!/bin/bash

# exit immediately if one the commands exits with a non-zero status
set -e

# constants
readonly PROG_NAME=$(basename $0)

# global variables, which can be overriden in /etc/sysconfig/mero
MERO_GENDERS_CONF=/etc/mero/genders
MERO_CONFD_CONFIG=/etc/mero/conf.xc

# service local variables
user_config=/etc/sysconfig/mero
service_funcs=/usr/libexec/mero/mero-service.functions

m0_server()
{
    local service=$1
    local cmd=${2:-m0d}
    local cmd_opts="$3"

    source $service_funcs

    [[ -n $service ]] || m0_exit "usage: $PROG_NAME <SERVICE>"

    [[ -r $user_config ]] && source $user_config

    [[ -n $MERO_M0D_DEBUGGER ]] && export M0_DEBUGGER=$MERO_M0D_DEBUGGER

    local service_dir=$(m0_get_m0d_data_dir_for $service)
    if [[ $MERO_M0D_REMOVE_SERVICE_DIR == true ]] && [[ -d $service_dir ]] ; then
        rm -rf "$service_dir"
    fi
    [[ ! -d $service_dir ]] && mkdir -p "$service_dir"
    cd "$service_dir"

    MERO_M0D_OPTS=${MERO_M0D_OPTS:-$(m0_get_core_params)}

    local stob_type='-T ad'
    local stob_opts
    local proc_fid="<$(m0_get_proc_fid_for $service)>"
    local confd_global_ep=${MERO_CONFD_EP:-$(m0_get_global_ep_of confd)}
    local confd_ep="${MERO_CONFD_LOCAL_EP:-$confd_global_ep}"
    local conf=$MERO_CONFD_CONFIG

    case "$service" in
        mds*)
            ;;

        rms*)
            ;;

        ios*)  local disks_conf="/etc/mero/disks-$service.conf"
               if [[ -r $disks_conf ]]; then
                   stob_opts+=" -d $disks_conf"
               else
                   stob_opts+=' -U '
               fi
            ;;

        confd) stob_type='-T linux'
               if [[ ! -r $conf ]]; then
                   m0_build_local_conf > $conf
               fi

               if [[ -n $MERO_CONFD_LOCAL_EP ]]; then
                   cp $conf $service_dir/conf-local.xc
                   sed -i -e "s/$confd_global_ep/$confd_ep/g" $service_dir/conf-local.xc
                   MERO_M0D_OPTS+=" -c $service_dir/conf-local.xc"
               else
                   MERO_M0D_OPTS+=" -c $conf"
               fi
            ;;

        ha*)   stob_type='-T linux'
               unset m0d_services
            ;;

        *) m0_exit "Failed to start unknown service '$service'," \
                   " available services are 'mds*' and 'ios*'"
            ;;
    esac
    local service_ep="lnet:$(m0_get_ep_of $service)"

    if [[ $service == confd ]]; then
        service_ep="lnet:$confd_ep"
    else
        MERO_M0D_OPTS+=" -C $confd_ep"
    fi

    local binary=$(m0_path_to $cmd)
    if [[ $cmd == m0mkfs ]]; then
        service_ep="lnet:$(m0_get_mkfs_ep_of $service)"
    fi

    # enable core dumps
    ulimit -c unlimited

    # show actual exec commands in log file
    set -x

    exec $binary -e $service_ep -f $proc_fid $stob_type $MERO_M0D_OPTS \
                    $stob_opts $MERO_M0D_EXTRA_OPTS $cmd_opts
}


m0_server "$@"
