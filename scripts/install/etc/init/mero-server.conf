description "Mero service"
author "Xyratex Technology Limited - http://www.xyratex.com/contact"

#usage 'SERVICE=<mds|ios\d\d> \
#       EP=<this service's endpoint> \
#       MDS_EP=<mdservice endpoint> \
#       IOS_EP_LIST=<comma-separted list of ioservice endpoints>'

instance ${SERVICE}

# delay between SIGTERM and SIGKILL, when stopping the service
kill timeout 30

# global variables, which can be overriden in /etc/sysconfig/mero
env MERO_M0D_OPTS='-r -p -T ad -D db -S stobs -A addb-stobs -w 4 -m 163840 -q 16'
env MERO_M0D_SERVICE_DATA_DIR=
env MERO_TRACED_M0D=no

# service local variables
env user_config=/etc/sysconfig/mero
env genders_config=/etc/mero/genders
env service_funcs=/usr/lib64/mero/mero-service.functions


script
    # TODO: just for debugging, remove when done
    exec 2>/var/log/mero-server-$SERVICE.log
    set -x

    source $service_funcs

    [ -r $user_config ] && source $user_config

    [ -n "$MERO_M0D_DEBUGGER" ] && export M0_DEBUGGER=$MERO_M0D_DEBUGGER

    case "$SERVICE" in
        mds) m0d_disks='-d /etc/mero/disks-mds.conf'
             m0d_services='-s mdservice -s rmservice -s addb -s stats'
            ;;

        ios*) m0d_disks='-d /etc/mero/disks-ios.conf'
              m0d_services='-s ioservice -s sns_repair -s sns_rebalance -s addb'
            ;;

        all-in-one)
              m0d_disks='-d /etc/mero/disks-all.conf'
              m0d_services='-s mdservice -s rmservice -s ioservice \
                            -s sns_repair -s sns_rebalance -s addb -s stats'
            ;;

        *) m0_exit "Failed to start unknown service '$SERVICE', available services are 'mds' and 'ios*'"
            ;;
    esac

    for ep in $(echo "$IOS_EP_LIST" | tr ',' '\n')
    do
        ios_eps="$ios_eps -i $ep"
    done

    service_dir=$(m0_get_m0d_data_dir_for $SERVICE)
    [ ! -d "$service_dir" ] && mkdir -p "$service_dir"
    cd $service_dir

    m0d=$(m0_path_to m0d)

    exec $m0d $MERO_M0D_OPTS $m0d_disks $m0d_services \
              -e $EP -G $MDS_EP -R $MDS_EP $ios_eps $MERO_M0D_EXTRA_OPTS
end script


post-start script
    # TODO: just for debugging, remove when done
    #exec 2>>/var/log/mero-server-$SERVICE.log
    #set -x

    [ -r $user_config ] && source $user_config

    if [ x$MERO_TRACED_M0D = xyes ] ; then
        start mero-trace TARGET=server-$SERVICE
    fi
end script


post-stop script
    # TODO: just for debugging, remove when done
    #exec 2>>/var/log/mero-server-$SERVICE.log
    #set -x

    [ -r $user_config ] && source $user_config

    if [ x$MERO_TRACED_M0D = xyes ] ; then
        stop mero-trace TARGET=server-$SERVICE
    fi
end script
