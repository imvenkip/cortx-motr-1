description "Mero service"
author "Xyratex Technology Limited - http://www.xyratex.com/contact"

#usage "[SERVICES=<space separated list of services to start>]"
#
#    allowed service names are 'mds', 'ios', 'ios01', 'ios02', etc.

# global variables, which can be overriden in /etc/sysconfig/mero
env MERO_M0D_LNET_NID=auto
env MERO_SERVICES='all-in-one'

# service local variables
env user_config=/etc/sysconfig/mero
env genders_config=/etc/mero/genders
env service_funcs=/usr/lib64/mero/mero-service.functions


pre-start script
    # TODO: just for debugging, remove when done
    #exec 2>/var/log/mero.log
    #set -x

    source $service_funcs

    [ -r $user_config ] && source $user_config

    if [ x$MERO_M0D_LNET_NID = xauto ] ; then
        MERO_M0D_LNET_NID=$(lctl list_nids | head -n1)
        [ -z $MERO_M0D_LNET_NID ] && \
            m0_exit 'Failed to auto-detect Lnet NID, please check that lnet service is running'
    fi

    services=${SERVICES:-$MERO_SERVICES}
    mds_ep=${MERO_MDS_EP:-lnet:$MERO_M0D_LNET_NID:12345:33:101}
    ios_services=$(echo $services | sed -r 's/mds|all-in-one//g')
    ios_eps=
    ios_tid=201

    case $services in
        *all-in-one*)
            [ $services != all-in-one ] && \
                m0_exit "Invalid services list: 'all-in-one' can't be used with other services"
            ios_eps=$mds_ep
            ;;
        mds)
            [ -z "$MERO_IOS_EP_LIST" ] && \
                m0_exit "Error: MERO_IOS_EP_LIST variable should be set in /etc/sysconfig/mero, in order to start only mds service"
            ;;
        *ios*)
            if ! echo $services | grep -q 'mds' ; then
                [ -z "$MERO_MDS_EP" ] && \
                    m0_exit "Error: MERO_MDS_EP variable should be set in /etc/sysconfig/mero, in order to start ios* services w/o mds"
            fi
            ;;
    esac

    for s in $ios_services; do
        ios_eps="${ios_eps} lnet:$MERO_M0D_LNET_NID:12345:33:$((ios_tid++))"
    done

    # comma-separated list of of IOS endpoints
    ios_ep_list=${MERO_IOS_EP_LIST:-$(echo $ios_eps | sed 's/ /,/g')}

    # set positional parameters to endpoints
    eval set -- "$mds_ep $ios_eps"

    for s in $services; do
        start mero-server SERVICE=$s EP=$1 MDS_EP=$mds_ep IOS_EP_LIST=$ios_ep_list
        shift
    done
end script


post-stop script
    # TODO: just for debugging, remove when done
    #exec 2>>/var/log/mero.log
    #set -x

    source $service_funcs

    [ -r $user_config ] && source $user_config

    services=${SERVICES:-$MERO_SERVICES}

    for s in $services; do
        stop mero-server SERVICE=$s
    done
end script
