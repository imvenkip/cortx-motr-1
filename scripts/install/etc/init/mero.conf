description "Mero service"
author "Xyratex Technology Limited - http://www.xyratex.com/contact"

#usage "[SERVICES=<space separated list of services to start>]"
#
#    allowed service names are 'singlenode', 'mds', 'ios', 'ios01', 'ios02', etc.

# global variables, which can be overriden in /etc/sysconfig/mero
env MERO_GENDERS_CONF=/etc/mero/genders

# service local variables
env user_config=/etc/sysconfig/mero
env service_funcs=/usr/libexec/mero/mero-service.functions


pre-start script
    exec 1>/var/log/mero.log 2>&1

    # TODO: just for debugging, remove when done
    #set -x

    source $service_funcs

    [ -r $user_config ] && source $user_config

    MERO_LNET_NID=$(m0_get_lnet_nid)

    services=$(m0_get_services)
    mds_ep=${MERO_MDS_EP:-$(m0_get_mds_ep)}
    confd_ep=${MERO_CONFD_EP:-$(m0_get_confd_ep)}
    ios_eps=${MERO_IOS_EPS:-$(m0_get_ios_eps)}

    case $services in
        *singlenode*)
            [ "$services" != "confd singlenode" ] && \
                m0_exit "Invalid services list: 'singlenode' can't be used" \
                        " with other services"
            ;;
        mds)
            [ -z "$ios_eps" ] && \
                m0_exit "Error: IOS endpoints should be set either in" \
                        " /etc/sysconfig/mero or in /etc/mero/genders," \
                        " in order to start only 'mds' service w/o 'ios'"
            ;;
        *ios*)
            [ -z "$mds_ep" ] && \
                m0_exit "Error: MDS endpoint should be set in either" \
                        " /etc/sysconfig/mero or in /etc/mero/genders," \
                        " in order to start only 'ios*' services w/o 'mds'"
            ;;
    esac

    # set positional parameters to IOS endpoints
    eval set -- "$ios_eps"

    for s in $services; do
        case $s in
            mds|singlenode) ep=$mds_ep ;;
            confd) ep=$confd_ep ;;
            ios*) ep=$1; shift ;;
        esac
        start mero-server SERVICE=$s EP=$ep SERVICES="$SERVICES"
    done
end script


post-stop script
    exec 1>>/var/log/mero.log 2>&1

    # TODO: just for debugging, remove when done
    #set -x

    source $service_funcs

    [ -r $user_config ] && source $user_config

    for s in $(m0_get_running_servers | grep -v confd); do
        stop mero-server SERVICE=$s
    done

    if [ -n "$(m0_get_running_servers | grep confd)" ] ; then
        stop mero-server SERVICE=confd
    fi
end script
