#!/usr/bin/env bash
set -eu
# set -x
export PS4='+ [${FUNCNAME[0]:+${FUNCNAME[0]}:}${LINENO}] '

###
### Gerrit reviews visualizer.
###
### This script generates HTML page with an interactive graph of ongoing
### Mero reviews.
###
### Usage:
###     scripts/gerrit-graph > reviews.html
###     open !$

GERRIT_SERVER=gerrit-sage.dco.colo.seagate.com

if [ -z "${GID:-}" ]; then
	GID=$(git remote -v 2>/dev/null | grep -m1 -Eo '[0-9]+@' | tr -d @)
	[ -n "$GID" ] || {
		echo "Please set \`GID' environment variable" >&2
		exit 1
	}
fi

gerrit() {
    ssh -p 29418 ${GID}@$GERRIT_SERVER gerrit "$@"
}

ls_users() {
	## Most of the data in this list is generated with the following
	## command:
	##     gerrit ls-members mero-core-users --recursive
	## See https://git.eclipse.org/r/Documentation/cmd-ls-members.html
	cat <<EOF
abrar.habib@seagate.com
alexander.vershilov@tweag.io
alp.mestanogullari@seagate.com
anatoliy.bilenko@seagate.com	anatoliy
andriy.tkachuk@seagate.com	andriy
andy.nimmo@seagate.com
arjun.hariharan@seagate.com
arnaud.spiwack@seagate.com
benjamin.clifford@seagate.com
bikrant.singh@seagate.com
brian.oki@seagate.com
david.adair@seagate.com
dmitriy.chumak@seagate.com	dima.c
dmytro.podgornyi@seagate.com	dpodgornyi
egor.nikulenkov@seagate.com
evgeny.exarevskiy@seagate.com
facundo.d.laumann@seagate.com
ganesan.umanesan@seagate.com
hua.huang@seagate.com	huanghua
igor.m.perelyotov@seagate.com	igor.perelyotov
igor.vartanov@seagate.com	ivartanov
ivan.tishchenko@seagate.com
james.s.morse@seagate.com
jean-philippe.bernardy@seagate.com
john.forgan@seagate.com
john.suykerbuyk@seagate.com
juan.gonzalez@seagate.com
kaustubh.deorukhkar@seagate.com
leonid.nikulin@seagate.com
madhav.vemuri@seagate.com	madhav
mandar.sawant@seagate.com	mandar
manish.honap@seagate.com
mateusz.kowalczyk@seagate.com
mathieu.j.boespflug@seagate.com
max.medved@seagate.com	max
mikhail.v.antropov@seagate.com
mikhail.v.pridushchenko@seagate.com
nachiket.sahasrabuddhe@seagate.com	nachiket
nicholas.clarke@seagate.com	nclarke
nikita.danilov@seagate.com	nikita
pratik.shinde@seagate.com
pritam.bhavsar@seagate.com
rahul.joshi@seagate.com
rajanikant.chirmade@seagate.com	rajanikant
rajesh.nambiar@seagate.com
sergey.shilov@seagate.com
sergey.vasilyev@seagate.com
sining.wu@seagate.com
stephen.d.salbato@seagate.com
subhash.arya@seagate.com	subhash.a
sushant.mane@seagate.com
swapnil.belapurkar@seagate.com
tim.pasek@seagate.com
trupti.patil@seagate.com	trupti
valery.vorotyntsev@seagate.com	vvv
vinayak.kale@seagate.com
vladimir.stepanchenko@seagate.com
yuriy.umanets@seagate.com	umka
yves.pares@seagate.com
EOF
}

gen_header() {
	cat <<EOF
<html>
<head><title>Mero Gerrit reviews graph</title>

  <script type="text/javascript"
   src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.19.1/vis.min.js"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/vis/4.19.1/vis.min.css"
   rel="stylesheet" type="text/css" />

  <style type="text/css">
    #mynetwork {
      width: 100%;
      height: 800;
      border: 1px solid lightgray;
    }
  </style>
</head>

<body>

<div id="mynetwork"></div>

<script type="text/javascript">
  var options = {
    groups: {
      users: {
        shape: 'box',
        color: { background: 'orange' }
      }
    },
    edges: { arrows: 'to' }
  };
EOF
}

gen_footer() {
	cat <<EOF
  var container = document.getElementById('mynetwork');
  var data = {
    nodes: nodes,
    edges: edges
  };
  var network = new vis.Network(container, data, options);

  network.on("click", function (params) {
    var n0 = params.nodes[0];
    if (n0 != null && n0 > 1000) {
       window.open('http://${GERRIT_SERVER}:8080/' + n0);
    }
  });
</script>

</body>
</html>
EOF
}

gen_uid() {
	local id=0
	ls_users | while read email alias; do
		if grep -q ":${email} " _owner-reviewer.out; then
		    echo $((++id)):${email}${alias:+:$alias}
		fi
	done
}

gen_js() {
	local IND='  '
	local IND2="${IND}${IND}"

	echo "${IND}var nodes = ["
	# users
	perl -lpe 's/@[^:]+//' _uid.out | # drop domain part of email addresses
	    awk -F: '{print $1, $NF}' | while read id user; do
		echo "${IND2}{id:${id}, label:'${user}', group:'users'},"
	done
	# changes
	cut -d' ' -f2- _owner-reviewer.out | tr , \\n | sort -u |
	    while read cid; do
		    echo "${IND2}{id:${cid}, label:'c/${cid}'},"
	    done
	echo "${IND}];"
	echo

	echo "${IND}var edges = ["
	for role in owner reviewer; do
		sed -n "s/^${role}://p" _owner-reviewer.out |
		    while read email changes; do
			    id=$(grep ":${email}" _uid.out | cut -d: -f1)
			    for cid in $(echo $changes | tr , ' '); do
				    if [ $role = 'owner' ]; then
					echo "${IND2}{from:${id}, to:${cid}," \
					     "color:'orange'},"
				    elif ! is_owner $email $cid; then
					echo "${IND2}{from:${cid}, to:${id}," \
					     "style:'arrow'},"
				    fi
			    done
		    done
	done
	echo "${IND}];"
}

is_owner() {
	grep -q "^owner:${1}.*${2}" _owner-reviewer.out
}

### ------------------------------------------------------------------
### main

DUPLICATES=$(ls_users | awk '{print $1}' | sort | uniq -d)
[ -z "$DUPLICATES" ] || {
    echo "**ERROR** Duplicates found:" >&2
    echo "$DUPLICATES" | sed 's/^/  /' >&2
    exit 1
}

if [ ! -s _owner-reviewer.out ]; then
    for email in $(ls_users | awk '{print $1}'); do
	    for role in owner reviewer; do
		    echo -n "${role}:${email} "
		    gerrit query "project:mero ${role}:${email} status:open" |
			awk '/number:/ {print $NF}' | tr \\n ,
		    echo
	    done | sed -n 's/,$//p'
    done | tee _owner-reviewer.out >&2  # tee(1) reports progress to stderr
fi

gen_uid >_uid.out

gen_header
echo
gen_js
echo
gen_footer

rm _uid.out
