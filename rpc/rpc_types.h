/* -*- C -*- */
/*
 * COPYRIGHT 2011 XYRATEX TECHNOLOGY LIMITED
 *
 * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
 * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
 * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
 * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
 * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
 * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
 * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
 *
 * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
 * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
 * http://www.xyratex.com/contact
 *
 * Original author: Alexey Lyashkov
 * Original creation date: 04/22/2010
 */

#ifndef __COLIBRI_RPC_TYPES_H__

#define __COLIBRI_RPC_TYPES_H__

#include <lib/cdefs.h>

/**
 @page rpc-types type definitions used in rpc library
 */

/**
 unique session identifier
 - generated by server and and should be don't used until we will be know that
   client will newer connected.
 */
struct c2_session_id {
	uint64_t id;
};

/**
 compare sessions identifier

 @param s1 first session identifier
 @param s2 second session identifier

 @retval true if session identifiers is same
 @retval false if session identifiers is different
*/
bool c2_session_is_same(const struct c2_session_id *s1,
			const struct c2_session_id *s2);


/**
 type to define slot id
*/
typedef uint32_t c2_slot_t;


/**
 type to define sequence in a slot
 */
typedef uint64_t c2_seq_t;

#endif
