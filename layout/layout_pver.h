/* -*- C -*- */
/*
 * COPYRIGHT 2015 XYRATEX TECHNOLOGY LIMITED
 *
 * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
 * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
 * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
 * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
 * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
 * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
 * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
 *
 * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
 * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
 * http://www.xyratex.com/contact
 *
 * Original author: Yuriy Umanets <yuriy.umanets@seagate.com>
 * Original creation date: 18/01/2015
 */

#pragma once

#ifndef __MERO_LAYOUT_LAYOUT_PVER_H__
#define __MERO_LAYOUT_LAYOUT_PVER_H__

/**
 * @defgroup layout_conf Layout Configuration.
 *
 * @page DLD-layout-from-conf-schema DLD of Layout Generation from Configuration
 *
 *  - @ref DLD-layout-from-conf-schema-ovw
 *  - @ref DLD-layout-from-conf-schema-highlights
 *  - @ref DLD-layout-from-conf-schema-def
 *  - @ref DLD-layout-from-conf-schema-req
 *  - @ref DLD-layout-from-conf_schema-depends
 *  - @ref DLD-layout-from-conf-schema-fspecs
 *  - @ref DLD-layout-from-conf-schema-lspec
 *  - @ref DLD-layout-from-conf-schema-st
 *
 * <hr>
 * @section DLD-layout-from-conf-schema-ovw Overview
 * For the sake of reference, this work is based on MERO-463 and uses some of
 * its APIs and infrastructure.
 *
 * The idea of this work is to generate layouts out of filesystem configuration
 * instead of hardcoding in a way its done these days. Layout generation should
 * be performed independently on both server and client sides. Given layout has
 * the same id on client and server, same layout can be used by both sides. This
 * can be done in reqh init time, when pools and pool versions are initialized.
 *
 * <hr>
 * @section  DLD-layout-from-conf-schema-def Definitions
 * @b Pool is a set of hardware resources.
 * @b Pool Version Change set for pool.
 * @b Layout Binary version of pool version ready for use.
 *
 * <hr>
 * @section DLD-layout-from-conf-schema-highlights Design Highlights
 * Given pool versions are related to layouts they describe, it makes sense to
 * generate layouts in same code path when corresponding pool version is ready
 * and populated. As per now, this can be done in m0t1fs_pool_find() when new
 * pool version is initialized by m0_pool_version_init_by_conf(), which is done
 * on-demand. After more discussions it was decided that all the pools, their
 * versions along with the layouts should be populated on bootstrap on client
 * and server. On client this can be done in mount code path and on server - on
 * layout domain init code path. Given all said above, current on-demand code in
 * MERO-463 should be re-worked to do all things in one place.
 *
 * When this is done, server and client will have own lists of layouts available
 * and can access them using layout id communicated between server and client.
 *
 * <hr>
 * @section DLD-layout-from-conf-schema-req Requirements
 * @b r.layout.conf
 *   All the pool versions available in configuration should be populated as a
 *   precondition on client and server
 * @b r.layout.conf.all_versions
 *   All the avaialble layouts should be generated by implementation, not only
 *   one currently in use
 * @b r.layout.conf.interface
 *   Interface for accessing generated layouts should be provided by the
 *   implementation
 * @b r.layout.conf.startup
 *   Generation of layouts should be done on startup
 *
 * <hr>
 * @section DLD-layout-from-conf_schema-depends Dependencies
 * MERO-463 API and infrastructure should be available before coding can be
 * started.
 *
 * <hr>
 * @section DLD-layout-from-conf-schema-fspecs Functional Specifications
 * @subsection DLD-layout-from-conf-schema-fspecs-data Data Structures
 *
 * @ref generated-layout-list Defined as The List of generated layouts
 *
 * @ref generated-layout-list.lock Defined as The Lock protecting the list
 * of generated layouts
 *
 * @subsection DLD-layout-from-conf-schema-fspecs-if Interfaces
 *
 * - m0_layout_init_by_pver
 *
 * <hr>
 * @section DLD-layout-from-conf-schema-lspec Logical Specifications
 *
 * @subsection DLD-layout-from-conf-schema-lspec-layout-init-by-pver Generate
 * Layouts. Provides interface to generate layout from pver.
 *
 * <hr>
 *  @section DLD-layout-from-conf-schema-st System Tests
 *  All tests are covered by existing system tests.
 * @{
 */

struct m0_layout_domain;
struct m0_pool_version;

/**
 * Generate layout out of passed @pv pool version.
 */
M0_INTERNAL int m0_layout_init_by_pver(struct m0_layout_domain *dom,
                                       struct m0_pool_version *pv,
                                       int *count);

extern int m0_lid_to_unit_map[];
extern const int m0_lid_to_unit_map_nr;

/** @} end group layout_conf */

/* __MERO_LAYOUT_LAYOUT_PVER_H__ */
#endif

/*
 *  Local variables:
 *  c-indentation-style: "K&R"
 *  c-basic-offset: 8
 *  tab-width: 8
 *  fill-column: 80
 *  scroll-step: 1
 *  End:
 */
