This document contains a list of small code-level tasks that require no further
design. The intention is that people take tasks from the list to avoid being
blocked. Synchronization of concurrent list updates is through email. Task is
moved into IN-PROGRESS section after someone has started working on it.
Completed tasks are moved into DONE section. The list is populated by team and
sub-team leads, contact them to add more things here.

                          ***** TODO *****

2012-May-10 Embed c2_sm in c2_rpc_{session,conn,item}

2012-May-15 Add mnemonic tags to doc/todo items for ease of reference.

2012-Jul-26 Replace atomic c2_fom_domain::fd_foms_nr with
            c2_fom_domain_is_idle() function that iterates over all localities
            and checks that queues are empty.

2012-Sep-04 Non-atomic trace

    lib/trace.c uses a global shared atomic variable to allocate space in the
    trace buffer. This introduces cache contention between cores. Eliminate the
    contention by allocating a separate buffer for each core. Find out how to do
    this in user space (assembly is allowed). In kernel, use per-cpu
    variables. Each core should still use an atomic variable, because tracing
    can be called asynchronously from signal or interrupt handler. In user
    space, each buffer should be mapped to a separate file. Modify
    initialisation and parsing code accordingly.

2012-Sep-16  UT memory leaks
    [Added-by: vvv]

    Plug memory leaks, reported by UT.  Check `Leaked:' lines of UT
    output; any non-zero value may denote a defect.

    A leakage in test suite "foo-ut" can be investigated with command
        valgrind --leak-check=full utils/.libs/lt-ut -t foo-ut

                          ***** IN-PROGRESS *****

2012-Jul-26 Use type-safe lists in fom.[ch].

2012-Sep-04 External lock in c2_chan.

    c2_chan::ch_guard is used to protect list of channel waiters
    (c2_chan::ch_links). However, in majority of cases, this list is accessed
    when some other lock is already held. This results in taking and releasing
    lock for no actual reason.

    Remove ->ch_guard and modify c2_chan interface to take a pointer to an
    external lock as a parameter to c2_chan_init(). Check that this lock is held
    when c2_clink_{add,del}(), c2_chan_{signal,broadcast}(), &c. are
    called. c2_chan_wait() and c2_clink_signal() do not need the lock.

    The same lock protects the lock invariant and it should be temporarily taken
    to check the invariant, if necessary.

    Identify locks protecting existing channels and add such locks when there is
    none.

2012-Sep-05 Usage of c2_*_awkward() with signal handler and intrupt handler.

                          ***** DONE *****

2012-Oct-05 [Rajanikant]  Add lib/thread.h:c2_is_awkward(), implement in kernel
	    and user space. Tag code. c2_is_awkward() should return true iff the
            context is unsafe for blocking and locking (interrupt handler,
            signal handler, timer call-back, chan call-back, &c.).
            In kernel this is in_irq(). In user space, this should be based on
            pthread_getspecific(). Timer and chan call-backs should be handled.

	    Timer & chan call-backs handled.
	   

2012-May-09 [Dima] Replace all debugging printf-s and printk-s with C2_LOG()-s

2012-Jul-26 [Dave] Call c2_processors_init() in c2_init(). Get rid of explicit
            c2_processors_init() calls.

2012-Jul-26 [Dave] c2_time_t is now a scalar with architecture-independent
            semantics (nanoseconds since epoch). Replace calls to
            c2_time_{before,after,...}() with direct comparisons.

2012-May-04 [Amit] .gdbinit macros for basic Colibri structures

    Add to core/.gdbinit file gdb macros to display core Colibri structures:
    lists, vectors, &c. Preferably, the macros should be placed in .gdbinit
    files, located in the corresponding modules, with top-level .gdbinit loading
    them.

2012-May-04 Add all magic numbers to doc/magix

2012-May-04 Use tailored type-safe lists in reqh_service.c

    Use lists based on C2_TL_{DEFINE,DESCR}()

2012-May-04 Use tailored type-safe lists in colibri_setup.c

    Use lists based on C2_TL_{DEFINE,DESCR}()

2012-May-22 Use tailored type safe lists in rpc

    Use lists based on C2_TL_{DEFINE,DESCR}()

2012-May-14 Use #pragma once in headers [2012-Aug-01]

2012-Jul-26 Use gcc builtins __sync_fetch_and_add, ... for use-space
            c2_atomic64. Check first, that this is supported by our target
            compiler version [2012-Aug-07]

2012-Aug-22 Add c2_ut_ prefixes to all non-static unit test functions.

2012-Jul-26 addb context should be embedded in reqh.
2012-Sep-04 addb context should be embedded in reqh, instead of being referenced
            by pointer (c2_reqh::rh_addb).

2012-Aug-01 -include "config.h"

    Add `-include "config.h"' compiler option (possibly to CFLAGS of
    configure.ac). Delete `#include "config.h"' directives from source
    files; remove the corresponding stanza from doc/source-structure.

2012-Jul-26 Get rid of c2_fom::fo_fol, use fom->fo_loc->fl_dom->fd_reqh->rh_fol
            instead. [2012-Sep-04]

2012-Aug-28 Magic delimiters [2012-Sep-10]

    Change magic values to follow 0x33xxxxxxxxxxxx77 pattern.
    Such "delimiters" are supposed to increase discoverability of
    magic values in a memory dump.

    Numbers 0x33 and 0x77 originate from Nikita's response to "magic
    numbers generator" thread[1].  Magic values can be generated with
    vvv's script[2].

        [1] https://groups.google.com/a/xyratex.com/forum/#!msg/grp-colibri-dev/q6BpJsA4hSU/_jzBzjKeMbYJ
        [2] https://github.com/vvv/dotfiles/blob/master/bin/magic-gen.pl
