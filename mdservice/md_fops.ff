/* -*- C -*- */
/*
 * COPYRIGHT 2011 XYRATEX TECHNOLOGY LIMITED
 *
 * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
 * HEREIN, ARE THE EXCLUSIVE PROPERTY OF XYRATEX TECHNOLOGY
 * LIMITED, ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
 * THE PRIOR WRITTEN PERMISSION OF XYRATEX TECHNOLOGY LIMITED,
 * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
 * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
 * EXCEPT AS ALLOWED BY THE TERMS OF XYRATEX LICENSES AND AGREEMENTS.
 *
 * YOU SHOULD HAVE RECEIVED A COPY OF XYRATEX'S LICENSE ALONG WITH
 * THIS RELEASE. IF NOT PLEASE CONTACT A XYRATEX REPRESENTATIVE
 * http://www.xyratex.com/contact
 *
 * Original author: Yuriy Umanets <yuriy_umanets@xyratex.com>
 * Original creation date: 03/29/2011
 */

/**
   @addtogroup mdservice-fops-definition Metadata Fops Definition
   @{
 */

/** @file md_fops.ff
 *
 * <b>Colibri metatadata fop formats</b>
 *
 */

require "fid/fid_xc";
require "fid/fid";

sequence {
        u32 s_len;
        u8  s_buf
} c2_fop_str;

record {
        u32 b_rc;
        u64 b_index;
        u64 b_version;
        u32 b_flags;
        u32 b_valid;
        u32 b_mode;
        u64 b_size;
        u64 b_blksize;
        u64 b_blocks;
        u32 b_nlink;
        u32 b_uid;
        u32 b_gid;
        u32 b_sid;
        u64 b_nid;
        u32 b_rdev;
        u32 b_atime;
        u32 b_mtime;
        u32 b_ctime;
        c2_fid b_pfid;
        c2_fid b_tfid
} c2_fop_cob;

record {
        c2_fop_cob c_body;
        c2_fop_str c_target;
        c2_fop_str c_path;
        c2_fop_str c_name
} c2_fop_create;

record {
        c2_fop_cob c_body
} c2_fop_create_rep;

record {
        c2_fop_cob l_body;
        c2_fop_str l_path;
        c2_fop_str l_name
} c2_fop_lookup;

record {
        c2_fop_cob l_body
} c2_fop_lookup_rep;

record {
        c2_fop_cob l_body;
        c2_fop_str l_spath;
        c2_fop_str l_tpath;
        c2_fop_str l_name
} c2_fop_link;

record {
        c2_fop_cob l_body
} c2_fop_link_rep;

record {
        c2_fop_cob u_body;
        c2_fop_str u_path;
        c2_fop_str u_name
} c2_fop_unlink;

record {
        c2_fop_cob u_body
} c2_fop_unlink_rep;

record {
        c2_fop_cob r_sbody;
        c2_fop_cob r_tbody;
        c2_fop_str r_spath;
        c2_fop_str r_tpath;
        c2_fop_str r_sname;
        c2_fop_str r_tname
} c2_fop_rename;

record {
        c2_fop_cob r_body
} c2_fop_rename_rep;

record {
        c2_fop_str o_path;
        c2_fop_cob o_body
} c2_fop_open;

record {
        c2_fop_cob o_body
} c2_fop_open_rep;

record {
        c2_fop_cob c_body;
        c2_fop_str c_path
} c2_fop_close;

record {
        c2_fop_cob c_body
} c2_fop_close_rep;

record {
        c2_fop_cob s_body;
        c2_fop_str s_path
} c2_fop_setattr;

record {
        c2_fop_cob s_body
} c2_fop_setattr_rep;

record {
        c2_fop_cob g_body;
        c2_fop_str g_path
} c2_fop_getattr;

record {
        c2_fop_cob g_body
} c2_fop_getattr_rep;

record {
        c2_fop_cob r_body;
        c2_fop_str r_path;
        c2_fop_str r_pos
} c2_fop_readdir;

sequence {
        u32 b_count;
        u8  b_addr
} c2_fop_buf;

record {
        c2_fop_str r_end;
        c2_fop_cob r_body;
        c2_fop_buf r_buf
} c2_fop_readdir_rep;

record {
        u64        f_flags
} c2_fop_statfs;

record {
        u32        f_rc;
        u64        f_type;
        u32        f_bsize;
        u64        f_blocks;
        u64        f_bfree;
        u64        f_bavail;
        u64        f_files;
        u64        f_ffree;
        u32        f_namelen;
        c2_fid     f_root
} c2_fop_statfs_rep;

/** @} end of fop group */

/*
 *  Local variables:
 *  c-indentation-style: "K&R"
 *  c-basic-offset: 8
 *  tab-width: 8
 *  fill-column: 80
 *  scroll-step: 1
 *  End:
 */
